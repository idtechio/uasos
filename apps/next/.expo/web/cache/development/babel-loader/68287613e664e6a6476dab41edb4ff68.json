{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"color\", \"indeterminate\", \"style\", \"progress\", \"visible\", \"theme\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _theming = require(\"../core/theming\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = _reactNative.I18nManager.isRTL;\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var color = _ref.color,\n      indeterminate = _ref.indeterminate,\n      style = _ref.style,\n      _ref$progress = _ref.progress,\n      progress = _ref$progress === void 0 ? 0 : _ref$progress,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(0)),\n      fade = _React$useRef2.current;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevWidth = _React$useState4[0],\n      setPrevWidth = _React$useState4[1];\n\n  var indeterminateAnimation = React.useRef(null);\n  var scale = theme.animation.scale;\n  var startAnimation = React.useCallback(function () {\n    _reactNative.Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = _reactNative.Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          useNativeDriver: _reactNative.Platform.OS !== 'web',\n          isInteraction: false\n        });\n      }\n\n      timer.setValue(0);\n\n      _reactNative.Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      _reactNative.Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n  var stopAnimation = React.useCallback(function () {\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    _reactNative.Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n  }, [fade, scale]);\n  React.useEffect(function () {\n    if (visible) startAnimation();else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n  React.useEffect(function () {\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  var onLayout = function onLayout(event) {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  var tintColor = color || theme.colors.primary;\n  var trackTintColor = (0, _color.default)(tintColor).alpha(0.38).rgb().string();\n  return React.createElement(_reactNative.View, _extends({\n    onLayout: onLayout\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: visible\n    },\n    accessibilityValue: indeterminate ? {} : {\n      min: 0,\n      max: 100,\n      now: progress * 100\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    style: [styles.container, {\n      backgroundColor: trackTintColor,\n      opacity: fade\n    }, style]\n  }, width ? React.createElement(_reactNative.Animated.View, {\n    style: [styles.progressBar, {\n      width: width,\n      backgroundColor: tintColor,\n      transform: [{\n        translateX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n        })\n      }, {\n        scaleX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [0.0001, 1]\n        })\n      }]\n    }]\n  }) : null));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\n\nvar _default = (0, _theming.withTheme)(ProgressBar);\n\nexports.default = _default;","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","progress","visible","rest","current","timer","React","Animated","fade","indeterminateAnimation","scale","theme","startAnimation","duration","toValue","useNativeDriver","isInteraction","Platform","stopAnimation","prevWidth","onLayout","event","setPrevWidth","setWidth","tintColor","color","trackTintColor","busy","indeterminate","min","max","now","styles","backgroundColor","opacity","width","transform","translateX","inputRange","outputRange","scaleX","container","height","overflow","progressBar","flex"],"mappings":";;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAWA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMA,sBAAsB,GAA5B,IAAA;AACA,IAAMC,uBAAuB,GAA7B,GAAA;AACA,IAAQC,KAAR,GAAkBC,YAAAA,CAAlB,WAAA,CAAQD,KAAR;;AAqBA,IAAME,WAAW,GAAG,SAAdA,WAAc,OAQP;AAAA,MARQ,KAQR,QARQ,KAQR;AAAA,MARQ,aAQR,QARQ,aAQR;AAAA,MARQ,KAQR,QARQ,KAQR;AAAA,2BAJXC,QAIW;AAAA,MAJXA,QAIW,8BARQ,CAQR;AAAA,0BAHXC,OAGW;AAAA,MAHXA,OAGW,6BARQ,IAQR;AAAA,MARQ,KAQR,QARQ,KAQR;AAAA,MADRC,IACQ;;AACX,sBAA2BG,KAAK,CAALA,MAAAA,CACzB,IAAIC,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CADF,CACE,CADyBD,CAA3B;AAAA,MAAiBD,KAAjB,iBAAQD,OAAR;;AAGA,uBAA0BE,KAAK,CAALA,MAAAA,CAA6B,IAAIC,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAAvD,CAAuD,CAA7BD,CAA1B;AAAA,MAAiBE,IAAjB,kBAAQJ,OAAR;;AACA,wBAA0BE,KAAK,CAALA,QAAAA,CAA1B,CAA0BA,CAA1B;AAAA;AAAA,MAAM,KAAN;AAAA,MAAM,QAAN;;AACA,yBAAkCA,KAAK,CAALA,QAAAA,CAAlC,CAAkCA,CAAlC;AAAA;AAAA,MAAM,SAAN;AAAA,MAAM,YAAN;;AAEA,MAAMG,sBAAsB,GAAGH,KAAK,CAALA,MAAAA,CAA/B,IAA+BA,CAA/B;AAIA,MAAQI,KAAR,GAAkBC,KAAK,CAAvB,SAAA,CAAQD,KAAR;AAEA,MAAME,cAAc,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;AAE7CL,IAAAA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA,EAAsB;AACpBM,MAAAA,QAAQ,EAAE,MADU,KAAA;AAEpBC,MAAAA,OAAO,EAFa,CAAA;AAGpBC,MAAAA,eAAe,EAHK,IAAA;AAIpBC,MAAAA,aAAa,EAAE;AAJK,KAAtBT,EAF6C,KAE7CA;;AAQA,QAAA,aAAA,EAAmB;AACjB,UAAI,CAACE,sBAAsB,CAA3B,OAAA,EAAqC;AACnCA,QAAAA,sBAAsB,CAAtBA,OAAAA,GAAiC,YAAA,CAAA,QAAA,CAAA,MAAA,CAAA,KAAA,EAAuB;AACtDI,UAAAA,QAAQ,EAD8C,sBAAA;AAEtDC,UAAAA,OAAO,EAF+C,CAAA;AAItDC,UAAAA,eAAe,EAAEE,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAJqC,KAAA;AAKtDD,UAAAA,aAAa,EAAE;AALuC,SAAvB,CAAjCP;AAFe;;AAYjBJ,MAAAA,KAAK,CAALA,QAAAA,CAAAA,CAAAA;;AAEAE,MAAAA,YAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAcE,sBAAsB,CAApCF,OAAAA,EAAAA,KAAAA;AAdF,KAAA,MAeO;AACLA,MAAAA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,KAAAA,EAAuB;AACrBM,QAAAA,QAAQ,EAAE,MADW,KAAA;AAErBC,QAAAA,OAAO,EAAEb,QAAQ,GAAA,QAAA,GAFI,CAAA;AAGrBc,QAAAA,eAAe,EAHM,IAAA;AAIrBC,QAAAA,aAAa,EAAE;AAJM,OAAvBT,EAAAA,KAAAA;AAMD;AAhCoB,GAAA,EAiCpB,CAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAjCH,IAiCG,CAjCoB,CAAvB;AAmCA,MAAMW,aAAa,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;AAE5C,QAAIT,sBAAsB,CAA1B,OAAA,EAAoC;AAClCA,MAAAA,sBAAsB,CAAtBA,OAAAA,CAAAA,IAAAA;AACD;;AAEDF,IAAAA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA,EAAsB;AACpBM,MAAAA,QAAQ,EAAE,MADU,KAAA;AAEpBC,MAAAA,OAAO,EAFa,CAAA;AAGpBC,MAAAA,eAAe,EAHK,IAAA;AAIpBC,MAAAA,aAAa,EAAE;AAJK,KAAtBT,EAAAA,KAAAA;AANoB,GAAA,EAYnB,CAAA,IAAA,EAZH,KAYG,CAZmB,CAAtB;AAcAD,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAA,OAAA,EAAaM,cAAb,GAAA,KACKM,aAAa;AAFpBZ,GAAAA,EAGG,CAAA,OAAA,EAAA,cAAA,EAHHA,aAGG,CAHHA;AAKAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AAEpB,QAAIJ,OAAO,IAAIiB,SAAS,KAAxB,CAAA,EAAgC;AAC9BP,MAAAA,cAAc;AACf;AAJHN,GAAAA,EAKG,CAAA,SAAA,EAAA,cAAA,EALHA,OAKG,CALHA;;AAOA,MAAMc,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,KAAD,EAA8B;AAC7CC,IAAAA,YAAY,CAAZA,KAAY,CAAZA;AACAC,IAAAA,QAAQ,CAACF,KAAK,CAALA,WAAAA,CAAAA,MAAAA,CAATE,KAAQ,CAARA;AAFF,GAAA;;AAKA,MAAMC,SAAS,GAAGC,KAAK,IAAId,KAAK,CAALA,MAAAA,CAA3B,OAAA;AACA,MAAMe,cAAc,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAvB,MAAuB,EAAvB;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,QAAQ,EAAEN;AADZ,GAAA,EAAA,IAAA,EAAA;AAGE,IAAA,UAAU,EAHZ,IAAA;AAIE,IAAA,iBAAiB,EAJnB,aAAA;AAKE,IAAA,kBAAkB,EAAE;AAAEO,MAAAA,IAAI,EAAEzB;AAAR,KALtB;AAME,IAAA,kBAAkB,EAChB0B,aAAa,GAAA,EAAA,GAAQ;AAAEC,MAAAA,GAAG,EAAL,CAAA;AAAUC,MAAAA,GAAG,EAAb,GAAA;AAAoBC,MAAAA,GAAG,EAAE9B,QAAQ,GAAG;AAApC;AAPzB,GAAA,CAAA,EAUE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAC,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACL+B,MAAM,CADD,SAAA,EAEL;AAAEC,MAAAA,eAAe,EAAjB,cAAA;AAAmCC,MAAAA,OAAO,EAAE1B;AAA5C,KAFK,EAAA,KAAA;AADT,GAAA,EAOG2B,KAAK,GACJ,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAC,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLH,MAAM,CADD,WAAA,EAEL;AACEG,MAAAA,KADF,EACEA,KADF;AAEEF,MAAAA,eAAe,EAFjB,SAAA;AAGEG,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,UAAU,EAAE,KAAK,CAAL,WAAA,CACVT,aAAa,GACT;AACEU,UAAAA,UAAU,EAAE,CAAA,CAAA,EAAA,GAAA,EADd,CACc,CADd;AAEEC,UAAAA,WAAW,EAAE,CACX,CAACzC,KAAK,GAAA,CAAA,GAAO,CAAb,CAAA,IAAA,GAAA,GADW,KAAA,EAEX,CAACA,KAAK,GAAA,CAAA,GAAO,CAAb,CAAA,IAAA,GAAA,GAAA,uBAAA,GAFW,KAAA,EAMX,CAACA,KAAK,GAAG,CAAH,CAAA,GAAN,CAAA,IAAA,GAAA,GANW,KAAA;AAFf,SADS,GAYT;AACEwC,UAAAA,UAAU,EAAE,CAAA,CAAA,EADd,CACc,CADd;AAEEC,UAAAA,WAAW,EAAE,CAAC,CAACzC,KAAK,GAAA,CAAA,GAAO,CAAb,CAAA,IAAA,GAAA,GAAD,KAAA,EAAA,CAAA;AAFf,SAbM;AADd,OADS,EAqBT;AAEE0C,QAAAA,MAAM,EAAE,KAAK,CAAL,WAAA,CACNZ,aAAa,GACT;AACEU,UAAAA,UAAU,EAAE,CAAA,CAAA,EAAA,GAAA,EADd,CACc,CADd;AAEEC,UAAAA,WAAW,EAAE,CAAA,MAAA,EAAA,uBAAA,EAAA,MAAA;AAFf,SADS,GAST;AACED,UAAAA,UAAU,EAAE,CAAA,CAAA,EADd,CACc,CADd;AAEEC,UAAAA,WAAW,EAAE,CAAA,MAAA,EAAA,CAAA;AAFf,SAVE;AAFV,OArBS;AAHb,KAFK;AADT,GAAA,CADI,GAlBZ,IAWI,CAVF,CADF;AA3FF,CAAA;;AAqKA,IAAMP,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BS,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EADG,CAAA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAM/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE;AADK;AANkB,CAAlB,CAAf;;eAWe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,WAAA,C","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation = React.useRef<Animated.CompositeAnimation | null>(\n    null\n  );\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"script"}