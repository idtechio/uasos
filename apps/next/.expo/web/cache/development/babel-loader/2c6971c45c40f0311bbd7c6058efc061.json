{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Card from \"../Card\";\nimport { CenterBox, Curtain } from \"./style\";\n\nvar CardModal = function CardModal(_ref) {\n  var cardStyle = _ref.cardStyle,\n      children = _ref.children,\n      onModalClose = _ref.onModalClose,\n      _ref$closeable = _ref.closeable,\n      closeable = _ref$closeable === void 0 ? true : _ref$closeable;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible || !closeable,\n    onRequestClose: function onRequestClose() {\n      if (closeable) {\n        setModalVisible(false);\n        onModalClose == null ? void 0 : onModalClose();\n      }\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(false);\n    }\n  }, React.createElement(CenterBox, {\n    style: styles.wrapper\n  }, React.createElement(Curtain, {\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    }\n  }), React.createElement(Card, {\n    style: [styles.card, {\n      width: width - 30,\n      maxHeight: height - 40\n    }, cardStyle]\n  }, children)))));\n};\n\nvar styles = StyleSheet.create({\n  card: {\n    maxWidth: 600,\n    overflowY: \"auto\"\n  },\n  wrapper: _objectSpread(_objectSpread({\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\"\n  }, StyleSheet.absoluteFillObject), {}, {\n    position: Platform.OS === \"web\" ? \"fixed\" : \"absolute\"\n  })\n});\nexport default CardModal;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/CardModal/index.tsx"],"names":["React","useState","Card","CenterBox","Curtain","CardModal","cardStyle","children","onModalClose","closeable","modalVisible","setModalVisible","useWindowDimensions","width","height","styles","wrapper","event","stopPropagation","card","maxHeight","StyleSheet","create","maxWidth","overflowY","backgroundColor","absoluteFillObject","position","Platform","OS"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,OAAOC,IAAP;AAEA,SAASC,SAAT,EAAoBC,OAApB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAKI;AAAA,MAJpBC,SAIoB,QAJpBA,SAIoB;AAAA,MAHpBC,QAGoB,QAHpBA,QAGoB;AAAA,MAFpBC,YAEoB,QAFpBA,YAEoB;AAAA,4BADpBC,SACoB;AAAA,MADpBA,SACoB,+BADR,IACQ;;AACpB,kBAAwCR,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AACA,6BAA0BC,mBAAmB,EAA7C;AAAA,MAAQC,KAAR,wBAAQA,KAAR;AAAA,MAAeC,MAAf,wBAAeA,MAAf;;AAEA,SACE,0CACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,MADhB;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,OAAO,EAAEJ,YAAY,IAAI,CAACD,SAH5B;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpB,UAAIA,SAAJ,EAAe;AACbE,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAH,QAAAA,YAAY,QAAZ,YAAAA,YAAY;AACb;AACF;AATH,KAWE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMG,eAAe,CAAC,KAAD,CAArB;AAAA;AAAnC,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEI,MAAM,CAACC;AAAzB,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,aAAWA,KAAK,CAACC,eAAN,EAAX;AAAA;AAAlB,IADF,EAEE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLH,MAAM,CAACI,IADF,EAEL;AACEN,MAAAA,KAAK,EAAEA,KAAK,GAAG,EADjB;AAEEO,MAAAA,SAAS,EAAEN,MAAM,GAAG;AAFtB,KAFK,EAMLR,SANK;AADT,KAaGC,QAbH,CAFF,CADF,CAXF,CADF,CADF;AAoCD,CA7CD;;AA+CA,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,SAAS,EAAE;AAFP,GADyB;AAK/BR,EAAAA,OAAO;AACLS,IAAAA,eAAe,EAAE;AADZ,KAEFJ,UAAU,CAACK,kBAFT;AAGLC,IAAAA,QAAQ,EACNC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAyB,OAAzB,GAA6D;AAJ1D;AALwB,CAAlB,CAAf;AAaA,eAAexB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport Card from \"../Card\";\n\nimport { CenterBox, Curtain } from \"./style\";\nimport { CardModalProps } from \"./types\";\n\nconst CardModal = ({\n  cardStyle,\n  children,\n  onModalClose,\n  closeable = true,\n}: CardModalProps) => {\n  const [modalVisible, setModalVisible] = useState(true);\n  const { width, height } = useWindowDimensions();\n\n  return (\n    <>\n      <Modal\n        animationType=\"fade\"\n        transparent\n        visible={modalVisible || !closeable}\n        onRequestClose={() => {\n          if (closeable) {\n            setModalVisible(false);\n            onModalClose?.();\n          }\n        }}\n      >\n        <TouchableWithoutFeedback onPress={() => setModalVisible(false)}>\n          <CenterBox style={styles.wrapper}>\n            <Curtain onClick={(event) => event.stopPropagation()} />\n            <Card\n              style={[\n                styles.card,\n                {\n                  width: width - 30,\n                  maxHeight: height - 40,\n                },\n                cardStyle,\n              ]}\n            >\n              {/* <CloseIconWrapper onPress={() => setModalVisible(false)}>\n                <CrossIcon />\n              </CloseIconWrapper> */}\n              {children}\n            </Card>\n          </CenterBox>\n        </TouchableWithoutFeedback>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    maxWidth: 600,\n    overflowY: \"auto\",\n  },\n  wrapper: {\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n    ...StyleSheet.absoluteFillObject,\n    position:\n      Platform.OS === \"web\" ? (\"fixed\" as unknown as \"relative\") : \"absolute\",\n  },\n});\n\nexport default CardModal;\n"]},"metadata":{},"sourceType":"module"}