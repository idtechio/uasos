{"ast":null,"code":"import React from \"react\";\nimport { RadioButtonContainer, RadioButtonOuterCircle, RadioButtonInnerCircle, RadioButtonLabel } from \"./style\";\n\nvar RadioButton = function RadioButton(_ref) {\n  var isSelected = _ref.isSelected,\n      radius = _ref.radius,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      labelText = _ref.labelText,\n      onPress = _ref.onPress;\n  return React.createElement(RadioButtonContainer, {\n    onPress: onPress\n  }, React.createElement(RadioButtonOuterCircle, {\n    radius: radius,\n    color: color,\n    borderWidth: borderWidth\n  }, isSelected && React.createElement(RadioButtonInnerCircle, {\n    radius: radius,\n    color: color\n  })), React.createElement(RadioButtonLabel, null, labelText));\n};\n\nexport default RadioButton;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Forms/RadioButton/index.tsx"],"names":["React","RadioButtonContainer","RadioButtonOuterCircle","RadioButtonInnerCircle","RadioButtonLabel","RadioButton","isSelected","radius","color","borderWidth","labelText","onPress"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,gBAJF;;AAgBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOa;AAAA,MAN/BC,UAM+B,QAN/BA,UAM+B;AAAA,MAL/BC,MAK+B,QAL/BA,MAK+B;AAAA,MAJ/BC,KAI+B,QAJ/BA,KAI+B;AAAA,MAH/BC,WAG+B,QAH/BA,WAG+B;AAAA,MAF/BC,SAE+B,QAF/BA,SAE+B;AAAA,MAD/BC,OAC+B,QAD/BA,OAC+B;AAC/B,SACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEA;AAA/B,KACE,oBAAC,sBAAD;AACE,IAAA,MAAM,EAAEJ,MADV;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,WAAW,EAAEC;AAHf,KAKGH,UAAU,IAAI,oBAAC,sBAAD;AAAwB,IAAA,MAAM,EAAEC,MAAhC;AAAwC,IAAA,KAAK,EAAEC;AAA/C,IALjB,CADF,EAQE,oBAAC,gBAAD,QAAmBE,SAAnB,CARF,CADF;AAYD,CApBD;;AAsBA,eAAeL,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  RadioButtonContainer,\n  RadioButtonOuterCircle,\n  RadioButtonInnerCircle,\n  RadioButtonLabel,\n} from \"./style\";\n\ninterface RadioButtonPropsInterface {\n  isSelected?: boolean;\n  radius?: number;\n  borderWidth?: number;\n  color?: string;\n  labelText?: string;\n  onPress: () => void;\n}\n\nconst RadioButton = ({\n  isSelected,\n  radius,\n  color,\n  borderWidth,\n  labelText,\n  onPress,\n}: RadioButtonPropsInterface) => {\n  return (\n    <RadioButtonContainer onPress={onPress}>\n      <RadioButtonOuterCircle\n        radius={radius}\n        color={color}\n        borderWidth={borderWidth}\n      >\n        {isSelected && <RadioButtonInnerCircle radius={radius} color={color} />}\n      </RadioButtonOuterCircle>\n      <RadioButtonLabel>{labelText}</RadioButtonLabel>\n    </RadioButtonContainer>\n  );\n};\n\nexport default RadioButton;\n"]},"metadata":{},"sourceType":"module"}