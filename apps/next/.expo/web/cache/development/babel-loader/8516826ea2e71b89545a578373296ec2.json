{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nexport default React.forwardRef(function (props, ref) {\n  return React.createElement(View, _extends({\n    ref: ref,\n    accessibilityRole: \"button\"\n  }, props));\n});","map":{"version":3,"sources":["GestureHandlerButton.web.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAGA,eAAe,KAAK,CAAL,UAAA,CAAuB,UAAA,KAAA,EAAA,GAAA;AAAA,SACpC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,GAAG,EAAT,GAAA;AAAgB,IAAA,iBAAiB,EAAC;AAAlC,GAAA,EADF,KACE,CAAA,CADoC;AAAA,CAAvB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef<View>((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n"]},"metadata":{},"sourceType":"module"}