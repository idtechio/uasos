{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    (0, _invariant.default)(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (_ExecutionEnvironment.canUseDOM) {\n        (0, _invariant.default)(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!_ExecutionEnvironment.canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexports.default = Dimensions;\n\nif (_ExecutionEnvironment.canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-web/dist/cjs/exports/Dimensions/index.js"],"names":["exports","__esModule","default","_ExecutionEnvironment","require","_invariant","_interopRequireDefault","obj","dimensions","window","fontScale","height","scale","width","screen","listeners","Dimensions","get","dimension","set","initialDimensions","canUseDOM","_update","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","Array","isArray","forEach","handler","addEventListener","type","push","removeEventListener","filter","_handler","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,+BAAD,CAAnC;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,oBAAD,CAAR,CAAvC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAW/F,IAAIC,UAAU,GAAG;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,CADL;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,KAAK,EAAE,CAHD;AAINC,IAAAA,KAAK,EAAE;AAJD,GADO;AAOfC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,SAAS,EAAE,CADL;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,KAAK,EAAE,CAHD;AAINC,IAAAA,KAAK,EAAE;AAJD;AAPO,CAAjB;AAcA,IAAIE,SAAS,GAAG,EAAhB;;AAEA,IAAIC,UAAU,GAAgB,YAAY;AACxC,WAASA,UAAT,GAAsB,CAAE;;AAExBA,EAAAA,UAAU,CAACC,GAAX,GAAiB,SAASA,GAAT,CAAaC,SAAb,EAAwB;AACvC,KAAC,GAAGb,UAAU,CAACH,OAAf,EAAwBM,UAAU,CAACU,SAAD,CAAlC,EAA+C,8BAA8BA,SAA7E;AACA,WAAOV,UAAU,CAACU,SAAD,CAAjB;AACD,GAHD;;AAKAF,EAAAA,UAAU,CAACG,GAAX,GAAiB,SAASA,GAAT,CAAaC,iBAAb,EAAgC;AAC/C,QAAIA,iBAAJ,EAAuB;AACrB,UAAIjB,qBAAqB,CAACkB,SAA1B,EAAqC;AACnC,SAAC,GAAGhB,UAAU,CAACH,OAAf,EAAwB,KAAxB,EAA+B,yCAA/B;AACD,OAFD,MAEO;AACL,YAAIkB,iBAAiB,CAACN,MAAlB,IAA4B,IAAhC,EAAsC;AACpCN,UAAAA,UAAU,CAACM,MAAX,GAAoBM,iBAAiB,CAACN,MAAtC;AACD;;AAED,YAAIM,iBAAiB,CAACX,MAAlB,IAA4B,IAAhC,EAAsC;AACpCD,UAAAA,UAAU,CAACC,MAAX,GAAoBW,iBAAiB,CAACX,MAAtC;AACD;AACF;AACF;AACF,GAdD;;AAgBAO,EAAAA,UAAU,CAACM,OAAX,GAAqB,SAASA,OAAT,GAAmB;AACtC,QAAI,CAACnB,qBAAqB,CAACkB,SAA3B,EAAsC;AACpC;AACD;;AAED,QAAIE,GAAG,GAAGd,MAAV;AACA,QAAIe,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaC,eAAzB;AACAlB,IAAAA,UAAU,CAACC,MAAX,GAAoB;AAClBC,MAAAA,SAAS,EAAE,CADO;AAElBC,MAAAA,MAAM,EAAEa,KAAK,CAACG,YAFI;AAGlBf,MAAAA,KAAK,EAAEW,GAAG,CAACK,gBAAJ,IAAwB,CAHb;AAIlBf,MAAAA,KAAK,EAAEW,KAAK,CAACK;AAJK,KAApB;AAMArB,IAAAA,UAAU,CAACM,MAAX,GAAoB;AAClBJ,MAAAA,SAAS,EAAE,CADO;AAElBC,MAAAA,MAAM,EAAEY,GAAG,CAACT,MAAJ,CAAWH,MAFD;AAGlBC,MAAAA,KAAK,EAAEW,GAAG,CAACK,gBAAJ,IAAwB,CAHb;AAIlBf,MAAAA,KAAK,EAAEU,GAAG,CAACT,MAAJ,CAAWD;AAJA,KAApB;;AAOA,QAAIiB,KAAK,CAACC,OAAN,CAAchB,SAAS,CAAC,QAAD,CAAvB,CAAJ,EAAwC;AACtCA,MAAAA,SAAS,CAAC,QAAD,CAAT,CAAoBiB,OAApB,CAA4B,UAAUC,OAAV,EAAmB;AAC7C,eAAOA,OAAO,CAACzB,UAAD,CAAd;AACD,OAFD;AAGD;AACF,GAzBD;;AA2BAQ,EAAAA,UAAU,CAACkB,gBAAX,GAA8B,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCF,OAAhC,EAAyC;AACrElB,IAAAA,SAAS,CAACoB,IAAD,CAAT,GAAkBpB,SAAS,CAACoB,IAAD,CAAT,IAAmB,EAArC;AACApB,IAAAA,SAAS,CAACoB,IAAD,CAAT,CAAgBC,IAAhB,CAAqBH,OAArB;AACD,GAHD;;AAKAjB,EAAAA,UAAU,CAACqB,mBAAX,GAAiC,SAASA,mBAAT,CAA6BF,IAA7B,EAAmCF,OAAnC,EAA4C;AAC3E,QAAIH,KAAK,CAACC,OAAN,CAAchB,SAAS,CAACoB,IAAD,CAAvB,CAAJ,EAAoC;AAClCpB,MAAAA,SAAS,CAACoB,IAAD,CAAT,GAAkBpB,SAAS,CAACoB,IAAD,CAAT,CAAgBG,MAAhB,CAAuB,UAAUC,QAAV,EAAoB;AAC3D,eAAOA,QAAQ,KAAKN,OAApB;AACD,OAFiB,CAAlB;AAGD;AACF,GAND;;AAQA,SAAOjB,UAAP;AACD,CAjE6B,EAA9B;;AAmEAhB,OAAO,CAACE,OAAR,GAAkBc,UAAlB;;AAEA,IAAIb,qBAAqB,CAACkB,SAA1B,EAAqC;AACnCL,EAAAA,UAAU,CAACM,OAAX;;AAEAb,EAAAA,MAAM,CAACyB,gBAAP,CAAwB,QAAxB,EAAkClB,UAAU,CAACM,OAA7C,EAAsD,KAAtD;AACD;;AAEDkB,MAAM,CAACxC,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = /*#__PURE__*/function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    (0, _invariant.default)(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (_ExecutionEnvironment.canUseDOM) {\n        (0, _invariant.default)(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!_ExecutionEnvironment.canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexports.default = Dimensions;\n\nif (_ExecutionEnvironment.canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}