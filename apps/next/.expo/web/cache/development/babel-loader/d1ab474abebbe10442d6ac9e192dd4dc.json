{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from \"next-i18next\";\nimport styled from \"styled-components/native\";\nimport { ButtonCta, ButtonSM } from \"../Buttons\";\nimport { CompositionSection } from \"../Compositions\";\nimport FormContainer from \"./FormContainer\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport GoToRegister from \"./GoToRegister\";\nimport FormTextInput from \"../Inputs/FormTextInput\";\nimport LostPass from \"./LostPass\";\nimport { Authorization } from \"../../hooks/useAuth\";\nimport { getRedirectResult } from \"firebase/auth\";\nimport SmsVerificationModal from \"../SmsVerificationModal\";\nimport SmsVerificationSuccessModal from \"../SmsVerificationSuccessModal\";\nimport { ErrorText } from \"../FormRegisterWithSocials/styles\";\nimport { auth } from \"../../../lib/firebase-app\";\nimport CardModal from \"../CardModal\";\n\nvar FormLogin = function FormLogin(_ref) {\n  var _errors$login, _errors$login2, _errors$login2$phoneO, _errors$login3;\n\n  var providers = _ref.providers,\n      _csrfToken = _ref.csrfToken;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordInput = _useState4[0],\n      setPasswordInput = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phoneLoginConfirmation = _useState6[0],\n      setPhoneLoginConfirmation = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phoneNumber = _useState8[0],\n      setPhoneNumber = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      smsVerificationSuccess = _useState10[0],\n      setSmsVerificationSuccess = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      providerLoginError = _useState14[0],\n      setProviderLoginError = _useState14[1];\n\n  var formFields = useForm();\n  var handleSubmit = formFields.handleSubmit,\n      errors = formFields.formState.errors;\n  var EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  var PHONE_WITHOUT_PREFIX_REGEX = /^\\d{10}$/;\n  var PHONE_REGEX = /[+]([^\\d]*\\d){8}/;\n  var EMAIL_OR_PHONE_REGEX = /(^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$)|([+]([^\\d]*\\d){8})/;\n\n  var onSubmit = function onSubmit(data) {\n    var confirmation;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (data.login.hasOwnProperty(\"password\") && data.login.password && PHONE_REGEX.test(data.login.phoneOrEmail)) {\n              setPasswordInput(false);\n              delete data.login.password;\n            }\n\n            if (!(data.login.hasOwnProperty(\"password\") && data.login.password)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Authorization.signInWithEmail(data.login.phoneOrEmail, data.login.password));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (_context.t0 instanceof Error) {\n              if (_context.t0.message.includes(\"wrong-password\")) {\n                setError(t(\"others:forms.login.invalidPassword\"));\n              }\n            }\n\n          case 10:\n            _context.next = 28;\n            break;\n\n          case 12:\n            if (!EMAIL_REGEX.test(data.login.phoneOrEmail)) {\n              _context.next = 16;\n              break;\n            }\n\n            setPasswordInput(true);\n            _context.next = 28;\n            break;\n\n          case 16:\n            if (!PHONE_REGEX.test(data.login.phoneOrEmail)) {\n              _context.next = 28;\n              break;\n            }\n\n            _context.prev = 17;\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(Authorization.signInWithPhone(data.login.phoneOrEmail, Authorization.initCaptcha(\"captcha__container\")));\n\n          case 20:\n            confirmation = _context.sent;\n            setPhoneLoginConfirmation(confirmation);\n            setPhoneNumber(data.login.phoneOrEmail);\n            _context.next = 28;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t1 = _context[\"catch\"](17);\n            setError(_context.t1.message);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7], [17, 25]], Promise);\n  };\n\n  useEffect(function () {\n    (function checkIfLoginSucced() {\n      return _regeneratorRuntime.async(function checkIfLoginSucced$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getRedirectResult(auth));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              setProviderLoginError(true);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    })();\n  }, []);\n\n  var validateSheba = function validateSheba(str) {\n    var isPhoneWithoutPrefixValid = PHONE_WITHOUT_PREFIX_REGEX.test(str);\n    var isPhoneOrEmail = EMAIL_OR_PHONE_REGEX.test(str);\n\n    if (!str) {\n      return \"Your phone or email is required\";\n    } else if (str.length >= 50) {\n      return \"Your contact information should be lesss than 50 symbols\";\n    } else if (isPhoneWithoutPrefixValid) {\n      return \"+38\";\n    } else if (!isPhoneOrEmail) {\n      return t(\"others:forms.login.emailOrPhoneDetail\");\n    }\n  };\n\n  var PROVIDERS;\n\n  (function (PROVIDERS) {\n    PROVIDERS[\"FACEBOOK\"] = \"facebook\";\n    PROVIDERS[\"GOOGLE\"] = \"google\";\n  })(PROVIDERS || (PROVIDERS = {}));\n\n  var handleSignIn = function handleSignIn(providerId) {\n    return _regeneratorRuntime.async(function handleSignIn$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = providerId;\n            _context3.next = _context3.t0 === PROVIDERS.FACEBOOK ? 3 : _context3.t0 === PROVIDERS.GOOGLE ? 6 : 9;\n            break;\n\n          case 3:\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(Authorization.signInWithFacebook());\n\n          case 5:\n            return _context3.abrupt(\"break\", 9);\n\n          case 6:\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(Authorization.signInWithGoogle());\n\n          case 8:\n            return _context3.abrupt(\"break\", 9);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(CompositionSection, {\n    padding: [40, 15, 0, 15],\n    flexGrow: \"2\"\n  }, React.createElement(FormContainer, null, React.createElement(FormHeader, null, t(\"others:forms.login.login\")), Object.values(providers).map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return React.createElement(ButtonSM, {\n      key: name,\n      id: id,\n      onPress: function onPress() {\n        return handleSignIn(id);\n      },\n      anchor: name === \"Facebook\" ? t(\"others:forms.login.signInFacebook\") : t(\"others:forms.login.signInGoogle\")\n    });\n  }), React.createElement(Spacer, null), React.createElement(FormProvider, formFields, React.createElement(FormTextInput, {\n    name: \"login.phoneOrEmail\",\n    label: t(\"others:forms.login.emailOrPhone\"),\n    styles: {\n      wrapper: {\n        marginBottom: 12\n      }\n    },\n    rules: {\n      validate: validateSheba\n    },\n    error: errors == null ? void 0 : (_errors$login = errors.login) == null ? void 0 : _errors$login.phoneOrEmail,\n    errorMsg: errors == null ? void 0 : (_errors$login2 = errors.login) == null ? void 0 : (_errors$login2$phoneO = _errors$login2.phoneOrEmail) == null ? void 0 : _errors$login2$phoneO.message\n  }), passwordInput ? React.createElement(React.Fragment, null, React.createElement(FormTextInput, {\n    name: \"login.password\",\n    label: t(\"others:forms.generic.password\"),\n    secureTextEntry: true,\n    rules: {\n      required: true,\n      maxLength: 50,\n      minLength: 8\n    },\n    error: errors == null ? void 0 : (_errors$login3 = errors.login) == null ? void 0 : _errors$login3.password,\n    errorMsg: t(\"others:forms.login.invalidPassword\")\n  }), React.createElement(LostPass, null)) : React.createElement(React.Fragment, null), React.createElement(ButtonCta, {\n    style: {\n      width: \"130px\",\n      height: \"43px\",\n      display: \"flex\",\n      marginBottom: \"30px\",\n      alignSelf: \"flex-end\",\n      marginTop: 50\n    },\n    anchor: t(\"others:forms.login.login\"),\n    onPress: handleSubmit(onSubmit, function () {})\n  }), React.createElement(View, {\n    nativeID: \"captcha__container\",\n    style: {\n      display: \"none\"\n    }\n  })), phoneLoginConfirmation ? React.createElement(SmsVerificationModal, {\n    phoneNumber: phoneNumber,\n    confirmation: phoneLoginConfirmation,\n    setVerificationSuccess: setSmsVerificationSuccess,\n    mode: \"LOGIN\",\n    callback: function callback() {\n      return null;\n    },\n    close: function close() {\n      return setPhoneLoginConfirmation(null);\n    }\n  }) : React.createElement(React.Fragment, null), smsVerificationSuccess ? React.createElement(SmsVerificationSuccessModal, null) : React.createElement(React.Fragment, null), error ? React.createElement(ErrorText, null, error) : React.createElement(React.Fragment, null), providerLoginError ? React.createElement(CardModal, {\n    closeable: true,\n    onModalClose: function onModalClose() {\n      return setProviderLoginError(false);\n    }\n  }, React.createElement(ErrorText, null, t(\"others:desktop.checks.emailAlreadyInUse\"))) : React.createElement(React.Fragment, null))), React.createElement(GoToRegister, null));\n};\n\nexport default FormLogin;\nexport var FormHeader = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-weight: bold;\\n  font-size: 24px;\\n  margin-top: 0.83em;\\n  margin-bottom: 0.83em;\\n  margin-left: 0;\\n  margin-right: 0;\\n  font-weight: bold;\\n  line-height: 24px;\\n  letter-spacing: 0.5px;\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.textOnCta;\n});\nexport var Spacer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/FormLogin/index.tsx"],"names":["React","useEffect","useState","useTranslation","styled","ButtonCta","ButtonSM","CompositionSection","FormContainer","FormProvider","useForm","GoToRegister","FormTextInput","LostPass","Authorization","getRedirectResult","SmsVerificationModal","SmsVerificationSuccessModal","ErrorText","auth","CardModal","FormLogin","providers","_csrfToken","csrfToken","t","mounted","setMounted","passwordInput","setPasswordInput","phoneLoginConfirmation","setPhoneLoginConfirmation","phoneNumber","setPhoneNumber","smsVerificationSuccess","setSmsVerificationSuccess","error","setError","providerLoginError","setProviderLoginError","formFields","handleSubmit","errors","formState","EMAIL_REGEX","PHONE_WITHOUT_PREFIX_REGEX","PHONE_REGEX","EMAIL_OR_PHONE_REGEX","onSubmit","data","login","hasOwnProperty","password","test","phoneOrEmail","signInWithEmail","Error","message","includes","signInWithPhone","initCaptcha","confirmation","checkIfLoginSucced","validateSheba","str","isPhoneWithoutPrefixValid","isPhoneOrEmail","length","PROVIDERS","handleSignIn","providerId","FACEBOOK","GOOGLE","signInWithFacebook","signInWithGoogle","Object","values","map","id","name","wrapper","marginBottom","validate","required","maxLength","minLength","width","height","display","alignSelf","marginTop","FormHeader","View","theme","colors","textOnCta","Spacer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { useTranslation } from \"next-i18next\";\nimport styled from \"styled-components/native\";\n\nimport { ButtonCta, ButtonSM } from \"../Buttons\";\nimport { CompositionSection } from \"../Compositions\";\n\nimport FormContainer from \"./FormContainer\";\nimport { SignInProps } from \"../../../pages/signin\";\nimport { Theme } from \"../../style/theme.config\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { FormType } from \"../../helpers/FormTypes\";\nimport GoToRegister from \"./GoToRegister\";\nimport FormTextInput from \"../Inputs/FormTextInput\";\nimport LostPass from \"./LostPass\";\nimport { Authorization } from \"../../hooks/useAuth\";\nimport { ConfirmationResult, getRedirectResult } from \"firebase/auth\";\nimport SmsVerificationModal from \"../SmsVerificationModal\";\nimport SmsVerificationSuccessModal from \"../SmsVerificationSuccessModal\";\nimport { ErrorText } from \"../FormRegisterWithSocials/styles\";\nimport { auth } from \"../../../lib/firebase-app\";\nimport CardModal from \"../CardModal\";\ntype FormLoginProps = Pick<SignInProps, \"providers\" | \"csrfToken\">;\n\nconst FormLogin = ({ providers, csrfToken: _csrfToken }: FormLoginProps) => {\n  const { t } = useTranslation();\n  const [mounted, setMounted] = useState(false);\n  const [passwordInput, setPasswordInput] = useState(false);\n  const [phoneLoginConfirmation, setPhoneLoginConfirmation] =\n    useState<ConfirmationResult | null>(null);\n  const [phoneNumber, setPhoneNumber] = useState<string>(\"\");\n  const [smsVerificationSuccess, setSmsVerificationSuccess] =\n    useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const [providerLoginError, setProviderLoginError] = useState<boolean>(false);\n\n  const formFields = useForm<FormType>();\n\n  const {\n    handleSubmit,\n    formState: { errors },\n  } = formFields;\n  // eslint-disable-next-line\n  const EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  // eslint-disable-next-line\n  const PHONE_WITHOUT_PREFIX_REGEX = /^\\d{10}$/;\n  // eslint-disable-next-line\n  const PHONE_REGEX = /[+]([^\\d]*\\d){8}/;\n  const EMAIL_OR_PHONE_REGEX =\n    // eslint-disable-next-line\n    /(^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$)|([+]([^\\d]*\\d){8})/;\n  const onSubmit = async (data: {\n    login: { phoneOrEmail: string; password?: string };\n  }) => {\n    if (\n      /* eslint-disable-next-line */\n      data.login.hasOwnProperty(\"password\") &&\n      data.login.password &&\n      PHONE_REGEX.test(data.login.phoneOrEmail)\n    ) {\n      setPasswordInput(false);\n      delete data.login.password;\n    }\n    /* eslint-disable-next-line */\n    if (data.login.hasOwnProperty(\"password\") && data.login.password) {\n      try {\n        await Authorization.signInWithEmail(\n          data.login.phoneOrEmail,\n          data.login.password\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          if (error.message.includes(\"wrong-password\")) {\n            setError(t(\"others:forms.login.invalidPassword\"));\n          }\n        }\n      }\n    } else {\n      if (EMAIL_REGEX.test(data.login.phoneOrEmail)) {\n        setPasswordInput(true);\n      } else if (PHONE_REGEX.test(data.login.phoneOrEmail)) {\n        try {\n          const confirmation = await Authorization.signInWithPhone(\n            data.login.phoneOrEmail,\n            Authorization.initCaptcha(\"captcha__container\")\n          );\n          setPhoneLoginConfirmation(confirmation);\n          setPhoneNumber(data.login.phoneOrEmail);\n        } catch (error) {\n          // eslint-disable-next-line\n          // @ts-ignore\n          setError(error.message);\n        }\n      }\n    }\n  };\n\n  // const handlePassErrorMsg = (type: string): string => {\n  //   switch (type) {\n  //     case \"minLength\":\n  //       return t(\"validations.toShortPassword\");\n  //     case \"required\":\n  //       return t(\"validations.invalidPassword\");\n  //     default:\n  //       return t(\"validations.invalidPassword\");\n  //   }\n  // };\n  useEffect(() => {\n    (async function checkIfLoginSucced() {\n      try {\n        await getRedirectResult(auth);\n      } catch (error) {\n        setProviderLoginError(true);\n      }\n    })();\n  }, []);\n  const validateSheba = (str: string) => {\n    const isPhoneWithoutPrefixValid = PHONE_WITHOUT_PREFIX_REGEX.test(str);\n    const isPhoneOrEmail = EMAIL_OR_PHONE_REGEX.test(str);\n\n    if (!str) {\n      return \"Your phone or email is required\";\n    } else if (str.length >= 50) {\n      return \"Your contact information should be lesss than 50 symbols\";\n    } else if (isPhoneWithoutPrefixValid) {\n      return \"+38\";\n    } else if (!isPhoneOrEmail) {\n      return t(\"others:forms.login.emailOrPhoneDetail\");\n    }\n  };\n\n  enum PROVIDERS {\n    FACEBOOK = \"facebook\",\n    GOOGLE = \"google\",\n  }\n  const handleSignIn = async (providerId: string) => {\n    switch (providerId) {\n      case PROVIDERS.FACEBOOK:\n        {\n          await Authorization.signInWithFacebook();\n        }\n        break;\n      case PROVIDERS.GOOGLE:\n        {\n          await Authorization.signInWithGoogle();\n        }\n        break;\n    }\n  };\n\n  return (\n    <>\n      <CompositionSection padding={[40, 15, 0, 15]} flexGrow=\"2\">\n        <FormContainer>\n          <FormHeader>{t(\"others:forms.login.login\")}</FormHeader>\n          {Object.values(providers).map(({ id, name }) => (\n            <ButtonSM\n              key={name}\n              id={id}\n              onPress={() => handleSignIn(id)}\n              anchor={\n                name === \"Facebook\"\n                  ? t(\"others:forms.login.signInFacebook\")\n                  : t(\"others:forms.login.signInGoogle\")\n              }\n            />\n          ))}\n          <Spacer />\n          <FormProvider {...formFields}>\n            <FormTextInput\n              name={\"login.phoneOrEmail\"}\n              label={t(\"others:forms.login.emailOrPhone\")}\n              styles={{ wrapper: { marginBottom: 12 } }}\n              rules={{\n                validate: validateSheba,\n              }}\n              error={errors?.login?.phoneOrEmail}\n              errorMsg={errors?.login?.phoneOrEmail?.message}\n            />\n            {passwordInput ? (\n              <>\n                <FormTextInput\n                  name={\"login.password\"}\n                  label={t(\"others:forms.generic.password\")}\n                  secureTextEntry\n                  rules={{\n                    required: true,\n                    maxLength: 50,\n                    minLength: 8,\n                  }}\n                  error={errors?.login?.password}\n                  errorMsg={t(\"others:forms.login.invalidPassword\")}\n                />\n                <LostPass />\n              </>\n            ) : (\n              <></>\n            )}\n            <ButtonCta\n              style={{\n                width: \"130px\",\n                height: \"43px\",\n                display: \"flex\",\n                marginBottom: \"30px\",\n                alignSelf: \"flex-end\",\n                marginTop: 50,\n              }}\n              anchor={t(\"others:forms.login.login\")}\n              onPress={handleSubmit(onSubmit, () => {})}\n            />\n            <View nativeID=\"captcha__container\" style={{ display: \"none\" }} />\n          </FormProvider>\n          {phoneLoginConfirmation ? (\n            <SmsVerificationModal\n              phoneNumber={phoneNumber}\n              confirmation={phoneLoginConfirmation}\n              setVerificationSuccess={setSmsVerificationSuccess}\n              mode=\"LOGIN\"\n              callback={() => null}\n              close={() => setPhoneLoginConfirmation(null)}\n            />\n          ) : (\n            <></>\n          )}\n          {smsVerificationSuccess ? <SmsVerificationSuccessModal /> : <></>}\n          {error ? <ErrorText>{error}</ErrorText> : <></>}\n          {providerLoginError ? (\n            <CardModal\n              closeable\n              onModalClose={() => setProviderLoginError(false)}\n            >\n              <ErrorText>\n                {t(\"others:desktop.checks.emailAlreadyInUse\")}\n              </ErrorText>\n            </CardModal>\n          ) : (\n            <></>\n          )}\n        </FormContainer>\n      </CompositionSection>\n      <GoToRegister />\n    </>\n  );\n};\n\nexport default FormLogin;\n\nexport const FormHeader = styled.View`\n  color: ${({ theme }: { theme: Theme }) => theme.colors.textOnCta};\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 0.83em;\n  margin-bottom: 0.83em;\n  margin-left: 0;\n  margin-right: 0;\n  font-weight: bold;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n`;\n\nexport const Spacer = styled.View`\n  margin-bottom: 60px;\n`;\n"]},"metadata":{},"sourceType":"module"}