{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"./theming\");\n\nvar _settings = require(\"./settings\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../components/MaterialCommunityIcon\"));\n\nvar _PortalHost = _interopRequireDefault(require(\"../components/Portal/PortalHost\"));\n\nvar _DefaultTheme = _interopRequireDefault(require(\"../styles/DefaultTheme\"));\n\nvar _DarkTheme = _interopRequireDefault(require(\"../styles/DarkTheme\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, _ref);\n\n  var colorSchemeName = !props.theme && (_reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = _reactNative.AccessibilityInfo.addEventListener('reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        if ((_subscription = subscription) !== null && _subscription !== void 0 && _subscription.remove) {\n          subscription.remove();\n        } else {\n          _reactNative.AccessibilityInfo.removeEventListener('reduceMotionChanged', setReduceMotionEnabled);\n        }\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? _DarkTheme.default : _DefaultTheme.default;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(_PortalHost.default, null, React.createElement(_settings.Provider, {\n    value: settings || {\n      icon: _MaterialCommunityIcon.default\n    }\n  }, React.createElement(_theming.ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nvar _default = Provider;\nexports.default = _default;","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","subscription","AccessibilityInfo","appearanceSubscription","getTheme","theme","providedTheme","DarkTheme","DefaultTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] = React.useState<boolean>(\n    false\n  );\n  const [colorScheme, setColorScheme] = React.useState<ColorSchemeName>(\n    colorSchemeName\n  );\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = AccessibilityInfo.addEventListener(\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          AccessibilityInfo.removeEventListener(\n            'reduceMotionChanged',\n            setReduceMotionEnabled\n          );\n        }\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (colorScheme === 'dark'\n        ? DarkTheme\n        : DefaultTheme) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"script"}