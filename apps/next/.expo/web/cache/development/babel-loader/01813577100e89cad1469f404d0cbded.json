{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport React from \"react\";\nimport { useTranslation } from \"next-i18next\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components/native\";\nimport { Routes } from \"../../consts/router\";\nimport EditOfferButton from \"../EditOfferOptions/EditOfferButton\";\nimport { Error } from \"../Inputs/style\";\nimport StatusBadge from \"../StatusBadge\";\nimport { AnnouncementHighlights } from \"./AnnouncementHighlights\";\nimport CardAdd from \"./CardAdd\";\nimport DetailsLink from \"./DetailsLink\";\nimport { LoadingCards } from \"./LoadingCards\";\nimport { HeaderWrapper, Label, MoreButtonWrapper, SupportCard, SupportWrapper, TextWrapper, Title, StatusBadgeWrapper } from \"./style\";\nimport { TargetTypes } from \"../EditOfferOptions/EditOfferButton/types\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport default function LookingForSupport(_ref) {\n  var requests = _ref.requests,\n      isError = _ref.isError,\n      isLoading = _ref.isLoading,\n      readonly = _ref.readonly;\n\n  var _useTranslation = useTranslation(\"desktop\"),\n      t = _useTranslation.t;\n\n  if (!isLoading && (isError || !requests)) {\n    return React.createElement(SupportWrapper, null, React.createElement(Error, null, t(\"could_not_fetch_requests_list\")));\n  }\n\n  return React.createElement(SupportWrapper, null, React.createElement(Title, null, t(\"others:desktop.yourSubmission\")), React.createElement(Content, {\n    isLoading: isLoading,\n    requests: requests,\n    readonly: readonly\n  }));\n}\n\nvar Content = function Content(_ref2) {\n  var isLoading = _ref2.isLoading,\n      readonly = _ref2.readonly,\n      requests = _ref2.requests;\n\n  if (isLoading || requests === undefined) {\n    return React.createElement(LoadingCards, {\n      count: 3,\n      showImage: false\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Requests, {\n    requests: requests,\n    readonly: readonly\n  }), React.createElement(NoOffer, {\n    readonly: readonly\n  }));\n};\n\nvar NoOffer = function NoOffer(_ref3) {\n  var readonly = _ref3.readonly;\n\n  var _useTranslation2 = useTranslation(\"desktop\"),\n      t = _useTranslation2.t;\n\n  var router = useRouter();\n  return React.createElement(CardAdd, {\n    label: t(\"others:common.actions.addSubmission\"),\n    readonly: readonly,\n    onPress: function onPress() {\n      if (!readonly) router.push(Routes.GUEST);\n    }\n  });\n};\n\nvar RequestTextWrapper = styled(TextWrapper)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  border-style: solid;\\n  border-bottom-width: 1px;\\n  border-bottom-color: #f2f2f2;\\n  padding-bottom: 8px;\\n\"])));\nvar RequestFirstLine = styled(Label)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 10px;\\n\"])));\nvar RequestSecondLine = styled(Label)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  font-weight: 700;\\n  font-size: 14px;\\n\"])));\n\nvar Requests = function Requests(_ref4) {\n  var requests = _ref4.requests,\n      readonly = _ref4.readonly;\n\n  var _useTranslation3 = useTranslation(\"others\", {\n    keyPrefix: \"desktop\"\n  }),\n      t = _useTranslation3.t;\n\n  return React.createElement(React.Fragment, null, requests.map(function (r) {\n    var notYetReady = r.clientOnly;\n    return React.createElement(SupportCard, {\n      key: r.id\n    }, React.createElement(HeaderWrapper, null, React.createElement(MoreButtonWrapper, null, notYetReady ? React.createElement(ActivityIndicator, null) : React.createElement(EditOfferButton, {\n      targetID: r.id,\n      targetType: TargetTypes.GUESTS,\n      matchID: r.matchId,\n      targetStatusType: r.type\n    })), React.createElement(RequestTextWrapper, null, React.createElement(RequestFirstLine, null, t(\"refuge.submission\")), React.createElement(RequestSecondLine, null, t(\"accommodationSearch\")))), React.createElement(StatusBadgeWrapper, null, React.createElement(StatusBadge, {\n      state: r.type\n    })), React.createElement(AnnouncementHighlights, {\n      beds: r.beds,\n      city: r.city,\n      duration: r.duration\n    }), !readonly && !notYetReady && React.createElement(DetailsLink, {\n      href: {\n        pathname: Routes.DETAILS,\n        query: {\n          id: r.id,\n          type: \"request\"\n        }\n      }\n    }));\n  }));\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/SupportSection/LookingForSupport.tsx"],"names":["React","useTranslation","useRouter","styled","Routes","EditOfferButton","Error","StatusBadge","AnnouncementHighlights","CardAdd","DetailsLink","LoadingCards","HeaderWrapper","Label","MoreButtonWrapper","SupportCard","SupportWrapper","TextWrapper","Title","StatusBadgeWrapper","TargetTypes","LookingForSupport","requests","isError","isLoading","readonly","t","Content","undefined","NoOffer","router","push","GUEST","RequestTextWrapper","RequestFirstLine","RequestSecondLine","Requests","keyPrefix","map","r","notYetReady","clientOnly","id","GUESTS","matchId","type","beds","city","duration","pathname","DETAILS","query"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useTranslation } from \"next-i18next\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components/native\";\nimport { Routes } from \"../../consts/router\";\nimport EditOfferButton from \"../EditOfferOptions/EditOfferButton\";\nimport { Error } from \"../Inputs/style\";\nimport StatusBadge from \"../StatusBadge\";\nimport { AnnouncementHighlights } from \"./AnnouncementHighlights\";\nimport CardAdd from \"./CardAdd\";\nimport DetailsLink from \"./DetailsLink\";\nimport { LoadingCards } from \"./LoadingCards\";\nimport {\n  HeaderWrapper,\n  Label,\n  MoreButtonWrapper,\n  SupportCard,\n  SupportWrapper,\n  TextWrapper,\n  Title,\n  StatusBadgeWrapper,\n} from \"./style\";\nimport { Request } from \"./types\";\nimport { TargetTypes } from \"../EditOfferOptions/EditOfferButton/types\";\nimport { ActivityIndicator } from \"react-native\";\n\ntype RequestProps = {\n  requests?: Request[];\n  isError: boolean;\n  isLoading: boolean;\n  readonly: boolean;\n};\n\nexport default function LookingForSupport({\n  requests,\n  isError,\n  isLoading,\n  readonly,\n}: RequestProps): JSX.Element {\n  const { t } = useTranslation(\"desktop\");\n  if (!isLoading && (isError || !requests)) {\n    return (\n      <SupportWrapper>\n        <Error>{t(\"could_not_fetch_requests_list\")}</Error>\n      </SupportWrapper>\n    );\n  }\n\n  return (\n    <SupportWrapper>\n      <Title>{t(\"others:desktop.yourSubmission\")}</Title>\n      <Content isLoading={isLoading} requests={requests} readonly={readonly} />\n    </SupportWrapper>\n  );\n}\n\nconst Content = ({\n  isLoading,\n  readonly,\n  requests,\n}: {\n  isLoading: boolean;\n  readonly: boolean;\n  requests?: Request[];\n}) => {\n  if (isLoading || requests === undefined) {\n    return <LoadingCards count={3} showImage={false} />;\n  }\n\n  return (\n    <>\n      <Requests requests={requests} readonly={readonly} />\n      <NoOffer readonly={readonly} />\n    </>\n  );\n};\n\nconst NoOffer = ({ readonly }: { readonly: boolean }) => {\n  const { t } = useTranslation(\"desktop\");\n\n  const router = useRouter();\n  return (\n    <CardAdd\n      label={t(\"others:common.actions.addSubmission\")}\n      readonly={readonly}\n      onPress={() => {\n        if (!readonly) router.push(Routes.GUEST);\n      }}\n    />\n  );\n};\n\nconst RequestTextWrapper = styled(TextWrapper)`\n  border-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #f2f2f2;\n  padding-bottom: 8px;\n`;\n\nconst RequestFirstLine = styled(Label)`\n  font-size: 10px;\n`;\nconst RequestSecondLine = styled(Label)`\n  font-weight: 700;\n  font-size: 14px;\n`;\n\nconst Requests = ({\n  requests,\n  readonly,\n}: {\n  requests: Request[];\n  readonly: boolean;\n}) => {\n  const { t } = useTranslation(\"others\", { keyPrefix: \"desktop\" });\n\n  return (\n    <>\n      {requests.map((r) => {\n        const notYetReady = r.clientOnly;\n\n        return (\n          <SupportCard key={r.id}>\n            <HeaderWrapper>\n              <MoreButtonWrapper>\n                {notYetReady ? (\n                  <ActivityIndicator />\n                ) : (\n                  <EditOfferButton\n                    targetID={r.id}\n                    targetType={TargetTypes.GUESTS}\n                    matchID={r.matchId}\n                    targetStatusType={r.type}\n                  />\n                )}\n              </MoreButtonWrapper>\n              <RequestTextWrapper>\n                <RequestFirstLine>{t(\"refuge.submission\")}</RequestFirstLine>\n                <RequestSecondLine>\n                  {t(\"accommodationSearch\")}\n                </RequestSecondLine>\n              </RequestTextWrapper>\n            </HeaderWrapper>\n            <StatusBadgeWrapper>\n              <StatusBadge state={r.type} />\n            </StatusBadgeWrapper>\n\n            {/* {r.matchedOffer ? (\n            <MetchedInfo\n              name={r.matchedOffer.name}\n              email={r.matchedOffer.email}\n              phone_num={r.matchedOffer.phone_num}\n            />\n          ) : ( */}\n            <AnnouncementHighlights\n              beds={r.beds}\n              city={r.city}\n              duration={r.duration}\n            />\n            {/* )} */}\n\n            {!readonly && !notYetReady && (\n              <DetailsLink\n                href={{\n                  pathname: Routes.DETAILS,\n                  query: { id: r.id, type: \"request\" },\n                }}\n              />\n            )}\n          </SupportCard>\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}