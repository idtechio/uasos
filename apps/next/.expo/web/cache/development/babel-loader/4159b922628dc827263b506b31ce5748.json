{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"../primitives/Text\";\nimport View from \"../primitives/View\";\n\nfunction createView() {\n  var nativeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return forwardRef(function (props, ref) {\n    return React.createElement(View, _extends({}, nativeProps, props, {\n      ref: ref\n    }));\n  });\n}\n\nexport var UL = createView(Platform.select({\n  web: {\n    accessibilityRole: 'list'\n  }\n}));\n\nfunction isTextProps(props) {\n  return typeof props.children === 'string';\n}\n\nexport var LI = forwardRef(function (props, ref) {\n  if (isTextProps(props)) {\n    var _accessibilityRole = Platform.select({\n      web: 'listitem',\n      default: props.accessibilityRole\n    });\n\n    return React.createElement(Text, _extends({}, props, {\n      accessibilityRole: _accessibilityRole,\n      ref: ref\n    }));\n  }\n\n  var accessibilityRole = Platform.select({\n    web: 'listitem',\n    default: props.accessibilityRole\n  });\n  return React.createElement(View, _extends({}, props, {\n    accessibilityRole: accessibilityRole,\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["../../src/elements/Lists.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAA+B,UAA/B,QAAoE,OAApE;;AAGA,OAAO,IAAP;AACA,OAAO,IAAP;;AAEA,SAAS,UAAT,GAA+C;AAAA,MAA3B,WAA2B,uEAAF,EAAE;AAC7C,SAAO,UAAU,CAAC,UAAC,KAAD,EAAmB,GAAnB,EAA0B;AAC1C,WAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,SAAA,EAAA,EAAK,WAAL,EAAsB,KAAtB,EAA2B;AAAE,MAAA,GAAG,EAAE;AAAP,KAA3B,CAAL,CAAP;AACD,GAFgB,CAAjB;AAGD;;AAED,OAAO,IAAM,EAAE,GAAG,UAAU,CAC1B,QAAQ,CAAC,MAAT,CAAgB;AACd,EAAA,GAAG,EAAE;AACH,IAAA,iBAAiB,EAAE;AADhB;AADS,CAAhB,CAD0B,CAArB;;AAQP,SAAS,WAAT,CAAqB,KAArB,EAA+B;AAE7B,SAAO,OAAO,KAAK,CAAC,QAAb,KAA0B,QAAjC;AACD;;AAID,OAAO,IAAM,EAAE,GAAG,UAAU,CAAC,UAAC,KAAD,EAAoC,GAApC,EAAgD;AAC3E,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,QAAM,kBAAiB,GAAiC,QAAQ,CAAC,MAAT,CAAgB;AACtE,MAAA,GAAG,EAAE,UADiE;AAEtE,MAAA,OAAO,EAAE,KAAK,CAAC;AAFuD,KAAhB,CAAxD;;AAIA,WAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,SAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,iBAAiB,EAAE,kBAArB;AAAwC,MAAA,GAAG,EAAE;AAA7C,KAAV,CAAL,CAAP;AACD;;AACD,MAAM,iBAAiB,GAAiC,QAAQ,CAAC,MAAT,CAAgB;AACtE,IAAA,GAAG,EAAE,UADiE;AAEtE,IAAA,OAAO,EAAE,KAAK,CAAC;AAFuD,GAAhB,CAAxD;AAIA,SAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,SAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,iBAAiB,EAAE,iBAArB;AAAwC,IAAA,GAAG,EAAE;AAA7C,GAAV,CAAL,CAAP;AACD,CAb2B,CAArB","sourcesContent":["import React, { ComponentType, forwardRef, PropsWithChildren } from 'react';\nimport { Platform } from 'react-native';\n\nimport Text, { TextProps } from '../primitives/Text';\nimport View, { ViewProps } from '../primitives/View';\n\nfunction createView(nativeProps: ViewProps = {}): ComponentType<ViewProps> {\n  return forwardRef((props: ViewProps, ref) => {\n    return <View {...nativeProps} {...props} ref={ref} />;\n  }) as ComponentType<ViewProps>;\n}\n\nexport const UL = createView(\n  Platform.select({\n    web: {\n      accessibilityRole: 'list',\n    },\n  })\n);\n\nfunction isTextProps(props: any): props is TextProps {\n  // Treat <li></li> as a Text element.\n  return typeof props.children === 'string';\n}\n\ntype LIProps = TextProps | ViewProps;\n\nexport const LI = forwardRef((props: PropsWithChildren<LIProps>, ref: any) => {\n  if (isTextProps(props)) {\n    const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n      web: 'listitem',\n      default: props.accessibilityRole,\n    });\n    return <Text {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n  }\n  const accessibilityRole: LIProps['accessibilityRole'] = Platform.select({\n    web: 'listitem',\n    default: props.accessibilityRole,\n  });\n  return <View {...props} accessibilityRole={accessibilityRole} ref={ref} />;\n}) as ComponentType<LIProps>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}