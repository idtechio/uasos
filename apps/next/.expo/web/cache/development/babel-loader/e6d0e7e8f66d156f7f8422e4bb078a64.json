{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"target\"];\nimport React, { forwardRef } from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"../primitives/Text\";\nexport var A = forwardRef(function (_ref, ref) {\n  var href = _ref.href,\n      target = _ref.target,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var nativeProps = Platform.select({\n    web: {\n      href: href,\n      target: target\n    },\n    default: {\n      onPress: function onPress(event) {\n        props.onPress && props.onPress(event);\n\n        if (Platform.OS !== 'web' && href !== undefined) {\n          Linking.openURL(href);\n        }\n      }\n    }\n  });\n  return React.createElement(Text, _extends({\n    accessibilityRole: \"link\"\n  }, props, nativeProps, {\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["../../src/elements/Anchor.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAA+B,UAA/B,QAAiD,OAAjD;;;AAGA,OAAO,IAAP;AAGA,OAAO,IAAM,CAAC,GAAG,UAAU,CAAC,gBAAwC,GAAxC,EAA+C;AAAA,MAA5C,IAA4C,QAA5C,IAA4C;AAAA,MAAtC,MAAsC,QAAtC,MAAsC;AAAA,MAA3B,KAA2B;;AACzE,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAT,CAA2B;AAC7C,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAJ,IADG;AAEH,MAAA,MAAM,EAAN;AAFG,KADwC;AAK7C,IAAA,OAAO,EAAE;AACP,MAAA,OAAO,EAAE,iBAAA,KAAK,EAAG;AACf,QAAA,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,CAAc,KAAd,CAAjB;;AACA,YAAI,QAAQ,CAAC,EAAT,KAAgB,KAAhB,IAAyB,IAAI,KAAK,SAAtC,EAAiD;AAC/C,UAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB;AACD;AACF;AANM;AALoC,GAA3B,CAApB;AAcA,SAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,SAAA;AAAC,IAAA,iBAAiB,EAAC;AAAnB,GAAA,EAA8B,KAA9B,EAAyC,WAAzC,EAAoD;AAAE,IAAA,GAAG,EAAE;AAAP,GAApD,CAAL,CAAP;AACD,CAhB0B,CAApB","sourcesContent":["import React, { ComponentType, forwardRef } from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport Text from '../primitives/Text';\nimport { LinkProps } from './Text.types';\n\nexport const A = forwardRef(({ href, target, ...props }: LinkProps, ref) => {\n  const nativeProps = Platform.select<LinkProps>({\n    web: {\n      href,\n      target,\n    },\n    default: {\n      onPress: event => {\n        props.onPress && props.onPress(event);\n        if (Platform.OS !== 'web' && href !== undefined) {\n          Linking.openURL(href);\n        }\n      },\n    },\n  });\n  return <Text accessibilityRole=\"link\" {...props} {...nativeProps} ref={ref} />;\n}) as ComponentType<LinkProps>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}