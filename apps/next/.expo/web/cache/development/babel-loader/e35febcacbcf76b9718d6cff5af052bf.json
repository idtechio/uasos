{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Icon = _interopRequireWildcard(require(\"./Icon\"));\n\nvar _theming = require(\"../core/theming\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      source = _ref.source,\n      theme = _ref.theme;\n\n  var _React$useState = React.useState(function () {\n    return source;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIcon = _React$useState2[0],\n      setCurrentIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      previousIcon = _React$useState4[0],\n      setPreviousIcon = _React$useState4[1];\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(1)),\n      fade = _React$useRef.current;\n\n  var scale = theme.animation.scale;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n\n  React.useEffect(function () {\n    if ((0, _Icon.isValidIcon)(previousIcon) && !(0, _Icon.isEqualIcon)(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      _reactNative.Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(_reactNative.View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(_reactNative.Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(_Icon.default, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(_reactNative.Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(_Icon.default, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nvar _default = (0, _theming.withTheme)(CrossFadeIcon);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","theme","React","current","fade","Animated","scale","currentIcon","setPreviousIcon","setCurrentIcon","duration","toValue","useNativeDriver","opacityPrev","opacityNext","previousIcon","inputRange","outputRange","rotatePrev","rotateNext","styles","height","width","size","opacity","transform","rotate","color","content","alignItems","justifyContent","icon","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}