{"ast":null,"code":"import { useTranslation } from \"next-i18next\";\nimport React, { useMemo } from \"react\";\nimport TabPanel from \"../TabPanel\";\nimport LookingForSupport from \"./LookingForSupport\";\nimport ProvidingSupport from \"./ProvidingSupport\";\nexport default function SupportSection(_ref) {\n  var offers = _ref.offers,\n      isOffersLoading = _ref.isOffersLoading,\n      isOffersInError = _ref.isOffersInError,\n      requests = _ref.requests,\n      isRequestsLoading = _ref.isRequestsLoading,\n      isRequestsInError = _ref.isRequestsInError,\n      readonly = _ref.readonly;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var items = useMemo(function () {\n    return [{\n      key: \"1\",\n      title: t(\"others:desktop.providingSupport\"),\n      content: React.createElement(ProvidingSupport, {\n        offers: offers,\n        isError: isOffersInError,\n        isLoading: isOffersLoading,\n        readonly: readonly\n      })\n    }, {\n      key: \"2\",\n      title: t(\"others:desktop.lookingForSupport\"),\n      content: React.createElement(LookingForSupport, {\n        requests: requests,\n        isError: isRequestsInError,\n        isLoading: isRequestsLoading,\n        readonly: readonly\n      })\n    }];\n  }, [t, offers, isOffersLoading, isOffersInError, requests, isRequestsLoading, isRequestsInError, readonly]);\n  return React.createElement(TabPanel, {\n    items: items,\n    initialSelectedIndex: 0\n  });\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/SupportSection/index.tsx"],"names":["useTranslation","React","useMemo","TabPanel","LookingForSupport","ProvidingSupport","SupportSection","offers","isOffersLoading","isOffersInError","requests","isRequestsLoading","isRequestsInError","readonly","t","items","key","title","content"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,gBAAP;AAaA,eAAe,SAASC,cAAT,OAQS;AAAA,MAPtBC,MAOsB,QAPtBA,MAOsB;AAAA,MANtBC,eAMsB,QANtBA,eAMsB;AAAA,MALtBC,eAKsB,QALtBA,eAKsB;AAAA,MAJtBC,QAIsB,QAJtBA,QAIsB;AAAA,MAHtBC,iBAGsB,QAHtBA,iBAGsB;AAAA,MAFtBC,iBAEsB,QAFtBA,iBAEsB;AAAA,MADtBC,QACsB,QADtBA,QACsB;;AACtB,wBAAcb,cAAc,EAA5B;AAAA,MAAQc,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,KAAK,GAAGb,OAAO,CAAC,YAAM;AAC1B,WAAO,CACL;AACEc,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,KAAK,EAAEH,CAAC,CAAC,iCAAD,CAFV;AAGEI,MAAAA,OAAO,EACL,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEX,MADV;AAEE,QAAA,OAAO,EAAEE,eAFX;AAGE,QAAA,SAAS,EAAED,eAHb;AAIE,QAAA,QAAQ,EAAEK;AAJZ;AAJJ,KADK,EAaL;AACEG,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,KAAK,EAAEH,CAAC,CAAC,kCAAD,CAFV;AAGEI,MAAAA,OAAO,EACL,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAER,QADZ;AAEE,QAAA,OAAO,EAAEE,iBAFX;AAGE,QAAA,SAAS,EAAED,iBAHb;AAIE,QAAA,QAAQ,EAAEE;AAJZ;AAJJ,KAbK,CAAP;AA0BD,GA3BoB,EA2BlB,CACDC,CADC,EAEDP,MAFC,EAGDC,eAHC,EAIDC,eAJC,EAKDC,QALC,EAMDC,iBANC,EAODC,iBAPC,EAQDC,QARC,CA3BkB,CAArB;AAsCA,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,KAAjB;AAAwB,IAAA,oBAAoB,EAAE;AAA9C,IAAP;AACD","sourcesContent":["import { useTranslation } from \"next-i18next\";\nimport React, { useMemo } from \"react\";\nimport TabPanel from \"../TabPanel\";\nimport LookingForSupport from \"./LookingForSupport\";\nimport ProvidingSupport from \"./ProvidingSupport\";\nimport { Offer, Request } from \"./types\";\n\ntype SupportSectionProps = {\n  offers?: Offer[];\n  isOffersLoading: boolean;\n  isOffersInError: boolean;\n  requests?: Request[];\n  isRequestsLoading: boolean;\n  isRequestsInError: boolean;\n  readonly: boolean;\n};\n\nexport default function SupportSection({\n  offers,\n  isOffersLoading,\n  isOffersInError,\n  requests,\n  isRequestsLoading,\n  isRequestsInError,\n  readonly,\n}: SupportSectionProps) {\n  const { t } = useTranslation();\n\n  const items = useMemo(() => {\n    return [\n      {\n        key: \"1\",\n        title: t(\"others:desktop.providingSupport\"),\n        content: (\n          <ProvidingSupport\n            offers={offers}\n            isError={isOffersInError}\n            isLoading={isOffersLoading}\n            readonly={readonly}\n          />\n        ),\n      },\n      {\n        key: \"2\",\n        title: t(\"others:desktop.lookingForSupport\"),\n        content: (\n          <LookingForSupport\n            requests={requests}\n            isError={isRequestsInError}\n            isLoading={isRequestsLoading}\n            readonly={readonly}\n          />\n        ),\n      },\n    ];\n  }, [\n    t,\n    offers,\n    isOffersLoading,\n    isOffersInError,\n    requests,\n    isRequestsLoading,\n    isRequestsInError,\n    readonly,\n  ]);\n\n  return <TabPanel items={items} initialSelectedIndex={0} />;\n}\n"]},"metadata":{},"sourceType":"module"}