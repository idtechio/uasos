{"ast":null,"code":"export function hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n}\nexport var uid = function uid() {\n  return Date.now().toString(36) + \"-\" + (Math.random() * 1000).toFixed();\n};\nexport var API_REFRESH_LATENCY = 7 * 1000;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/helpers/misc.ts"],"names":["hexToRGB","hex","alpha","r","parseInt","slice","g","b","uid","Date","now","toString","Math","random","toFixed","API_REFRESH_LATENCY"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAA+BC,KAA/B,EAA8C;AACnD,MAAMC,CAAC,GAAGC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAlB;AAAA,MACEC,CAAC,GAAGF,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CADd;AAAA,MAEEE,CAAC,GAAGH,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAFd;;AAIA,MAAIH,KAAJ,EAAW;AACT,WAAO,UAAUC,CAAV,GAAc,IAAd,GAAqBG,CAArB,GAAyB,IAAzB,GAAgCC,CAAhC,GAAoC,IAApC,GAA2CL,KAA3C,GAAmD,GAA1D;AACD,GAFD,MAEO;AACL,WAAO,SAASC,CAAT,GAAa,IAAb,GAAoBG,CAApB,GAAwB,IAAxB,GAA+BC,CAA/B,GAAmC,GAA1C;AACD;AACF;AAED,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACdC,IAAI,CAACC,GAAL,GAAWC,QAAX,CAAoB,EAApB,CADc,SACa,CAACC,IAAI,CAACC,MAAL,KAAgB,IAAjB,EAAuBC,OAAvB,EADb;AAAA,CAAZ;AAGP,OAAO,IAAMC,mBAAmB,GAAG,IAAI,IAAhC","sourcesContent":["export function hexToRGB(hex: string, alpha: number) {\n  const r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n}\n\nexport const uid = () =>\n  `${Date.now().toString(36)}-${(Math.random() * 1000).toFixed()}`;\n\nexport const API_REFRESH_LATENCY = 7 * 1000;\n"]},"metadata":{},"sourceType":"module"}