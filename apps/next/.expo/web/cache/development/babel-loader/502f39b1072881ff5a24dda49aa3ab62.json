{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AtIcon from \"../../style/svgs/at.svg\";\nimport DurationIcon from \"../../style/svgs/calendar.svg\";\nimport ArrowIcon from \"../../style/svgs/chevron-down.svg\";\nimport AddressIcon from \"../../style/svgs/marker.svg\";\nimport PhoneIcon from \"../../style/svgs/phone2.svg\";\nimport GuestsIcon from \"../../style/svgs/users.svg\";\nimport { toAccomodationTime } from \"../SupportSection/mapper\";\nimport DataField from \"./DataField\";\nimport GuestAdditionalInfo from \"./GuestAdditionalInfo\";\nimport { FlexWrapper, Header, Title } from \"./style\";\nexport default function GuestCardContent(_ref) {\n  var request = _ref.request,\n      showContact = _ref.showContact;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showAdditionalInfo = _React$useState2[0],\n      setShowAdditionalInfo = _React$useState2[1];\n\n  var additionalInfo = {\n    diversity: request == null ? void 0 : request.is_ukrainian_nationality,\n    pregnancy: request == null ? void 0 : request.is_pregnant,\n    disability: request == null ? void 0 : request.is_with_disability,\n    elderly: request == null ? void 0 : request.is_with_elderly,\n    animals: request == null ? void 0 : request.is_with_animal\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Header, null, React.createElement(Title, null, t(\"others:forms.match.guestProfile\")), additionalInfo ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowAdditionalInfo(!showAdditionalInfo);\n    },\n    style: showAdditionalInfo ? {\n      transform: [{\n        rotate: \"180deg\"\n      }]\n    } : null\n  }, React.createElement(ArrowIcon, null)) : null), React.createElement(FlexWrapper, null, (request == null ? void 0 : request.name) && React.createElement(DataField, {\n    Icon: GuestsIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.generic.guest\", {\n      name: request == null ? void 0 : request.name\n    })\n  }), showContact && (request == null ? void 0 : request.email) && React.createElement(DataField, {\n    isBlue: true,\n    Icon: AtIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.generic.emailAddressWithData\", {\n      mail: request == null ? void 0 : request.email\n    })\n  }), showContact && (request == null ? void 0 : request.phone_num) && React.createElement(DataField, {\n    isBlue: true,\n    Icon: PhoneIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.generic.phoneNumberWithData\", {\n      number: request == null ? void 0 : request.phone_num\n    })\n  }), (request == null ? void 0 : request.duration_category) && React.createElement(DataField, {\n    Icon: DurationIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.match.durationWithData\", {\n      number: t(\"common:hostAdd.accommodationTimeLabel.\" + toAccomodationTime(request.duration_category)),\n      unit: \"\"\n    })\n  }), (request == null ? void 0 : request.city) && React.createElement(DataField, {\n    Icon: AddressIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.match.searchAddress\", {\n      city: request == null ? void 0 : request.city\n    })\n  }), (request == null ? void 0 : request.beds) && React.createElement(DataField, {\n    Icon: GuestsIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.generic.peopleInGroup\", {\n      number: request == null ? void 0 : request.beds\n    })\n  }), (request == null ? void 0 : request.group_relation) && React.createElement(DataField, {\n    Icon: GuestsIcon,\n    iconWidth: 15,\n    iconHeight: 15,\n    label: t(\"others:forms.generic.groupType\", {\n      type: request.group_relation.map(function (el) {\n        return t(\"staticValues.groupRelations.\" + el);\n      }).join(\", \")\n    })\n  })), showAdditionalInfo ? React.createElement(GuestAdditionalInfo, {\n    info: additionalInfo\n  }) : null);\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/DetailsSection/GuestCardContent.tsx"],"names":["React","useTranslation","AtIcon","DurationIcon","ArrowIcon","AddressIcon","PhoneIcon","GuestsIcon","toAccomodationTime","DataField","GuestAdditionalInfo","FlexWrapper","Header","Title","GuestCardContent","request","showContact","t","useState","showAdditionalInfo","setShowAdditionalInfo","additionalInfo","diversity","is_ukrainian_nationality","pregnancy","is_pregnant","disability","is_with_disability","elderly","is_with_elderly","animals","is_with_animal","transform","rotate","name","email","mail","phone_num","number","duration_category","unit","city","beds","group_relation","type","map","el","join"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { TouchableOpacity } from \"react-native\";\nimport { MatchedRequestProps } from \"../../../pages/api/listing/offers\";\nimport { RequestProps } from \"../../../pages/api/listing/requests\";\nimport AtIcon from \"../../style/svgs/at.svg\";\nimport DurationIcon from \"../../style/svgs/calendar.svg\";\nimport ArrowIcon from \"../../style/svgs/chevron-down.svg\";\nimport AddressIcon from \"../../style/svgs/marker.svg\";\nimport PhoneIcon from \"../../style/svgs/phone2.svg\";\nimport GuestsIcon from \"../../style/svgs/users.svg\";\nimport { toAccomodationTime } from \"../SupportSection/mapper\";\nimport DataField from \"./DataField\";\nimport GuestAdditionalInfo from \"./GuestAdditionalInfo\";\nimport { FlexWrapper, Header, Title } from \"./style\";\n\ninterface GuestCardContentProps {\n  request: RequestProps | MatchedRequestProps | null;\n  showContact?: boolean;\n}\n\nexport default function GuestCardContent({\n  request,\n  showContact,\n}: GuestCardContentProps) {\n  const { t } = useTranslation();\n\n  const [showAdditionalInfo, setShowAdditionalInfo] = React.useState(true);\n\n  const additionalInfo = {\n    diversity: request?.is_ukrainian_nationality,\n    pregnancy: request?.is_pregnant,\n    disability: request?.is_with_disability,\n    elderly: request?.is_with_elderly,\n    animals: request?.is_with_animal,\n  };\n\n  return (\n    <>\n      <Header>\n        <Title>{t(\"others:forms.match.guestProfile\")}</Title>\n        {additionalInfo ? (\n          <TouchableOpacity\n            onPress={() => setShowAdditionalInfo(!showAdditionalInfo)}\n            style={\n              showAdditionalInfo ? { transform: [{ rotate: \"180deg\" }] } : null\n            }\n          >\n            <ArrowIcon />\n          </TouchableOpacity>\n        ) : null}\n      </Header>\n      <FlexWrapper>\n        {request?.name && (\n          <DataField\n            Icon={GuestsIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.generic.guest\", { name: request?.name })}\n          />\n        )}\n\n        {showContact && request?.email && (\n          <DataField\n            isBlue={true}\n            Icon={AtIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.generic.emailAddressWithData\", {\n              mail: request?.email,\n            })}\n          />\n        )}\n\n        {showContact && request?.phone_num && (\n          <DataField\n            isBlue={true}\n            Icon={PhoneIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.generic.phoneNumberWithData\", {\n              number: request?.phone_num,\n            })}\n          />\n        )}\n\n        {request?.duration_category && (\n          <DataField\n            Icon={DurationIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.match.durationWithData\", {\n              number: t(\n                `common:hostAdd.accommodationTimeLabel.${toAccomodationTime(\n                  request.duration_category\n                )}`\n              ),\n              unit: \"\",\n            })}\n          />\n        )}\n\n        {request?.city && (\n          <DataField\n            Icon={AddressIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.match.searchAddress\", {\n              city: request?.city,\n            })}\n          />\n        )}\n\n        {request?.beds && (\n          <DataField\n            Icon={GuestsIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.generic.peopleInGroup\", {\n              number: request?.beds,\n            })}\n          />\n        )}\n\n        {request?.group_relation && (\n          <DataField\n            Icon={GuestsIcon}\n            iconWidth={15}\n            iconHeight={15}\n            label={t(\"others:forms.generic.groupType\", {\n              type: request.group_relation\n                .map((el: string) => t(`staticValues.groupRelations.${el}`))\n                .join(\", \"),\n            })}\n          />\n        )}\n      </FlexWrapper>\n      {showAdditionalInfo ? (\n        <GuestAdditionalInfo info={additionalInfo} />\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}