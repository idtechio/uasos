{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _excluded = [\"children\", \"icon\", \"textColor\", \"withBottomBorder\"];\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\n\nimport React, { forwardRef } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styled, { css } from \"styled-components/native\";\nimport AlertIcon from \"../../../style/svgs/alert.svg\";\nimport BinIcon from \"../../../style/svgs/bin.svg\";\nimport ClockIcon from \"../../../style/svgs/clock.svg\";\nimport EditIcon from \"../../../style/svgs/edit.svg\";\nimport MoreIcon from \"../../../style/svgs/more.svg\";\nvar StyledButton = styled.Pressable(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar OptionsWrapper = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: -2px;\\n  right: 28px;\\n  z-index: 999;\\n\\n  background: #ffffff;\\n\\n  border: 1px solid #f2f2f2;\\n  box-sizing: border-box;\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.05);\\n  border-radius: 3px;\\n\"])));\nvar OptionsList = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  justify-content: flex-start;\\n  position: relative;\\n\"])));\nvar Arrow = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  width: 12px;\\n  height: 12px;\\n  background-color: white;\\n  position: absolute;\\n  top: 8px;\\n  right: -7px;\\n  z-index: 1000;\\n  transform: rotate(45deg) scaleY(0.6);\\n\\n  border-style: solid;\\n  border-right-width: 2px;\\n  border-right-color: #f2f2f2;\\n  border-top-width: 2px;\\n  border-top-color: #f2f2f2;\\n  border-radius: 2px;\\n\"])));\nvar ItemButton = styled.Pressable(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  align-items: center;\\n  padding: 10px 21px 10px 14px;\\n\\n  \", \"\\n\"])), function (_ref2) {\n  var withBottomBorder = _ref2.withBottomBorder;\n  return withBottomBorder && css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n      border-style: solid;\\n      border-bottom-color: #f2f2f2;\\n      border-bottom-width: 1px;\\n    \"])));\n});\nvar IconContainer = styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  padding-right: 10px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar TextContainer = styled.Text(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  font-family: \\\"Roboto\\\";\\n  font-style: normal;\\n  font-weight: 700;\\n  font-size: 14px;\\n  line-height: 16px;\\n  letter-spacing: 0.5px;\\n  white-space: nowrap;\\n  color: \", \";\\n\"])), function (_ref3) {\n  var textColor = _ref3.textColor,\n      theme = _ref3.theme;\n  return textColor === \"secondary\" ? theme.colors.figmaPalette.alert : theme.colors.figmaPalette.fontMain;\n});\nexport var CardModalStyle = {\n  padding: 0,\n  minWidth: \"initial\",\n  width: \"auto\",\n  borderColor: \"transparent\",\n  backgroundColor: \"transparent\",\n  overflow: \"visible\"\n};\nexport var ButtonContainer = styled.View(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  position: relative;\\n  z-index: 9999;\\n\"])));\nexport var TriggerButton = function TriggerButton(props) {\n  return React.createElement(StyledButton, _extends({\n    as: Pressable\n  }, props), React.createElement(MoreIcon, null));\n};\nexport var ListButton = function ListButton(_ref4) {\n  var children = _ref4.children,\n      icon = _ref4.icon,\n      _ref4$textColor = _ref4.textColor,\n      textColor = _ref4$textColor === void 0 ? \"primary\" : _ref4$textColor,\n      _ref4$withBottomBorde = _ref4.withBottomBorder,\n      withBottomBorder = _ref4$withBottomBorde === void 0 ? false : _ref4$withBottomBorde,\n      props = _objectWithoutProperties(_ref4, _excluded);\n\n  return React.createElement(ItemButton, _extends({\n    as: Pressable,\n    withBottomBorder: withBottomBorder\n  }, props), React.createElement(IconContainer, null, icon), React.createElement(TextContainer, {\n    textColor: textColor\n  }, children));\n};\nexport var Options = forwardRef(function Inner(props, _ref) {\n  return React.createElement(OptionsWrapper, {\n    as: View,\n    ref: _ref\n  }, React.createElement(OptionsList, null, React.createElement(Arrow, null), props.children));\n});\nexport var Icons = {\n  AlertIcon: AlertIcon,\n  BinIcon: BinIcon,\n  ClockIcon: ClockIcon,\n  EditIcon: EditIcon\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/EditOfferOptions/EditOfferButton/style.tsx"],"names":["React","forwardRef","styled","css","AlertIcon","BinIcon","ClockIcon","EditIcon","MoreIcon","StyledButton","Pressable","OptionsWrapper","View","OptionsList","Arrow","ItemButton","withBottomBorder","IconContainer","TextContainer","Text","textColor","theme","colors","figmaPalette","alert","fontMain","CardModalStyle","padding","minWidth","width","borderColor","backgroundColor","overflow","ButtonContainer","TriggerButton","props","ListButton","children","icon","Options","Inner","_ref","Icons"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,0BAA5B;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AAGA,IAAMC,YAAY,GAAGP,MAAM,CAACQ,SAAV,kJAAlB;AAMA,IAAMC,cAAc,GAAGT,MAAM,CAACU,IAAV,gTAApB;AAcA,IAAMC,WAAW,GAAGX,MAAM,CAACU,IAAV,2MAAjB;AAQA,IAAME,KAAK,GAAGZ,MAAM,CAACU,IAAV,+ZAAX;AAmBA,IAAMG,UAAU,GAAGb,MAAM,CAACQ,SAAV,4NAOZ;AAAA,MAAGM,gBAAH,SAAGA,gBAAH;AAAA,SACAA,gBAAgB,IAChBb,GADgB,oLADhB;AAAA,CAPY,CAAhB;AAgBA,IAAMc,aAAa,GAAGf,MAAM,CAACU,IAAV,4KAAnB;AAQA,IAAMM,aAAa,GAAGhB,MAAM,CAACiB,IAAV,+QASR;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,MAAcC,KAAd,SAAcA,KAAd;AAAA,SACPD,SAAS,KAAK,WAAd,GACKC,KAAD,CAAiBC,MAAjB,CAAwBC,YAAxB,CAAqCC,KADzC,GAEKH,KAAD,CAAiBC,MAAjB,CAAwBC,YAAxB,CAAqCE,QAHlC;AAAA,CATQ,CAAnB;AAeA,OAAO,IAAMC,cAAyB,GAAG;AACvCC,EAAAA,OAAO,EAAE,CAD8B;AAEvCC,EAAAA,QAAQ,EAAE,SAF6B;AAGvCC,EAAAA,KAAK,EAAE,MAHgC;AAIvCC,EAAAA,WAAW,EAAE,aAJ0B;AAKvCC,EAAAA,eAAe,EAAE,aALsB;AAMvCC,EAAAA,QAAQ,EAAE;AAN6B,CAAlC;AASP,OAAO,IAAMC,eAAe,GAAG/B,MAAM,CAACU,IAAV,yIAArB;AAMP,OAAO,IAAMsB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAC3B,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEzB;AAAlB,KAAiCyB,KAAjC,GACE,oBAAC,QAAD,OADF,CAD2B;AAAA,CAAtB;AAMP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MACxBC,QADwB,SACxBA,QADwB;AAAA,MAExBC,IAFwB,SAExBA,IAFwB;AAAA,8BAGxBlB,SAHwB;AAAA,MAGxBA,SAHwB,gCAGZ,SAHY;AAAA,oCAIxBJ,gBAJwB;AAAA,MAIxBA,gBAJwB,sCAIL,KAJK;AAAA,MAKrBmB,KALqB;;AAAA,SAWxB,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEzB,SAAhB;AAA2B,IAAA,gBAAgB,EAAEM;AAA7C,KAAmEmB,KAAnE,GACE,oBAAC,aAAD,QAAgBG,IAAhB,CADF,EAEE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAElB;AAA1B,KAAsCiB,QAAtC,CAFF,CAXwB;AAAA,CAAnB;AAkBP,OAAO,IAAME,OAAO,GAAGtC,UAAU,CAAqB,SAASuC,KAAT,CACpDL,KADoD,EAEpDM,IAFoD,EAGpD;AACA,SACE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAE7B,IAApB;AAA0B,IAAA,GAAG,EAAE6B;AAA/B,KACE,oBAAC,WAAD,QACE,oBAAC,KAAD,OADF,EAEGN,KAAK,CAACE,QAFT,CADF,CADF;AAQD,CAZgC,CAA1B;AAcP,OAAO,IAAMK,KAAK,GAAG;AAAEtC,EAAAA,SAAS,EAATA,SAAF;AAAaC,EAAAA,OAAO,EAAPA,OAAb;AAAsBC,EAAAA,SAAS,EAATA,SAAtB;AAAiCC,EAAAA,QAAQ,EAARA;AAAjC,CAAd","sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Pressable, PressableProps, View, ViewStyle } from \"react-native\";\nimport styled, { css } from \"styled-components/native\";\nimport AlertIcon from \"../../../style/svgs/alert.svg\";\nimport BinIcon from \"../../../style/svgs/bin.svg\";\nimport ClockIcon from \"../../../style/svgs/clock.svg\";\nimport EditIcon from \"../../../style/svgs/edit.svg\";\nimport MoreIcon from \"../../../style/svgs/more.svg\";\nimport { Theme } from \"../../../style/theme.config\";\n\nconst StyledButton = styled.Pressable`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst OptionsWrapper = styled.View`\n  position: absolute;\n  top: -2px;\n  right: 28px;\n  z-index: 999;\n\n  background: #ffffff;\n\n  border: 1px solid #f2f2f2;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n`;\n\nconst OptionsList = styled.View`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n  position: relative;\n`;\n\nconst Arrow = styled.View`\n  width: 12px;\n  height: 12px;\n  background-color: white;\n  position: absolute;\n  top: 8px;\n  right: -7px;\n  z-index: 1000;\n  transform: rotate(45deg) scaleY(0.6);\n\n  border-style: solid;\n  border-right-width: 2px;\n  border-right-color: #f2f2f2;\n  border-top-width: 2px;\n  border-top-color: #f2f2f2;\n  border-radius: 2px;\n`;\n\ntype ItemButtonProps = { withBottomBorder: boolean };\nconst ItemButton = styled.Pressable<ItemButtonProps>`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 10px 21px 10px 14px;\n\n  ${({ withBottomBorder }) =>\n    withBottomBorder &&\n    css`\n      border-style: solid;\n      border-bottom-color: #f2f2f2;\n      border-bottom-width: 1px;\n    `}\n`;\n\nconst IconContainer = styled.View`\n  padding-right: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ntype TextColor = \"primary\" | \"secondary\";\nconst TextContainer = styled.Text<{ textColor: TextColor }>`\n  flex: 1;\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.5px;\n  white-space: nowrap;\n  color: ${({ textColor, theme }) =>\n    textColor === \"secondary\"\n      ? (theme as Theme).colors.figmaPalette.alert\n      : (theme as Theme).colors.figmaPalette.fontMain};\n`;\n\nexport const CardModalStyle: ViewStyle = {\n  padding: 0,\n  minWidth: \"initial\",\n  width: \"auto\",\n  borderColor: \"transparent\",\n  backgroundColor: \"transparent\",\n  overflow: \"visible\",\n};\n\nexport const ButtonContainer = styled.View`\n  display: flex;\n  position: relative;\n  z-index: 9999;\n`;\n\nexport const TriggerButton = (props: Omit<PressableProps, \"children\">) => (\n  <StyledButton as={Pressable} {...props}>\n    <MoreIcon />\n  </StyledButton>\n);\n\nexport const ListButton = ({\n  children,\n  icon,\n  textColor = \"primary\",\n  withBottomBorder = false,\n  ...props\n}: PressableProps & {\n  icon: JSX.Element;\n  textColor?: TextColor;\n  withBottomBorder?: boolean;\n}) => (\n  <ItemButton as={Pressable} withBottomBorder={withBottomBorder} {...props}>\n    <IconContainer>{icon}</IconContainer>\n    <TextContainer textColor={textColor}>{children}</TextContainer>\n  </ItemButton>\n);\n\ntype OptionsProps = { children: JSX.Element | JSX.Element[] };\nexport const Options = forwardRef<View, OptionsProps>(function Inner(\n  props,\n  _ref\n) {\n  return (\n    <OptionsWrapper as={View} ref={_ref}>\n      <OptionsList>\n        <Arrow />\n        {props.children}\n      </OptionsList>\n    </OptionsWrapper>\n  );\n});\n\nexport const Icons = { AlertIcon, BinIcon, ClockIcon, EditIcon };\n"]},"metadata":{},"sourceType":"module"}