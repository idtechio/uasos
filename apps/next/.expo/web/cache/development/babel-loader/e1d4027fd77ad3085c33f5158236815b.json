{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\n\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      return prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n\n    animation.callStart(getTimestamp());\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\n\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _a, _b;\n\n  var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n  var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n\n  for (var key in newValues) {\n    var value = newValues[key];\n\n    if (isAnimated(value)) {\n      prepareAnimation(value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    var frame = function frame(timestamp) {\n      var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      var updates = {};\n      var allFinished = true;\n\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n\n      if (_frameTimestamp) {\n        frame(_frameTimestamp);\n      } else {\n        requestFrame(frame);\n      }\n    }\n\n    state.last = _extends({}, oldValues, newValues);\n    var style = getStyleWithoutAnimations(state.last);\n\n    if (style) {\n      updateProps(viewDescriptors, style, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    updateProps(viewDescriptors, newValues, maybeViewRef);\n  }\n}\n\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  'worklet';\n\n  var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n  var _a, _b;\n\n  var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n  var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n\n    if (isAnimated(value)) {\n      prepareAnimation(value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp) {\n    var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n\n    if (!allFinished) {\n      requestFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n\n      if (_frameTimestamp) {\n        frame(_frameTimestamp);\n      } else {\n        requestFrame(frame);\n      }\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  var diff = styleDiff(oldValues, newValues);\n  state.last = _extends({}, oldValues, newValues);\n\n  if (Object.keys(diff).length !== 0) {\n    updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n  }\n}\n\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n      var element = _step.value;\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\n\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _a, _b;\n\n  var viewsRef = makeViewsRefSet();\n  var viewDescriptors = makeViewDescriptorsSet();\n  var initRef = useRef();\n  var inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle\n      }),\n      sharableViewDescriptors: makeMutable([])\n    };\n    viewDescriptors.rebuildsharableViewDescriptors(initRef.current.sharableViewDescriptors);\n  }\n\n  dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n  var _initRef$current = initRef.current,\n      initial = _initRef$current.initial,\n      remoteState = _initRef$current.remoteState,\n      sharableViewDescriptors = _initRef$current.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  useEffect(function () {\n    var fun;\n    var _upadterFn2 = updater;\n    var optimalization = updater.__optimalization;\n\n    if (adapters) {\n      _upadterFn2 = function upadterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n\n    if (canApplyOptimalisation(_upadterFn2) && !shouldBeUseWeb()) {\n      if (hasColorProps(_upadterFn2())) {\n        _upadterFn2 = function upadterFn() {\n          'worklet';\n\n          var style = _upadterFn2();\n\n          parseColors(style);\n          return style;\n        };\n      }\n    } else if (!shouldBeUseWeb()) {\n      optimalization = 0;\n\n      _upadterFn2 = function _upadterFn() {\n        'worklet';\n\n        var style = _upadterFn2();\n\n        parseColors(style);\n        return style;\n      };\n    }\n\n    if (typeof updater.__optimalization !== undefined) {\n      _upadterFn2.__optimalization = optimalization;\n    }\n\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(sharableViewDescriptors, _upadterFn2, remoteState, maybeViewRef, animationsActive);\n      };\n    }\n\n    var mapperId = startMapper(fun, inputs, [], _upadterFn2, sharableViewDescriptors);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedStyle.js"],"names":["useEffect","useRef","startMapper","stopMapper","makeRemote","requestFrame","getTimestamp","makeMutable","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","canApplyOptimalisation","getStyleWithoutAnimations","hasColorProps","isAnimated","parseColors","styleDiff","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_a","_b","animations","newValues","oldValues","last","hasAnimations","frame","isAnimationCancelled","isAnimationRunning","updates","propName","_frameTimestamp","style","jestStyleUpdater","animatedStyle","adapters","length","diff","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","initRef","inputs","values","_closure","adaptersArray","adaptersHash","__workletHash","push","initialStyle","initial","remoteState","sharableViewDescriptors","rebuildsharableViewDescriptors","native","fun","upadterFn","optimalization","__optimalization","adapter","mapperId","process","env","JEST_WORKER_ID"],"mappings":"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","sourcesContent":["/* global _frameTimestamp */\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable, } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles, } from './utils';\nimport { makeViewDescriptorsSet, makeViewsRefSet, } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\n    'worklet';\n    if (Array.isArray(animatedProp)) {\n        animatedProp.forEach((prop, index) => prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]));\n        // return animatedProp;\n    }\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n        const animation = animatedProp;\n        let value = animation.current;\n        if (lastValue !== undefined) {\n            if (typeof lastValue === 'object') {\n                if (lastValue.value !== undefined) {\n                    // previously it was a shared value\n                    value = lastValue.value;\n                }\n                else if (lastValue.onFrame !== undefined) {\n                    if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n                        // it was an animation before, copy its state\n                        value = lastAnimation.current;\n                    }\n                    else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n                        // it was initialized\n                        value = lastValue.current;\n                    }\n                }\n            }\n            else {\n                // previously it was a plain value, just set it as starting point\n                value = lastValue;\n            }\n        }\n        animation.callStart = (timestamp) => {\n            animation.onStart(animation, value, timestamp, lastAnimation);\n        };\n        animation.callStart(getTimestamp());\n        animation.callStart = null;\n    }\n    else if (typeof animatedProp === 'object') {\n        // it is an object\n        Object.keys(animatedProp).forEach((key) => prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]));\n    }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n    'worklet';\n    if (!animationsActive.value) {\n        return true;\n    }\n    if (Array.isArray(animation)) {\n        result[key] = [];\n        let allFinished = true;\n        animation.forEach((entry, index) => {\n            if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else if (typeof animation === 'object' && animation.onFrame) {\n        let finished = true;\n        if (!animation.finished) {\n            if (animation.callStart) {\n                animation.callStart(timestamp);\n                animation.callStart = null;\n            }\n            finished = animation.onFrame(animation, timestamp);\n            animation.timestamp = timestamp;\n            if (finished) {\n                animation.finished = true;\n                animation.callback && animation.callback(true /* finished */);\n            }\n        }\n        result[key] = animation.current;\n        return finished;\n    }\n    else if (typeof animation === 'object') {\n        result[key] = {};\n        let allFinished = true;\n        Object.keys(animation).forEach((k) => {\n            if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else {\n        result[key] = animation;\n        return true;\n    }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    let hasAnimations = false;\n    for (const key in newValues) {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n        else {\n            delete animations[key];\n        }\n    }\n    if (hasAnimations) {\n        const frame = (timestamp) => {\n            const { animations, last, isAnimationCancelled } = state;\n            if (isAnimationCancelled) {\n                state.isAnimationRunning = false;\n                return;\n            }\n            const updates = {};\n            let allFinished = true;\n            for (const propName in animations) {\n                const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n                if (finished) {\n                    last[propName] = updates[propName];\n                    delete animations[propName];\n                }\n                else {\n                    allFinished = false;\n                }\n            }\n            if (updates) {\n                updateProps(viewDescriptors, updates, maybeViewRef);\n            }\n            if (!allFinished) {\n                requestFrame(frame);\n            }\n            else {\n                state.isAnimationRunning = false;\n            }\n        };\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n        state.last = Object.assign({}, oldValues, newValues);\n        const style = getStyleWithoutAnimations(state.last);\n        if (style) {\n            updateProps(viewDescriptors, style, maybeViewRef);\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n        updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle, adapters = []) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    // extract animated props\n    let hasAnimations = false;\n    Object.keys(animations).forEach((key) => {\n        const value = newValues[key];\n        if (!isAnimated(value)) {\n            delete animations[key];\n        }\n    });\n    Object.keys(newValues).forEach((key) => {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n    });\n    function frame(timestamp) {\n        const { animations, last, isAnimationCancelled } = state;\n        if (isAnimationCancelled) {\n            state.isAnimationRunning = false;\n            return;\n        }\n        const updates = {};\n        let allFinished = true;\n        Object.keys(animations).forEach((propName) => {\n            const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n            if (finished) {\n                last[propName] = updates[propName];\n                delete animations[propName];\n            }\n            else {\n                allFinished = false;\n            }\n        });\n        if (Object.keys(updates).length) {\n            updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n        }\n        if (!allFinished) {\n            requestFrame(frame);\n        }\n        else {\n            state.isAnimationRunning = false;\n        }\n    }\n    if (hasAnimations) {\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n    }\n    // calculate diff\n    const diff = styleDiff(oldValues, newValues);\n    state.last = Object.assign({}, oldValues, newValues);\n    if (Object.keys(diff).length !== 0) {\n        updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n    }\n}\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(prop, currentKey) {\n    if (Array.isArray(prop)) {\n        // if it's an array (i.ex. transform) validate all its elements\n        for (const element of prop) {\n            checkSharedValueUsage(element, currentKey);\n        }\n    }\n    else if (typeof prop === 'object' && prop.value === undefined) {\n        // if it's a nested object, run validation for all its props\n        for (const key of Object.keys(prop)) {\n            checkSharedValueUsage(prop[key], key);\n        }\n    }\n    else if (currentKey !== undefined &&\n        typeof prop === 'object' &&\n        prop.value !== undefined) {\n        // if shared value is passed insted of its value, throw an error\n        throw new Error(`invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n    }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n    var _a, _b;\n    const viewsRef = makeViewsRefSet();\n    const viewDescriptors = makeViewDescriptorsSet();\n    const initRef = useRef();\n    const inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n    const adaptersArray = adapters\n        ? Array.isArray(adapters)\n            ? adapters\n            : [adapters]\n        : [];\n    const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n    const animationsActive = useSharedValue(true);\n    const animatedStyle = useRef({});\n    // build dependencies\n    if (!dependencies) {\n        dependencies = [...inputs, updater.__workletHash];\n    }\n    else {\n        dependencies.push(updater.__workletHash);\n    }\n    adaptersHash && dependencies.push(adaptersHash);\n    if (!initRef.current) {\n        const initialStyle = initialUpdaterRun(updater);\n        validateAnimatedStyles(initialStyle);\n        initRef.current = {\n            initial: {\n                value: initialStyle,\n                updater: updater,\n            },\n            remoteState: makeRemote({ last: initialStyle }),\n            sharableViewDescriptors: makeMutable([]),\n        };\n        viewDescriptors.rebuildsharableViewDescriptors(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        initRef.current.sharableViewDescriptors);\n    }\n    dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { initial, remoteState, sharableViewDescriptors } = initRef.current;\n    const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n    useEffect(() => {\n        let fun;\n        let upadterFn = updater;\n        let optimalization = updater.__optimalization;\n        if (adapters) {\n            upadterFn = () => {\n                'worklet';\n                const newValues = updater();\n                adaptersArray.forEach((adapter) => {\n                    adapter(newValues);\n                });\n                return newValues;\n            };\n        }\n        if (canApplyOptimalisation(upadterFn) && !shouldBeUseWeb()) {\n            if (hasColorProps(upadterFn())) {\n                upadterFn = () => {\n                    'worklet';\n                    const style = upadterFn();\n                    parseColors(style);\n                    return style;\n                };\n            }\n        }\n        else if (!shouldBeUseWeb()) {\n            optimalization = 0;\n            upadterFn = () => {\n                'worklet';\n                const style = upadterFn();\n                parseColors(style);\n                return style;\n            };\n        }\n        if (typeof updater.__optimalization !== undefined) {\n            upadterFn.__optimalization = optimalization;\n        }\n        if (isJest()) {\n            fun = () => {\n                'worklet';\n                jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n            };\n        }\n        else {\n            fun = () => {\n                'worklet';\n                styleUpdater(sharableViewDescriptors, upadterFn, remoteState, maybeViewRef, animationsActive);\n            };\n        }\n        const mapperId = startMapper(fun, inputs, [], upadterFn, \n        // TODO fix this\n        sharableViewDescriptors);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        animationsActive.value = true;\n        return () => {\n            // initRef.current = null;\n            // viewsRef = null;\n            animationsActive.value = false;\n        };\n    }, []);\n    checkSharedValueUsage(initial.value);\n    if (process.env.JEST_WORKER_ID) {\n        return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\n    }\n    else {\n        return { viewDescriptors, initial: initial, viewsRef };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}