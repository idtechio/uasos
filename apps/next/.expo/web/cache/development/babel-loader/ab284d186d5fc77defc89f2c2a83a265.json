{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_ExecutionEnvironment.canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return _ExecutionEnvironment.canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _ExecutionEnvironment.canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-web/dist/cjs/exports/DeviceInfo/index.js"],"names":["exports","__esModule","default","_ExecutionEnvironment","require","_Dimensions","_interopRequireDefault","obj","DeviceInfo","Dimensions","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","canUseDOM","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,+BAAD,CAAnC;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,iBAAR,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAU/F,IAAIC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE;AACV,QAAIC,oBAAJ,GAA2B;AACzB,UAAIC,eAAe,GAAGN,WAAW,CAACH,OAAZ,CAAoBU,GAApB,CAAwB,QAAxB,CAAtB;AAAA,UACIC,KAAK,GAAGF,eAAe,CAACE,KAD5B;AAAA,UAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;AAAA,UAGIC,SAAS,GAAGJ,eAAe,CAACI,SAHhC;AAAA,UAIIC,KAAK,GAAGL,eAAe,CAACK,KAJ5B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAAEA,KAHF;AAILD,QAAAA,SAAS,EAAEA;AAJN,OAAP;AAMD,KAdS;;AAgBV,QAAIE,oBAAJ,GAA2B;AACzB,UAAIC,gBAAgB,GAAGb,WAAW,CAACH,OAAZ,CAAoBU,GAApB,CAAwB,QAAxB,CAAvB;AAAA,UACIC,KAAK,GAAGK,gBAAgB,CAACL,KAD7B;AAAA,UAEIC,MAAM,GAAGI,gBAAgB,CAACJ,MAF9B;AAAA,UAGIC,SAAS,GAAGG,gBAAgB,CAACH,SAHjC;AAAA,UAIIC,KAAK,GAAGE,gBAAgB,CAACF,KAJ7B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAAEA,KAHF;AAILD,QAAAA,SAAS,EAAEA;AAJN,OAAP;AAMD;;AA7BS,GADG;;AAkCf,MAAII,MAAJ,GAAa;AACX,QAAIhB,qBAAqB,CAACiB,SAA1B,EAAqC;AACnC,UAAIC,SAAS,CAACC,SAAd,EAAyB;AACvB,eAAOD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAP;AACD,OAFD,MAEO;AACL,eAAOD,SAAS,CAACE,QAAjB;AACD;AACF;AACF,GA1Cc;;AA4Cf,MAAIC,WAAJ,GAAkB;AAEhB,WAAOrB,qBAAqB,CAACiB,SAAtB,GAAkCC,SAAS,CAACI,YAA5C,GAA2DC,SAAlE;AACD,GA/Cc;;AAiDf,MAAIC,SAAJ,GAAgB;AACd,WAAOxB,qBAAqB,CAACiB,SAAtB,GAAkCC,SAAS,CAACM,SAA5C,GAAwD,EAA/D;AACD;;AAnDc,CAAjB;AAsDA,IAAIC,QAAQ,GAAGpB,UAAf;AACAR,OAAO,CAACE,OAAR,GAAkB0B,QAAlB;AACAC,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_ExecutionEnvironment.canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return _ExecutionEnvironment.canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _ExecutionEnvironment.canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}