{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19;\n\nimport { useTranslation } from \"next-i18next\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styled, { css, useTheme } from \"styled-components/native\";\nimport SectionTitle from \"../SectionTitle\";\nimport pathSVG from \"../../../public/how-does-it-work-path.png\";\nimport { Fragment, useMemo } from \"react\";\nimport Section from \"../Section\";\nvar Image = styled.Image(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"])));\nvar ContentContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  padding-left: 16px;\\n  margin: 0 auto;\\n\\n  \", \"\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n        flex-direction: row;\\n        padding-left: 50px;\\n        padding-right: 50px;\\n        margin-top: 30px;\\n        margin-bottom: 100px;\\n        max-width: 632px;\\n      \"])))\n  });\n});\nvar ImageSize = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n        height: auto;\\n        aspect-ratio: 1.35;\\n        flex: 1;\\n      \"])))\n  });\n});\nvar PathItemDot = styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  color: \", \";\\n  border: 3px solid \", \";\\n  border-radius: 50%;\\n  width: 42px;\\n  height: 42px;\\n  background: #fff;\\n  margin-right: 20px;\\n\\n  \", \"\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.text;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.text;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n        width: 50px;\\n        height: 50px;\\n        margin-right: 0;\\n      \"])))\n  });\n});\nvar PathItemDotText = styled.Text(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  font-size: 22px;\\n\\n  \", \"\\n\"])), function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n        font-size: 25px;\\n      \"])))\n  });\n});\nvar PathDotConnector = styled.View(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  border: 0 dashed \", \";\\n  border-left-width: 3px;\\n  height: 55px;\\n  width: 1px;\\n  margin-left: 20px;\\n\"])), function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.colors.cta;\n});\nvar PathItemText = styled.Text(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 16px;\\n\\n  \", \"\\n\"])), function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.colors.text;\n}, function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n        margin-top: 20px;\\n        text-align: center;\\n        font-size: 20px;\\n      \"])))\n  });\n});\nvar PathItemMobileContainer = styled.View(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  align-items: center;\\n\"])));\nvar PathItemDesktopContainer = styled.View(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  position: absolute;\\n  \", \"\\n\"])), function (props) {\n  switch (props.number) {\n    case 0:\n      return css(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n          top: 30%;\\n          left: -6%;\\n        \"])));\n\n    case 1:\n      return css(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n          top: -5%;\\n          left: 55%;\\n        \"])));\n\n    case 2:\n      return css(_templateObject17 || (_templateObject17 = _taggedTemplateLiteralLoose([\"\\n          top: 39%;\\n          right: 10%;\\n        \"])));\n\n    case 3:\n      return css(_templateObject18 || (_templateObject18 = _taggedTemplateLiteralLoose([\"\\n          bottom: -19%;\\n          left: 40%;\\n        \"])));\n\n    case 4:\n      return css(_templateObject19 || (_templateObject19 = _taggedTemplateLiteralLoose([\"\\n          bottom: -13%;\\n          right: -4%;\\n        \"])));\n  }\n});\nexport function HowDoesItWorkSection() {\n  var _ref10 = useTheme(),\n      getBreakPoint = _ref10.getBreakPoint;\n\n  var _useTranslation = useTranslation(\"landingPage\"),\n      t = _useTranslation.t;\n\n  var isDesktop = getBreakPoint({\n    default: false,\n    lg: true\n  });\n  var points = useMemo(function () {\n    if (isDesktop) {\n      return React.createElement(React.Fragment, null, Array.from({\n        length: 5\n      }).map(function (_, index) {\n        var customIndex = index;\n\n        if (index === 3) {\n          customIndex = 4;\n        }\n\n        if (index === 4) {\n          customIndex = 3;\n        }\n\n        return React.createElement(PathItemDesktopContainer, {\n          key: index,\n          number: index\n        }, React.createElement(PathItemDot, null, React.createElement(PathItemDotText, null, index + 1)), React.createElement(PathItemText, null, t(\"howDoesItWork.points.\" + customIndex)));\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, Array.from({\n      length: 5\n    }).map(function (_, index, arr) {\n      var customIndex = index;\n\n      if (index === 3) {\n        customIndex = 4;\n      }\n\n      if (index === 4) {\n        customIndex = 3;\n      }\n\n      return React.createElement(Fragment, {\n        key: index\n      }, React.createElement(PathItemMobileContainer, null, React.createElement(PathItemDot, null, React.createElement(Text, null, index + 1)), React.createElement(PathItemText, null, t(\"howDoesItWork.points.\" + customIndex))), index !== arr.length - 1 && React.createElement(PathDotConnector, null));\n    }));\n  }, [isDesktop, t]);\n  return React.createElement(Section, null, React.createElement(SectionTitle, {\n    title: t(\"howDoesItWork.title\")\n  }), React.createElement(ContentContainer, null, isDesktop && React.createElement(ImageSize, null, React.createElement(Image, {\n    source: pathSVG.src,\n    resizeMode: \"cover\",\n    alt: \"infographic\"\n  })), points));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/LandingSections/HowDoesItWorkSection.tsx"],"names":["useTranslation","styled","css","useTheme","SectionTitle","pathSVG","Fragment","useMemo","Section","Image","ContentContainer","View","theme","getBreakPoint","lg","ImageSize","PathItemDot","colors","text","PathItemDotText","Text","PathDotConnector","cta","PathItemText","PathItemMobileContainer","PathItemDesktopContainer","props","number","HowDoesItWorkSection","t","isDesktop","default","points","Array","from","length","map","_","index","customIndex","arr","src"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,cAA/B;;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,QAAtB,QAAsC,0BAAtC;AACA,OAAOC,YAAP;AACA,OAAOC,OAAP;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,OAAOC,OAAP;AAGA,IAAMC,KAAK,GAAGR,MAAM,CAACQ,KAAV,wFAAX;AAIA,IAAMC,gBAAgB,GAAGT,MAAM,CAACU,IAAV,mJAKlB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAEZ,GAAF;AADgB,GAApB,CADA;AAAA,CALkB,CAAtB;AAkBA,IAAMa,SAAS,GAAGd,MAAM,CAACU,IAAV,uFACX;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAEZ,GAAF;AADgB,GAApB,CADA;AAAA,CADW,CAAf;AAWA,IAAMc,WAAW,GAAGf,MAAM,CAACU,IAAV,4RAGN;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACK,MAAN,CAAaC,IAA9C;AAAA,CAHM,EAIK;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACK,MAAN,CAAaC,IAA9C;AAAA,CAJL,EAWb;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAEZ,GAAF;AADgB,GAApB,CADA;AAAA,CAXa,CAAjB;AAqBA,IAAMiB,eAAe,GAAGlB,MAAM,CAACmB,IAAV,6GAGjB;AAAA,MAAGR,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAEZ,GAAF;AADgB,GAApB,CADA;AAAA,CAHiB,CAArB;AAWA,IAAMmB,gBAAgB,GAAGpB,MAAM,CAACU,IAAV,4LACD;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACK,MAAN,CAAaK,GAA9C;AAAA,CADC,CAAtB;AAQA,IAAMC,YAAY,GAAGtB,MAAM,CAACmB,IAAV,+HACP;AAAA,MAAGR,KAAH,SAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACK,MAAN,CAAaC,IAA9C;AAAA,CADO,EAId;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAEZ,GAAF;AADgB,GAApB,CADA;AAAA,CAJc,CAAlB;AAcA,IAAMsB,uBAAuB,GAAGvB,MAAM,CAACU,IAAV,gIAA7B;AAKA,IAAMc,wBAAwB,GAAGxB,MAAM,CAACU,IAAV,wIAG1B,UAACe,KAAD,EAAW;AACX,UAAQA,KAAK,CAACC,MAAd;AACE,SAAK,CAAL;AACE,aAAOzB,GAAP;;AAIF,SAAK,CAAL;AACE,aAAOA,GAAP;;AAIF,SAAK,CAAL;AACE,aAAOA,GAAP;;AAIF,SAAK,CAAL;AACE,aAAOA,GAAP;;AAIF,SAAK,CAAL;AACE,aAAOA,GAAP;AAtBJ;AA2BD,CA/B2B,CAA9B;AAkCA,OAAO,SAAS0B,oBAAT,GAAgC;AACrC,eAA0BzB,QAAQ,EAAlC;AAAA,MAAQU,aAAR,UAAQA,aAAR;;AACA,wBAAcb,cAAc,CAAC,aAAD,CAA5B;AAAA,MAAQ6B,CAAR,mBAAQA,CAAR;;AACA,MAAMC,SAAS,GAAGjB,aAAa,CAAC;AAAEkB,IAAAA,OAAO,EAAE,KAAX;AAAkBjB,IAAAA,EAAE,EAAE;AAAtB,GAAD,CAA/B;AAEA,MAAMkB,MAAM,GAAGzB,OAAO,CAAC,YAAM;AAC3B,QAAIuB,SAAJ,EAAe;AACb,aACE,0CACGG,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA0BC,GAA1B,CAA8B,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAE3C,YAAIC,WAAW,GAAGD,KAAlB;;AACA,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACfC,UAAAA,WAAW,GAAG,CAAd;AACD;;AAED,YAAID,KAAK,KAAK,CAAd,EAAiB;AACfC,UAAAA,WAAW,GAAG,CAAd;AACD;;AAED,eACE,oBAAC,wBAAD;AAA0B,UAAA,GAAG,EAAED,KAA/B;AAAsC,UAAA,MAAM,EAAEA;AAA9C,WACE,oBAAC,WAAD,QACE,oBAAC,eAAD,QAAkBA,KAAK,GAAG,CAA1B,CADF,CADF,EAIE,oBAAC,YAAD,QACGT,CAAC,2BAAyBU,WAAzB,CADJ,CAJF,CADF;AAUD,OArBA,CADH,CADF;AA0BD;;AAED,WACE,0CACGN,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAX,EAA0BC,GAA1B,CAA8B,UAACC,CAAD,EAAIC,KAAJ,EAAWE,GAAX,EAAmB;AAChD,UAAID,WAAW,GAAGD,KAAlB;;AACA,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACfC,QAAAA,WAAW,GAAG,CAAd;AACD;;AAED,UAAID,KAAK,KAAK,CAAd,EAAiB;AACfC,QAAAA,WAAW,GAAG,CAAd;AACD;;AAED,aACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAED;AAAf,SACE,oBAAC,uBAAD,QACE,oBAAC,WAAD,QACE,oBAAC,IAAD,QAAOA,KAAK,GAAG,CAAf,CADF,CADF,EAIE,oBAAC,YAAD,QACGT,CAAC,2BAAyBU,WAAzB,CADJ,CAJF,CADF,EASGD,KAAK,KAAKE,GAAG,CAACL,MAAJ,GAAa,CAAvB,IAA4B,oBAAC,gBAAD,OAT/B,CADF;AAaD,KAvBA,CADH,CADF;AA4BD,GA1DqB,EA0DnB,CAACL,SAAD,EAAYD,CAAZ,CA1DmB,CAAtB;AA2DA,SACE,oBAAC,OAAD,QACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,CAAC,CAAC,qBAAD;AAAtB,IADF,EAEE,oBAAC,gBAAD,QACGC,SAAS,IACR,oBAAC,SAAD,QAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEzB,OAAO,CAACoC,GAAvB;AAA4B,IAAA,UAAU,EAAC,OAAvC;AAA+C,IAAA,GAAG,EAAC;AAAnD,IAFF,CAFJ,EAOGT,MAPH,CAFF,CADF;AAcD","sourcesContent":["import { useTranslation } from \"next-i18next\";\nimport { Text } from \"react-native\";\nimport styled, { css, useTheme } from \"styled-components/native\";\nimport SectionTitle from \"../SectionTitle\";\nimport pathSVG from \"../../../public/how-does-it-work-path.png\";\nimport { Fragment, useMemo } from \"react\";\nimport Section from \"../Section\";\nimport { Theme } from \"../../style/theme.config\";\n\nconst Image = styled.Image`\n  flex: 1;\n`;\n\nconst ContentContainer = styled.View`\n  width: 100%;\n  padding-left: 16px;\n  margin: 0 auto;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        flex-direction: row;\n        padding-left: 50px;\n        padding-right: 50px;\n        margin-top: 30px;\n        margin-bottom: 100px;\n        max-width: 632px;\n      `,\n    })}\n`;\n\nconst ImageSize = styled.View`\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        height: auto;\n        aspect-ratio: 1.35;\n        flex: 1;\n      `,\n    })}\n`;\n\nconst PathItemDot = styled.View`\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }: { theme: Theme }) => theme.colors.text};\n  border: 3px solid ${({ theme }: { theme: Theme }) => theme.colors.text};\n  border-radius: 50%;\n  width: 42px;\n  height: 42px;\n  background: #fff;\n  margin-right: 20px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        width: 50px;\n        height: 50px;\n        margin-right: 0;\n      `,\n    })}\n`;\n\nconst PathItemDotText = styled.Text`\n  font-size: 22px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        font-size: 25px;\n      `,\n    })}\n`;\n\nconst PathDotConnector = styled.View`\n  border: 0 dashed ${({ theme }: { theme: Theme }) => theme.colors.cta};\n  border-left-width: 3px;\n  height: 55px;\n  width: 1px;\n  margin-left: 20px;\n`;\n\nconst PathItemText = styled.Text`\n  color: ${({ theme }: { theme: Theme }) => theme.colors.text};\n  font-size: 16px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        margin-top: 20px;\n        text-align: center;\n        font-size: 20px;\n      `,\n    })}\n`;\n\nconst PathItemMobileContainer = styled.View`\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PathItemDesktopContainer = styled.View<{ number?: number }>`\n  align-items: center;\n  position: absolute;\n  ${(props) => {\n    switch (props.number) {\n      case 0:\n        return css`\n          top: 30%;\n          left: -6%;\n        `;\n      case 1:\n        return css`\n          top: -5%;\n          left: 55%;\n        `;\n      case 2:\n        return css`\n          top: 39%;\n          right: 10%;\n        `;\n      case 3:\n        return css`\n          bottom: -19%;\n          left: 40%;\n        `;\n      case 4:\n        return css`\n          bottom: -13%;\n          right: -4%;\n        `;\n    }\n  }}\n`;\n\nexport function HowDoesItWorkSection() {\n  const { getBreakPoint } = useTheme() as Theme;\n  const { t } = useTranslation(\"landingPage\");\n  const isDesktop = getBreakPoint({ default: false, lg: true });\n\n  const points = useMemo(() => {\n    if (isDesktop) {\n      return (\n        <>\n          {Array.from({ length: 5 }).map((_, index) => {\n            // Shitty code, just changing order of items\n            let customIndex = index;\n            if (index === 3) {\n              customIndex = 4;\n            }\n\n            if (index === 4) {\n              customIndex = 3;\n            }\n\n            return (\n              <PathItemDesktopContainer key={index} number={index}>\n                <PathItemDot>\n                  <PathItemDotText>{index + 1}</PathItemDotText>\n                </PathItemDot>\n                <PathItemText>\n                  {t(`howDoesItWork.points.${customIndex}`)}\n                </PathItemText>\n              </PathItemDesktopContainer>\n            );\n          })}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {Array.from({ length: 5 }).map((_, index, arr) => {\n          let customIndex = index;\n          if (index === 3) {\n            customIndex = 4;\n          }\n\n          if (index === 4) {\n            customIndex = 3;\n          }\n\n          return (\n            <Fragment key={index}>\n              <PathItemMobileContainer>\n                <PathItemDot>\n                  <Text>{index + 1}</Text>\n                </PathItemDot>\n                <PathItemText>\n                  {t(`howDoesItWork.points.${customIndex}`)}\n                </PathItemText>\n              </PathItemMobileContainer>\n              {index !== arr.length - 1 && <PathDotConnector />}\n            </Fragment>\n          );\n        })}\n      </>\n    );\n  }, [isDesktop, t]);\n  return (\n    <Section>\n      <SectionTitle title={t(\"howDoesItWork.title\")} />\n      <ContentContainer>\n        {isDesktop && (\n          <ImageSize>\n            {/* @ts-expect-error TODO: fix prop types */}\n            <Image source={pathSVG.src} resizeMode=\"cover\" alt=\"infographic\" />\n          </ImageSize>\n        )}\n        {points}\n      </ContentContainer>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}