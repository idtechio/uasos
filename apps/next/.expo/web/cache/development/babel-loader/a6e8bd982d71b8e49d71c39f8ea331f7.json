{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { BaseGesture, Gesture } from \"./gesture\";\n\nfunction extendRelation(currentRelation, extendWith) {\n  if (currentRelation === undefined) {\n    return _toConsumableArray(extendWith);\n  } else {\n    return [].concat(_toConsumableArray(currentRelation), _toConsumableArray(extendWith));\n  }\n}\n\nexport var ComposedGesture = function (_Gesture) {\n  _inherits(ComposedGesture, _Gesture);\n\n  var _super = _createSuper(ComposedGesture);\n\n  function ComposedGesture() {\n    var _this;\n\n    _classCallCheck(this, ComposedGesture);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"gestures\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"simultaneousGestures\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"requireGesturesToFail\", []);\n\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n\n    _this.gestures = gestures;\n    return _this;\n  }\n\n  _createClass(ComposedGesture, [{\n    key: \"prepareSingleGesture\",\n    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof BaseGesture) {\n        var newConfig = _objectSpread({}, gesture.config);\n\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      for (var _iterator = _createForOfIteratorHelperLoose(this.gestures), _step; !(_step = _iterator()).done;) {\n        var gesture = _step.value;\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.gestures), _step2; !(_step2 = _iterator2()).done;) {\n        var gesture = _step2.value;\n        gesture.initialize();\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      });\n    }\n  }]);\n\n  return ComposedGesture;\n}(Gesture);\nexport var SimultaneousGesture = function (_ComposedGesture) {\n  _inherits(SimultaneousGesture, _ComposedGesture);\n\n  var _super2 = _createSuper(SimultaneousGesture);\n\n  function SimultaneousGesture() {\n    _classCallCheck(this, SimultaneousGesture);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(SimultaneousGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var simultaneousArray = this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      }).concat(this.simultaneousGestures);\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.gestures), _step3; !(_step3 = _iterator3()).done;) {\n        var gesture = _step3.value;\n        this.prepareSingleGesture(gesture, simultaneousArray, this.requireGesturesToFail);\n      }\n    }\n  }]);\n\n  return SimultaneousGesture;\n}(ComposedGesture);\nexport var ExclusiveGesture = function (_ComposedGesture2) {\n  _inherits(ExclusiveGesture, _ComposedGesture2);\n\n  var _super3 = _createSuper(ExclusiveGesture);\n\n  function ExclusiveGesture() {\n    _classCallCheck(this, ExclusiveGesture);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(ExclusiveGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var gestureArrays = this.gestures.map(function (gesture) {\n        return gesture.toGestureArray();\n      });\n      var requireToFail = [];\n\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }]);\n\n  return ExclusiveGesture;\n}(ComposedGesture);","map":{"version":3,"sources":["gestureComposition.ts"],"names":["currentRelation","constructor","prepareSingleGesture","gesture","newConfig","config","extendRelation","prepare","initialize","toGestureArray","simultaneousArray","gestureArrays","requireToFail","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,WAAA,EAAA,OAAA;;AAEA,SAAA,cAAA,CAAA,eAAA,EAAA,UAAA,EAGE;AACA,MAAIA,eAAe,KAAnB,SAAA,EAAmC;AACjC,8BAAA,UAAA;AADF,GAAA,MAEO;AACL,wCAAO,eAAP,sBAAA,UAAA;AACD;AACF;;AAED,WAAO,eAAP;AAAA;;AAAA;;AAKEC,6BAAoC;AAAA;;AAAA;;AAClC;;AADkC,IAAA,eAAA,gCAAA,UAAA,EAJJ,EAII,CAAA;;AAAA,IAAA,eAAA,gCAAA,sBAAA,EAHY,EAGZ,CAAA;;AAAA,IAAA,eAAA,gCAAA,uBAAA,EAFa,EAEb,CAAA;;AAAA,sCAAzB,QAAyB;AAAzB,MAAA,QAAyB;AAAA;;AAElC,UAAA,QAAA,GAAA,QAAA;AAFkC;AAGnC;;AARH;AAAA;AAAA,WAUYC,8BAAoB,OAApBA,EAAoB,oBAApBA,EAAoB,qBAApBA,EAIR;AACA,UAAIC,OAAO,YAAX,WAAA,EAAoC;AAClC,YAAMC,SAAS,qBAAQD,OAAO,CAACE,MAAhB,CAAf;;AAEAD,QAAAA,SAAS,CAATA,gBAAAA,GAA6BE,cAAc,CACzCF,SAAS,CADgC,gBAAA,EAA3CA,oBAA2C,CAA3CA;AAIAA,QAAAA,SAAS,CAATA,aAAAA,GAA0BE,cAAc,CACtCF,SAAS,CAD6B,aAAA,EAAxCA,qBAAwC,CAAxCA;AAKAD,QAAAA,OAAO,CAAPA,MAAAA,GAAAA,SAAAA;AAZF,OAAA,MAaO,IAAIA,OAAO,YAAX,eAAA,EAAwC;AAC7CA,QAAAA,OAAO,CAAPA,oBAAAA,GAAAA,oBAAAA;AACAA,QAAAA,OAAO,CAAPA,qBAAAA,GAAAA,qBAAAA;AACAA,QAAAA,OAAO,CAAPA,OAAAA;AACD;AACF;AAjCH;AAAA;AAAA,WAmCEI,mBAAU;AACR,2DAAsB,KAAtB,QAAA,wCAAqC;AAAA,YAArC,OAAqC;AACnC,aAAA,oBAAA,CAAA,OAAA,EAEE,KAFF,oBAAA,EAGE,KAHF,qBAAA;AAKD;AACF;AA3CH;AAAA;AAAA,WA6CEC,sBAAa;AACX,4DAAsB,KAAtB,QAAA,2CAAqC;AAAA,YAArC,OAAqC;AACnCL,QAAAA,OAAO,CAAPA,UAAAA;AACD;AACF;AAjDH;AAAA;AAAA,WAmDEM,0BAAgC;AAC9B,aAAO,KAAA,QAAA,CAAA,OAAA,CAAuBN,UAAAA,OAAD;AAAA,eAAaA,OAAO,CAAjD,cAA0CA,EAAb;AAAA,OAAtB,CAAP;AACD;AArDH;;AAAA;AAAA,EAAO,OAAP;AAwDA,WAAO,mBAAP;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACEI,mBAAU;AACR,UAAMG,iBAAiB,GAAG,KAAA,QAAA,CAAA,OAAA,CACdP,UAAAA,OAAD;AAAA,eAAaA,OAAO,CADL,cACFA,EAAb;AAAA,OADe,EAAA,MAAA,CAEhB,KAFV,oBAA0B,CAA1B;;AAIA,4DAAsB,KAAtB,QAAA,2CAAqC;AAAA,YAArC,OAAqC;AACnC,aAAA,oBAAA,CAAA,OAAA,EAAA,iBAAA,EAGE,KAHF,qBAAA;AAKD;AACF;AAbH;;AAAA;AAAA,EAAO,eAAP;AAgBA,WAAO,gBAAP;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACEI,mBAAU;AACR,UAAMI,aAAa,GAAG,KAAA,QAAA,CAAA,GAAA,CAAmBR,UAAAA,OAAD;AAAA,eACtCA,OAAO,CADT,cACEA,EADsC;AAAA,OAAlB,CAAtB;AAIA,UAAIS,aAA4B,GAAhC,EAAA;;AAEA,WAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAAA,QAAA,CAApB,MAAA,EAA0CA,CAA1C,EAAA,EAA+C;AAC7C,aAAA,oBAAA,CACE,KAAA,QAAA,CADF,CACE,CADF,EAEE,KAFF,oBAAA,EAGE,KAAA,qBAAA,CAAA,MAAA,CAHF,aAGE,CAHF;AAMAD,QAAAA,aAAa,GAAGA,aAAa,CAAbA,MAAAA,CAAqBD,aAAa,CAAlDC,CAAkD,CAAlCA,CAAhBA;AACD;AACF;AAjBH;;AAAA;AAAA,EAAO,eAAP","sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    const simultaneousArray = this.gestures\n      .flatMap((gesture) => gesture.toGestureArray())\n      .concat(this.simultaneousGestures);\n\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        simultaneousArray,\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"]},"metadata":{},"sourceType":"module"}