{"ast":null,"code":"import { Button, Text } from \"./style\";\nimport React, { useCallback } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ButtonCta = function ButtonCta(_ref) {\n  var style = _ref.style,\n      anchor = _ref.anchor,\n      onPress = _ref.onPress,\n      _ref$colorOpposite = _ref.colorOpposite,\n      colorOpposite = _ref$colorOpposite === void 0 ? false : _ref$colorOpposite,\n      onClick = _ref.onClick,\n      _ref$pressable = _ref.pressable,\n      pressable = _ref$pressable === void 0 ? true : _ref$pressable,\n      disabled = _ref.disabled,\n      isLoading = _ref.isLoading;\n  var handlePress = useCallback(function (event) {\n    onClick == null ? void 0 : onClick(event);\n    onPress == null ? void 0 : onPress(event);\n  }, [onClick, onPress]);\n  return React.createElement(Button, {\n    as: pressable ? Pressable : View,\n    style: style,\n    onPress: handlePress,\n    colorOpposite: colorOpposite,\n    disabled: disabled || isLoading\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\"\n  }) : typeof anchor === \"string\" ? React.createElement(Text, {\n    colorOpposite: colorOpposite\n  }, anchor) : anchor);\n};\n\nexport default ButtonCta;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Buttons/ButtonCta/index.tsx"],"names":["Button","Text","React","useCallback","ButtonCta","style","anchor","onPress","colorOpposite","onClick","pressable","disabled","isLoading","handlePress","event","Pressable","View"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;;;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OASC;AAAA,MARjBC,KAQiB,QARjBA,KAQiB;AAAA,MAPjBC,MAOiB,QAPjBA,MAOiB;AAAA,MANjBC,OAMiB,QANjBA,OAMiB;AAAA,gCALjBC,aAKiB;AAAA,MALjBA,aAKiB,mCALD,KAKC;AAAA,MAJjBC,OAIiB,QAJjBA,OAIiB;AAAA,4BAHjBC,SAGiB;AAAA,MAHjBA,SAGiB,+BAHL,IAGK;AAAA,MAFjBC,QAEiB,QAFjBA,QAEiB;AAAA,MADjBC,SACiB,QADjBA,SACiB;AACjB,MAAMC,WAAW,GAAGV,WAAW,CAC7B,UAACW,KAAD,EAAW;AACTL,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAGK,KAAH,CAAP;AACAP,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAGO,KAAH,CAAP;AACD,GAJ4B,EAK7B,CAACL,OAAD,EAAUF,OAAV,CAL6B,CAA/B;AAQA,SACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEG,SAAS,GAAGK,SAAH,GAAeC,IAD9B;AAEE,IAAA,KAAK,EAAEX,KAFT;AAGE,IAAA,OAAO,EAAEQ,WAHX;AAIE,IAAA,aAAa,EAAEL,aAJjB;AAKE,IAAA,QAAQ,EAAEG,QAAQ,IAAIC;AALxB,KAOGA,SAAS,GACR,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC;AAAxB,IADQ,GAEN,OAAON,MAAP,KAAkB,QAAlB,GACF,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAEE;AAArB,KAAqCF,MAArC,CADE,GAGFA,MAZJ,CADF;AAiBD,CAnCD;;AAqCA,eAAeF,SAAf","sourcesContent":["import { Button, Text } from \"./style\";\nimport type { ButtonProps } from \"../types\";\nimport React, { useCallback } from \"react\";\nimport { ActivityIndicator, Pressable, View } from \"react-native\";\n\nconst ButtonCta = ({\n  style,\n  anchor,\n  onPress,\n  colorOpposite = false,\n  onClick,\n  pressable = true,\n  disabled,\n  isLoading,\n}: ButtonProps) => {\n  const handlePress = useCallback(\n    (event) => {\n      onClick?.(event);\n      onPress?.(event);\n    },\n    [onClick, onPress]\n  );\n\n  return (\n    <Button\n      as={pressable ? Pressable : View}\n      style={style}\n      onPress={handlePress}\n      colorOpposite={colorOpposite}\n      disabled={disabled || isLoading}\n    >\n      {isLoading ? (\n        <ActivityIndicator size=\"small\" />\n      ) : typeof anchor === \"string\" ? (\n        <Text colorOpposite={colorOpposite}>{anchor}</Text>\n      ) : (\n        anchor\n      )}\n    </Button>\n  );\n};\n\nexport default ButtonCta;\n"]},"metadata":{},"sourceType":"module"}