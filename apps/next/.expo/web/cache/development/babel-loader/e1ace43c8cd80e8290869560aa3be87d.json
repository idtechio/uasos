{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var filterByAlreadyShowed = function filterByAlreadyShowed(alreadyShowed, result) {\n  return result.filter(function (_ref) {\n    var id = _ref.id;\n    return !alreadyShowed[id];\n  });\n};\nexport var filterByStatus = function filterByStatus(status, arrayToFilter) {\n  return arrayToFilter.filter(function (item) {\n    return (item == null ? void 0 : item.match_status) === status;\n  });\n};\nexport var prepareToStorage = function prepareToStorage(alreadyShowed, result) {\n  result.forEach(function (item) {\n    alreadyShowed = _objectSpread(_objectSpread({}, alreadyShowed), {}, _defineProperty({}, item.id, true));\n  });\n  return JSON.stringify(alreadyShowed);\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/ConfirmRejectModal/helpers.ts"],"names":["filterByAlreadyShowed","alreadyShowed","result","filter","id","filterByStatus","status","arrayToFilter","item","match_status","prepareToStorage","forEach","JSON","stringify"],"mappings":";;;;;;AAEA,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CACnCC,aADmC,EAEnCC,MAFmC,EAGhC;AACH,SAAOA,MAAM,CAACC,MAAP,CAAc;AAAA,QAAGC,EAAH,QAAGA,EAAH;AAAA,WAAY,CAACH,aAAa,CAACG,EAAD,CAA1B;AAAA,GAAd,CAAP;AACD,CALM;AAOP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAiBC,aAAjB,EAAiD;AAC7E,SAAOA,aAAa,CAACJ,MAAd,CACL,UAACK,IAAD;AAAA,WAAsB,CAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAEC,YAAN,MAAuBH,MAA7C;AAAA,GADK,CAAP;AAGD,CAJM;AAMP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BT,aAD8B,EAE9BC,MAF8B,EAG3B;AACHA,EAAAA,MAAM,CAACS,OAAP,CAAe,UAACH,IAAD,EAAU;AACvBP,IAAAA,aAAa,mCACRA,aADQ,2BAEVO,IAAI,CAACJ,EAFK,EAEA,IAFA,EAAb;AAID,GALD;AAOA,SAAOQ,IAAI,CAACC,SAAL,CAAeZ,aAAf,CAAP;AACD,CAZM","sourcesContent":["import { Status, ResultItem, AlreadyShowed } from \"./types\";\n\nexport const filterByAlreadyShowed = (\n  alreadyShowed: AlreadyShowed,\n  result: ResultItem[]\n) => {\n  return result.filter(({ id }) => !alreadyShowed[id]);\n};\n\nexport const filterByStatus = (status: Status, arrayToFilter: ResultItem[]) => {\n  return arrayToFilter.filter(\n    (item: ResultItem) => item?.match_status === status\n  );\n};\n\nexport const prepareToStorage = (\n  alreadyShowed: AlreadyShowed,\n  result: ResultItem[]\n) => {\n  result.forEach((item) => {\n    alreadyShowed = {\n      ...alreadyShowed,\n      [item.id]: true,\n    };\n  });\n\n  return JSON.stringify(alreadyShowed);\n};\n"]},"metadata":{},"sourceType":"module"}