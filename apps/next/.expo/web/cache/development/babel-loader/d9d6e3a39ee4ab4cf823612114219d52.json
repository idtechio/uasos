{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getSession } from \"next-auth/react\";\nexport var withSession = function withSession(gssp) {\n  return function _callee(context) {\n    var session;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getSession({\n              req: context.req\n            }));\n\n          case 2:\n            session = _context.sent;\n            return _context.abrupt(\"return\", gssp(context, session));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/helpers/withSession.ts"],"names":["getSession","withSession","gssp","context","req","session"],"mappings":";AAOA,SAASA,UAAT,QAA2B,iBAA3B;AAUA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACzBC,IADyB,EAKF;AACvB,SAAO,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACiBH,UAAU,CAAC;AAAEI,cAAAA,GAAG,EAAED,OAAO,CAACC;AAAf,aAAD,CAD3B;;AAAA;AACCC,YAAAA,OADD;AAAA,6CAEEH,IAAI,CAACC,OAAD,EAAUE,OAAV,CAFN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAID,CAVM","sourcesContent":["import {\n  GetServerSideProps,\n  GetServerSidePropsContext,\n  GetServerSidePropsResult,\n  PreviewData,\n} from \"next\";\nimport { Session } from \"next-auth\";\nimport { getSession } from \"next-auth/react\";\nimport { ParsedUrlQuery } from \"querystring\";\n\n/*\n * Facing issue with combination of `next-auth` and `next-18next`\n * After changing page language, session from next-auth is empty, page needs to be reloaded\n * See issue https://github.com/isaachinman/next-i18next/issues/1680\n * Using workaround https://github.com/isaachinman/next-i18next/issues/1680#issuecomment-1039649501\n */\n\nexport const withSession = <P>(\n  gssp: (\n    context: GetServerSidePropsContext<ParsedUrlQuery, PreviewData>,\n    session: Session | null\n  ) => Promise<GetServerSidePropsResult<P>>\n): GetServerSideProps => {\n  return async (context) => {\n    const session = await getSession({ req: context.req });\n    return gssp(context, session);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}