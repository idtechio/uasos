{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport CardModal from \"../CardModal\";\nimport { CardModalStyle } from \"../EditOfferOptions/EditOfferButton/style\";\nimport ConfirmRejectAbstractModal from \"./ConfirmRejectAbstractModal\";\nimport { useOffersList } from \"../../queries/useOffersList\";\nimport { useRequestsList } from \"../../queries/useRequestsList\";\nimport { MODAL_STATUS, ALREADY_SHOWN } from \"./constants\";\nimport { filterByAlreadyShowed, filterByStatus, prepareToStorage } from \"./helpers\";\nexport default function ConfirmRejectModal(_ref) {\n  var status = _ref.status;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var _useOffersList = useOffersList(),\n      offers = _useOffersList.data;\n\n  var _useRequestsList = useRequestsList(),\n      requests = _useRequestsList.data;\n\n  var isAccept = !!(status === MODAL_STATUS.ACCEPT);\n  var closeModal = useCallback(function () {\n    return setModalOpen(false);\n  }, []);\n  useEffect(function () {\n    var checkIsMatches = function checkIsMatches() {\n      var _offers$offers, _requests$requests;\n\n      var offersArray = (_offers$offers = offers == null ? void 0 : offers.offers) != null ? _offers$offers : [];\n      var requestsArray = (_requests$requests = requests == null ? void 0 : requests.requests) != null ? _requests$requests : [];\n      var valueFromLocalStorage = localStorage.getItem(\"\" + ALREADY_SHOWN + status);\n      var alreadyShowedIds = valueFromLocalStorage ? JSON.parse(valueFromLocalStorage) : {};\n      var withoutAlreadyShowed = filterByAlreadyShowed(alreadyShowedIds, [].concat(_toConsumableArray(offersArray), _toConsumableArray(requestsArray)));\n      var result = filterByStatus(status, withoutAlreadyShowed);\n      localStorage.setItem(\"\" + ALREADY_SHOWN + status, prepareToStorage(alreadyShowedIds, result));\n      setModalOpen(!!result.length);\n    };\n\n    checkIsMatches();\n  }, [offers, requests, status]);\n  return modalOpen ? React.createElement(CardModal, {\n    closeable: true,\n    cardStyle: CardModalStyle\n  }, React.createElement(ConfirmRejectAbstractModal, {\n    close: closeModal,\n    confirm: isAccept\n  })) : null;\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/ConfirmRejectModal/index.tsx"],"names":["React","useEffect","useCallback","useState","CardModal","CardModalStyle","ConfirmRejectAbstractModal","useOffersList","useRequestsList","MODAL_STATUS","ALREADY_SHOWN","filterByAlreadyShowed","filterByStatus","prepareToStorage","ConfirmRejectModal","status","modalOpen","setModalOpen","offers","data","requests","isAccept","ACCEPT","closeModal","checkIsMatches","offersArray","requestsArray","valueFromLocalStorage","localStorage","getItem","alreadyShowedIds","JSON","parse","withoutAlreadyShowed","result","setItem","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP;AACA,SAASC,cAAT;AACA,OAAOC,0BAAP;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AAEA,SAASC,YAAT,EAAuBC,aAAvB;AACA,SACEC,qBADF,EAEEC,cAFF,EAGEC,gBAHF;AAUA,eAAe,SAASC,kBAAT,OAEa;AAAA,MAD1BC,MAC0B,QAD1BA,MAC0B;;AAC1B,kBAAkCZ,QAAQ,CAAU,KAAV,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AACA,uBAAyBV,aAAa,EAAtC;AAAA,MAAcW,MAAd,kBAAQC,IAAR;;AACA,yBAA2BX,eAAe,EAA1C;AAAA,MAAcY,QAAd,oBAAQD,IAAR;;AACA,MAAME,QAAQ,GAAG,CAAC,EAAEN,MAAM,KAAKN,YAAY,CAACa,MAA1B,CAAlB;AAEA,MAAMC,UAAU,GAAGrB,WAAW,CAAC;AAAA,WAAMe,YAAY,CAAC,KAAD,CAAlB;AAAA,GAAD,EAA4B,EAA5B,CAA9B;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMuB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B,UAAMC,WAAW,qBAAGP,MAAH,oBAAGA,MAAM,CAAEA,MAAX,6BAAqB,EAAtC;AACA,UAAMQ,aAAa,yBAAGN,QAAH,oBAAGA,QAAQ,CAAEA,QAAb,iCAAyB,EAA5C;AAEA,UAAMO,qBAAqB,GAAGC,YAAY,CAACC,OAAb,MACzBnB,aADyB,GACTK,MADS,CAA9B;AAIA,UAAMe,gBAA+B,GAAGH,qBAAqB,GACzDI,IAAI,CAACC,KAAL,CAAWL,qBAAX,CADyD,GAEzD,EAFJ;AAIA,UAAMM,oBAAkC,GAAGtB,qBAAqB,CAC9DmB,gBAD8D,+BAE1DL,WAF0D,sBAE1CC,aAF0C,GAAhE;AAKA,UAAMQ,MAAoB,GAAGtB,cAAc,CAACG,MAAD,EAASkB,oBAAT,CAA3C;AAEAL,MAAAA,YAAY,CAACO,OAAb,MACKzB,aADL,GACqBK,MADrB,EAEEF,gBAAgB,CAACiB,gBAAD,EAAmBI,MAAnB,CAFlB;AAKAjB,MAAAA,YAAY,CAAC,CAAC,CAACiB,MAAM,CAACE,MAAV,CAAZ;AACD,KAzBD;;AA2BAZ,IAAAA,cAAc;AACf,GA7BQ,EA6BN,CAACN,MAAD,EAASE,QAAT,EAAmBL,MAAnB,CA7BM,CAAT;AA+BA,SAAOC,SAAS,GACd,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,IAAtB;AAA4B,IAAA,SAAS,EAAEX;AAAvC,KACE,oBAAC,0BAAD;AAA4B,IAAA,KAAK,EAAEkB,UAAnC;AAA+C,IAAA,OAAO,EAAEF;AAAxD,IADF,CADc,GAIZ,IAJJ;AAKD","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport CardModal from \"../CardModal\";\nimport { CardModalStyle } from \"../EditOfferOptions/EditOfferButton/style\";\nimport ConfirmRejectAbstractModal from \"./ConfirmRejectAbstractModal\";\nimport { useOffersList } from \"../../queries/useOffersList\";\nimport { useRequestsList } from \"../../queries/useRequestsList\";\nimport { Status, ResultItem, AlreadyShowed } from \"./types\";\nimport { MODAL_STATUS, ALREADY_SHOWN } from \"./constants\";\nimport {\n  filterByAlreadyShowed,\n  filterByStatus,\n  prepareToStorage,\n} from \"./helpers\";\n\ninterface ConfirmRejectModalProps {\n  status: Status;\n}\n\nexport default function ConfirmRejectModal({\n  status,\n}: ConfirmRejectModalProps) {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const { data: offers } = useOffersList();\n  const { data: requests } = useRequestsList();\n  const isAccept = !!(status === MODAL_STATUS.ACCEPT);\n\n  const closeModal = useCallback(() => setModalOpen(false), []);\n\n  useEffect(() => {\n    const checkIsMatches = () => {\n      const offersArray = offers?.offers ?? [];\n      const requestsArray = requests?.requests ?? [];\n\n      const valueFromLocalStorage = localStorage.getItem(\n        `${ALREADY_SHOWN}${status}`\n      );\n\n      const alreadyShowedIds: AlreadyShowed = valueFromLocalStorage\n        ? JSON.parse(valueFromLocalStorage)\n        : {};\n\n      const withoutAlreadyShowed: ResultItem[] = filterByAlreadyShowed(\n        alreadyShowedIds,\n        [...offersArray, ...requestsArray]\n      );\n\n      const result: ResultItem[] = filterByStatus(status, withoutAlreadyShowed);\n\n      localStorage.setItem(\n        `${ALREADY_SHOWN}${status}`,\n        prepareToStorage(alreadyShowedIds, result)\n      );\n\n      setModalOpen(!!result.length);\n    };\n\n    checkIsMatches();\n  }, [offers, requests, status]);\n\n  return modalOpen ? (\n    <CardModal closeable={true} cardStyle={CardModalStyle}>\n      <ConfirmRejectAbstractModal close={closeModal} confirm={isAccept} />\n    </CardModal>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}