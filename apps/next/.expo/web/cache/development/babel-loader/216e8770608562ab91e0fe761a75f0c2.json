{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useState } from \"react\";\nimport ButtonCta from \"../EditOfferOptions/ButtonCta\";\nimport CardModal from \"../CardModal\";\nimport { CardModalStyle } from \"../EditOfferOptions/EditOfferButton/style\";\nimport { FormFooter } from \"../EditOfferOptions/style\";\nimport ModalOnConfirm from \"./ModalOnConfirm\";\nimport ModalOnReject from \"./ModalOnReject\";\nimport { useTranslation } from \"react-i18next\";\nimport Spinner from \"../Spinner\";\nexport default function DetailsDecisionButtons(_ref) {\n  var matchId = _ref.matchId,\n      typeOfUser = _ref.typeOfUser;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpened = _useState2[0],\n      setModalOpened = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSuccess = _useState6[0],\n      setShowSuccess = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showError = _useState8[0],\n      setShowError = _useState8[1];\n\n  var closeModal = useCallback(function () {\n    setModalOpened(null);\n    setShowError(false);\n    setShowSuccess(false);\n  }, []);\n\n  var handleConfirmMatch = function handleConfirmMatch() {\n    var res, _res;\n\n    return _regeneratorRuntime.async(function handleConfirmMatch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setModalOpened(\"accept\");\n            setIsLoading(true);\n\n            if (!(typeOfUser === \"host\")) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/hosts/matchesconfirm/\" + matchId + \"?accepted=1\", {\n              method: \"GET\"\n            }));\n\n          case 5:\n            res = _context.sent;\n\n            if (res) {\n              setIsLoading(false);\n\n              if (res.status === 200) {\n                setShowSuccess(true);\n              } else {\n                setShowError(true);\n              }\n            }\n\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/guests/matchesconfirm/\" + matchId + \"?accepted=1\", {\n              method: \"GET\"\n            }));\n\n          case 11:\n            _res = _context.sent;\n\n            if (_res) {\n              setIsLoading(false);\n\n              if (_res.status === 200) {\n                setShowSuccess(true);\n              } else {\n                setShowError(true);\n              }\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleRejectMatch = function handleRejectMatch() {\n    var res, _res2;\n\n    return _regeneratorRuntime.async(function handleRejectMatch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setModalOpened(\"reject\");\n            setIsLoading(true);\n\n            if (!(typeOfUser === \"host\")) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/hosts/matchesconfirm/\" + matchId + \"?accepted=0\", {\n              method: \"GET\"\n            }));\n\n          case 5:\n            res = _context2.sent;\n\n            if (res) {\n              setIsLoading(false);\n\n              if (res.status === 200) {\n                setShowSuccess(true);\n              } else {\n                setShowError(true);\n              }\n            }\n\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/guests/matchesconfirm/\" + matchId + \"?accepted=0\", {\n              method: \"GET\"\n            }));\n\n          case 11:\n            _res2 = _context2.sent;\n\n            if (_res2) {\n              setIsLoading(false);\n\n              if (_res2.status === 200) {\n                setShowSuccess(true);\n              } else {\n                setShowError(true);\n              }\n            }\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var Modal = useCallback(function () {\n    switch (modalOpened) {\n      case \"accept\":\n        return React.createElement(CardModal, {\n          closeable: false,\n          cardStyle: CardModalStyle\n        }, isLoading ? React.createElement(Spinner, null) : React.createElement(ModalOnConfirm, {\n          close: closeModal,\n          showSuccess: showSuccess,\n          showError: showError\n        }));\n\n      case \"reject\":\n        return React.createElement(CardModal, {\n          closeable: false,\n          cardStyle: CardModalStyle\n        }, isLoading ? React.createElement(Spinner, null) : React.createElement(ModalOnReject, {\n          close: closeModal,\n          showSuccess: showSuccess,\n          showError: showError\n        }));\n\n      case null:\n      default:\n        return null;\n    }\n  }, [modalOpened, closeModal, isLoading, showSuccess, showError]);\n  return React.createElement(FormFooter, {\n    style: {\n      marginTop: 0,\n      marginBottom: 60,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Modal, null), React.createElement(ButtonCta, {\n    variant: \"outlined\",\n    anchor: t(\"others:common.buttons.reject\"),\n    onPress: handleRejectMatch\n  }), React.createElement(ButtonCta, {\n    anchor: t(\"others:common.buttons.confirm\"),\n    onPress: handleConfirmMatch\n  }));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/DetailsDecisionButtons/DetailsDecisionButtons.tsx"],"names":["React","useCallback","useState","ButtonCta","CardModal","CardModalStyle","FormFooter","ModalOnConfirm","ModalOnReject","useTranslation","Spinner","DetailsDecisionButtons","matchId","typeOfUser","t","modalOpened","setModalOpened","isLoading","setIsLoading","showSuccess","setShowSuccess","showError","setShowError","closeModal","handleConfirmMatch","fetch","process","env","NEXT_PUBLIC_DOMAIN","method","res","status","handleRejectMatch","Modal","marginTop","marginBottom","display","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport ButtonCta from \"../EditOfferOptions/ButtonCta\";\nimport CardModal from \"../CardModal\";\nimport { CardModalStyle } from \"../EditOfferOptions/EditOfferButton/style\";\nimport { FormFooter } from \"../EditOfferOptions/style\";\nimport ModalOnConfirm from \"./ModalOnConfirm\";\nimport ModalOnReject from \"./ModalOnReject\";\nimport { useTranslation } from \"react-i18next\";\nimport Spinner from \"../Spinner\";\n\ninterface DetailsDecisionButtonsProps {\n  typeOfUser: string;\n  matchId: string | null | undefined;\n}\n\nexport default function DetailsDecisionButtons({\n  matchId,\n  typeOfUser,\n}: DetailsDecisionButtonsProps) {\n  const { t } = useTranslation();\n  const [modalOpened, setModalOpened] = useState<\"accept\" | \"reject\" | null>(\n    null\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [showSuccess, setShowSuccess] = useState<boolean>(false);\n  const [showError, setShowError] = useState<boolean>(false);\n\n  const closeModal = useCallback(() => {\n    setModalOpened(null);\n    setShowError(false);\n    setShowSuccess(false);\n  }, []);\n\n  const handleConfirmMatch = async () => {\n    setModalOpened(\"accept\");\n    setIsLoading(true);\n    if (typeOfUser === \"host\") {\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_DOMAIN}api/hosts/matchesconfirm/${matchId}?accepted=1`,\n        { method: \"GET\" }\n      );\n      if (res) {\n        setIsLoading(false);\n        if (res.status === 200) {\n          setShowSuccess(true);\n        } else {\n          setShowError(true);\n        }\n      }\n    } else {\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_DOMAIN}api/guests/matchesconfirm/${matchId}?accepted=1`,\n        { method: \"GET\" }\n      );\n      if (res) {\n        setIsLoading(false);\n        if (res.status === 200) {\n          setShowSuccess(true);\n        } else {\n          setShowError(true);\n        }\n      }\n    }\n  };\n\n  const handleRejectMatch = async () => {\n    setModalOpened(\"reject\");\n    setIsLoading(true);\n    if (typeOfUser === \"host\") {\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_DOMAIN}api/hosts/matchesconfirm/${matchId}?accepted=0`,\n        { method: \"GET\" }\n      );\n      if (res) {\n        setIsLoading(false);\n        if (res.status === 200) {\n          setShowSuccess(true);\n        } else {\n          setShowError(true);\n        }\n      }\n    } else {\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_DOMAIN}api/guests/matchesconfirm/${matchId}?accepted=0`,\n        { method: \"GET\" }\n      );\n      if (res) {\n        setIsLoading(false);\n        if (res.status === 200) {\n          setShowSuccess(true);\n        } else {\n          setShowError(true);\n        }\n      }\n    }\n  };\n\n  const Modal = useCallback(() => {\n    switch (modalOpened) {\n      case \"accept\":\n        return (\n          <CardModal closeable={false} cardStyle={CardModalStyle}>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <ModalOnConfirm\n                close={closeModal}\n                showSuccess={showSuccess}\n                showError={showError}\n              />\n            )}\n          </CardModal>\n        );\n\n      case \"reject\":\n        return (\n          <CardModal closeable={false} cardStyle={CardModalStyle}>\n            {isLoading ? (\n              // TODO: nice spinner\n              <Spinner />\n            ) : (\n              <ModalOnReject\n                close={closeModal}\n                showSuccess={showSuccess}\n                showError={showError}\n              />\n            )}\n          </CardModal>\n        );\n\n      case null:\n      default:\n        return null;\n    }\n  }, [modalOpened, closeModal, isLoading, showSuccess, showError]);\n\n  return (\n    <FormFooter\n      style={{\n        marginTop: 0,\n        marginBottom: 60,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n      }}\n    >\n      <Modal />\n      <ButtonCta\n        variant=\"outlined\"\n        anchor={t(\"others:common.buttons.reject\")}\n        onPress={handleRejectMatch}\n      />\n      <ButtonCta\n        anchor={t(\"others:common.buttons.confirm\")}\n        onPress={handleConfirmMatch}\n      />\n    </FormFooter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}