{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport { useTranslation } from \"next-i18next\";\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nexport default function StatusBadge(_ref) {\n  var state = _ref.state;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var BadgeContent = {\n    being_confirmed: {\n      value: \"x1\",\n      label: t(\"others:desktop.offer.status.beingConfirmed\"),\n      style: \"pending\"\n    },\n    confirmed: {\n      value: \"x2\",\n      label: t(\"others:desktop.offer.status.confirmed\"),\n      style: \"positive\"\n    },\n    found_a_match: {\n      value: \"x3\",\n      label: t(\"others:desktop.offer.status.haveMatch\"),\n      style: \"positive\"\n    },\n    inactive: {\n      value: \"x4\",\n      label: t(\"others:desktop.offer.status.inactive\"),\n      style: \"disabled\"\n    },\n    looking_for_match: {\n      value: \"x5\",\n      label: t(\"others:desktop.offer.status.lookingForMatch\"),\n      style: \"pending\"\n    },\n    rejected: {\n      value: \"x6\",\n      label: t(\"others:desktop.offer.status.rejected\"),\n      style: \"disabled\"\n    }\n  };\n\n  var _ref2 = BadgeContent[state] || {\n    label: \"\",\n    color: \"\"\n  },\n      style = _ref2.style,\n      label = _ref2.label;\n\n  var Renderer = BadgeCollection[style];\n\n  if (!Renderer) {\n    return null;\n  }\n\n  return React.createElement(Renderer, null, React.createElement(BadgeText, null, label));\n}\nvar BadgeBase = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  border-radius: 16px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: fit-content;\\n\"])));\nvar BadgeText = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  color: inherit;\\n  font-family: \\\"Roboto\\\";\\n  font-style: normal;\\n  font-weight: 700;\\n  font-size: 10px;\\n  line-height: 24px;\\n  letter-spacing: 0.5px;\\n  padding: 2px 8px;\\n\"])));\nvar PendingBadge = styled(BadgeBase)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  color: #544700;\\n  background-color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.figmaPalette.ukYellow;\n});\nvar PositiveBadge = styled(BadgeBase)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  background-color: \", \";\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.figmaPalette.positive;\n});\nvar DisabledBadge = styled(BadgeBase)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: #7f7f7f;\\n  background-color: #c8c8c8;\\n\"])));\nvar BadgeCollection = {\n  disabled: DisabledBadge,\n  positive: PositiveBadge,\n  pending: PendingBadge\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/StatusBadge/index.tsx"],"names":["useTranslation","React","styled","StatusBadge","state","t","BadgeContent","being_confirmed","value","label","style","confirmed","found_a_match","inactive","looking_for_match","rejected","color","Renderer","BadgeCollection","BadgeBase","View","BadgeText","Text","PendingBadge","theme","colors","figmaPalette","ukYellow","PositiveBadge","positive","DisabledBadge","disabled","pending"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAKA,eAAe,SAASC,WAAT,OAAuD;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;;AACpE,wBAAcJ,cAAc,EAA5B;AAAA,MAAQK,CAAR,mBAAQA,CAAR;;AACA,MAAMC,YAGL,GAAG;AACFC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE,IADQ;AAEfC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,4CAAD,CAFO;AAGfK,MAAAA,KAAK,EAAE;AAHQ,KADf;AAMFC,IAAAA,SAAS,EAAE;AACTH,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,uCAAD,CAFC;AAGTK,MAAAA,KAAK,EAAE;AAHE,KANT;AAWFE,IAAAA,aAAa,EAAE;AACbJ,MAAAA,KAAK,EAAE,IADM;AAEbC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,uCAAD,CAFK;AAGbK,MAAAA,KAAK,EAAE;AAHM,KAXb;AAgBFG,IAAAA,QAAQ,EAAE;AACRL,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,sCAAD,CAFA;AAGRK,MAAAA,KAAK,EAAE;AAHC,KAhBR;AAqBFI,IAAAA,iBAAiB,EAAE;AACjBN,MAAAA,KAAK,EAAE,IADU;AAEjBC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,6CAAD,CAFS;AAGjBK,MAAAA,KAAK,EAAE;AAHU,KArBjB;AA0BFK,IAAAA,QAAQ,EAAE;AACRP,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,KAAK,EAAEJ,CAAC,CAAC,sCAAD,CAFA;AAGRK,MAAAA,KAAK,EAAE;AAHC;AA1BR,GAHJ;;AAmCA,cAAyBJ,YAAY,CAACF,KAAD,CAAZ,IAAuB;AAC9CK,IAAAA,KAAK,EAAE,EADuC;AAE9CO,IAAAA,KAAK,EAAE;AAFuC,GAAhD;AAAA,MAAQN,KAAR,SAAQA,KAAR;AAAA,MAAeD,KAAf,SAAeA,KAAf;;AAKA,MAAMQ,QAAQ,GAAGC,eAAe,CAACR,KAAD,CAAhC;;AAEA,MAAI,CAACO,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,QAAD,QACE,oBAAC,SAAD,QAAYR,KAAZ,CADF,CADF;AAKD;AAED,IAAMU,SAAS,GAAGjB,MAAM,CAACkB,IAAV,iMAAf;AAQA,IAAMC,SAAS,GAAGnB,MAAM,CAACoB,IAAV,kQAAf;AAWA,IAAMC,YAAY,GAAGrB,MAAM,CAACiB,SAAD,CAAT,6HAEI;AAAA,MAAGK,KAAH,SAAGA,KAAH;AAAA,SACjBA,KAAD,CAAiBC,MAAjB,CAAwBC,YAAxB,CAAqCC,QADnB;AAAA,CAFJ,CAAlB;AAMA,IAAMC,aAAa,GAAG1B,MAAM,CAACiB,SAAD,CAAT,2HAEG;AAAA,MAAGK,KAAH,SAAGA,KAAH;AAAA,SACjBA,KAAD,CAAiBC,MAAjB,CAAwBC,YAAxB,CAAqCG,QADnB;AAAA,CAFH,CAAnB;AAMA,IAAMC,aAAa,GAAG5B,MAAM,CAACiB,SAAD,CAAT,+HAAnB;AAIA,IAAMD,eAAqD,GAAG;AAC5Da,EAAAA,QAAQ,EAAED,aADkD;AAE5DD,EAAAA,QAAQ,EAAED,aAFkD;AAG5DI,EAAAA,OAAO,EAAET;AAHmD,CAA9D","sourcesContent":["import { useTranslation } from \"next-i18next\";\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport { Theme } from \"../../style/theme.config\";\nimport { MATCH_TYPE } from \"../SupportSection/types\";\ntype BadgeStyle = \"disabled\" | \"positive\" | \"pending\";\n\nexport default function StatusBadge({ state }: { state: MATCH_TYPE }) {\n  const { t } = useTranslation();\n  const BadgeContent: Record<\n    MATCH_TYPE,\n    { value: string; label: string; style: BadgeStyle }\n  > = {\n    being_confirmed: {\n      value: \"x1\",\n      label: t(\"others:desktop.offer.status.beingConfirmed\"),\n      style: \"pending\",\n    },\n    confirmed: {\n      value: \"x2\",\n      label: t(\"others:desktop.offer.status.confirmed\"),\n      style: \"positive\",\n    },\n    found_a_match: {\n      value: \"x3\",\n      label: t(\"others:desktop.offer.status.haveMatch\"),\n      style: \"positive\",\n    },\n    inactive: {\n      value: \"x4\",\n      label: t(\"others:desktop.offer.status.inactive\"),\n      style: \"disabled\",\n    },\n    looking_for_match: {\n      value: \"x5\",\n      label: t(\"others:desktop.offer.status.lookingForMatch\"),\n      style: \"pending\",\n    },\n    rejected: {\n      value: \"x6\",\n      label: t(\"others:desktop.offer.status.rejected\"),\n      style: \"disabled\",\n    },\n  };\n  const { style, label } = BadgeContent[state] || {\n    label: \"\",\n    color: \"\",\n  };\n\n  const Renderer = BadgeCollection[style];\n\n  if (!Renderer) {\n    return null;\n  }\n\n  return (\n    <Renderer>\n      <BadgeText>{label}</BadgeText>\n    </Renderer>\n  );\n}\n\nconst BadgeBase = styled.View`\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n`;\n\nconst BadgeText = styled.Text`\n  color: inherit;\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  padding: 2px 8px;\n`;\n\nconst PendingBadge = styled(BadgeBase)`\n  color: #544700;\n  background-color: ${({ theme }) =>\n    (theme as Theme).colors.figmaPalette.ukYellow};\n`;\n\nconst PositiveBadge = styled(BadgeBase)`\n  color: white;\n  background-color: ${({ theme }) =>\n    (theme as Theme).colors.figmaPalette.positive};\n`;\n\nconst DisabledBadge = styled(BadgeBase)`\n  color: #7f7f7f;\n  background-color: #c8c8c8;\n`;\nconst BadgeCollection: Record<BadgeStyle, typeof BadgeBase> = {\n  disabled: DisabledBadge,\n  positive: PositiveBadge,\n  pending: PendingBadge,\n};\n"]},"metadata":{},"sourceType":"module"}