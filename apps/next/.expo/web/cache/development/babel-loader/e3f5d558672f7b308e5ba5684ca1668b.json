{"ast":null,"code":"import { Grid } from \"./style\";\n\nvar CompositionGrid = function CompositionGrid(_ref) {\n  var children = _ref.children,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? [0, 0] : _ref$spacing,\n      _ref$mobileReverse = _ref.mobileReverse,\n      mobileReverse = _ref$mobileReverse === void 0 ? false : _ref$mobileReverse,\n      itemsPerRow = _ref.itemsPerRow,\n      _ref$alignItems = _ref.alignItems,\n      alignItems = _ref$alignItems === void 0 ? \"unset\" : _ref$alignItems,\n      disableRwd = _ref.disableRwd;\n  return React.createElement(Grid, {\n    spacing: spacing,\n    disableRwd: disableRwd,\n    childrenCount: itemsPerRow ? itemsPerRow : Array.isArray(children) ? children.length : 1,\n    mobileReverse: mobileReverse,\n    alignItems: alignItems\n  }, children);\n};\n\nexport default CompositionGrid;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Compositions/CompositionGrid/index.tsx"],"names":["Grid","CompositionGrid","children","spacing","mobileReverse","itemsPerRow","alignItems","disableRwd","Array","isArray","length"],"mappings":"AACA,SAASA,IAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAOI;AAAA,MAN1BC,QAM0B,QAN1BA,QAM0B;AAAA,0BAL1BC,OAK0B;AAAA,MAL1BA,OAK0B,6BALhB,CAAC,CAAD,EAAI,CAAJ,CAKgB;AAAA,gCAJ1BC,aAI0B;AAAA,MAJ1BA,aAI0B,mCAJV,KAIU;AAAA,MAH1BC,WAG0B,QAH1BA,WAG0B;AAAA,6BAF1BC,UAE0B;AAAA,MAF1BA,UAE0B,gCAFb,OAEa;AAAA,MAD1BC,UAC0B,QAD1BA,UAC0B;AAC1B,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,UAAU,EAAEI,UAFd;AAGE,IAAA,aAAa,EACXF,WAAW,GACPA,WADO,GAEPG,KAAK,CAACC,OAAN,CAAcP,QAAd,IACAA,QAAQ,CAACQ,MADT,GAEA,CARR;AAUE,IAAA,aAAa,EAAEN,aAVjB;AAWE,IAAA,UAAU,EAAEE;AAXd,KAaGJ,QAbH,CADF;AAiBD,CAzBD;;AA2BA,eAAeD,eAAf","sourcesContent":["import type { CompositionGridProps } from \"./types\";\nimport { Grid } from \"./style\";\n\nconst CompositionGrid = ({\n  children,\n  spacing = [0, 0],\n  mobileReverse = false,\n  itemsPerRow,\n  alignItems = \"unset\",\n  disableRwd,\n}: CompositionGridProps) => {\n  return (\n    <Grid\n      spacing={spacing}\n      disableRwd={disableRwd}\n      childrenCount={\n        itemsPerRow\n          ? itemsPerRow\n          : Array.isArray(children)\n          ? children.length\n          : 1\n      }\n      mobileReverse={mobileReverse}\n      alignItems={alignItems}\n    >\n      {children}\n    </Grid>\n  );\n};\n\nexport default CompositionGrid;\n"]},"metadata":{},"sourceType":"module"}