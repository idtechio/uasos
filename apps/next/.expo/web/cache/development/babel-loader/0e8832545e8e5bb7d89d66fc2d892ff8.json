{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useAnimatedValueArray;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useAnimatedValueArray(initialValues) {\n  var refs = React.useRef([]);\n  refs.current.length = initialValues.length;\n  initialValues.forEach(function (initialValue, i) {\n    var _refs$current$i;\n\n    refs.current[i] = (_refs$current$i = refs.current[i]) !== null && _refs$current$i !== void 0 ? _refs$current$i : new _reactNative.Animated.Value(initialValue);\n  });\n  return refs.current;\n}","map":{"version":3,"sources":["useAnimatedValueArray.tsx"],"names":["refs","React","initialValues","Animated"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,SAAA,qBAAA,CAAA,aAAA,EAAwD;AACrE,MAAMA,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,EAAaA,CAAb;AAEAD,EAAAA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,GAAsBE,aAAa,CAAnCF,MAAAA;AACAE,EAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,YAAA,EAAA,CAAA,EAAqB;AAAA,QAAA,eAAA;;AACzCF,IAAAA,IAAI,CAAJA,OAAAA,CAAAA,CAAAA,IAAAA,CAAAA,eAAAA,GAAkBA,IAAI,CAAJA,OAAAA,CAAlBA,CAAkBA,CAAlBA,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAAA,GAAqC,IAAIG,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAArCH,YAAqC,CAArCA;AADFE,GAAAA;AAIA,SAAOF,IAAI,CAAX,OAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { Animated } from 'react-native';\n\nexport default function useAnimatedValueArray(initialValues: number[]) {\n  const refs = React.useRef<Animated.Value[]>([]);\n\n  refs.current.length = initialValues.length;\n  initialValues.forEach((initialValue, i) => {\n    refs.current[i] = refs.current[i] ?? new Animated.Value(initialValue);\n  });\n\n  return refs.current;\n}\n"]},"metadata":{},"sourceType":"script"}