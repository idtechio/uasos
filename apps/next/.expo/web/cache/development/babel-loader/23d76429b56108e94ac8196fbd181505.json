{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"theme\", \"alpha\", \"family\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Text = _interopRequireDefault(require(\"./Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledText = function StyledText(_ref) {\n  var theme = _ref.theme,\n      alpha = _ref.alpha,\n      family = _ref.family,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var textColor = (0, _color.default)(theme.colors.text).alpha(alpha).rgb().string();\n  var font = theme.fonts[family];\n  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(_Text.default, _extends({}, rest, {\n    style: [styles.text, _objectSpread(_objectSpread({\n      color: textColor\n    }, font), {}, {\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(StyledText);\n\nexports.default = _default;","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","rest","textColor","theme","font","writingDirection","I18nManager","styles","color","text","textAlign"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAGA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAqD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAApD,MAAoD,QAApD,MAAoD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAAlBC,IAAkB;;AACtE,MAAMC,SAAS,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,KAAK,CAALA,MAAAA,CAAN,IAAA,EAAA,KAAA,CAAA,KAAA,EAAA,GAAA,GAAlB,MAAkB,EAAlB;AACA,MAAMC,IAAI,GAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb;AACA,MAAME,gBAAgB,GAAGC,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CACLC,MAAM,CADD,IAAA;AAEHC,MAAAA,KAAK,EAAP;AAFK,OAEL,IAFK;AAEwBH,MAAAA,gBAAAA,EAAAA;AAFxB,QAAA,KAAA;AAFT,GAAA,CAAA,CADF;AALF,CAAA;;AAiBA,IAAME,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AADyB,CAAlB,CAAf;;eAMe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,UAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        { color: textColor, ...font, writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"script"}