{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components/native\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { generatePhonePrefixDropdownList } from \"../../Inputs/FormPhoneInput/helpers\";\nimport InputControl from \"../InputControl\";\nimport { phonePrefixDropdownList } from \"../../../consts/phonePrefixDropdown\";\nexport var Error = styled.Text(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  margin-bottom: 10px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.colors.error;\n});\n\nvar usePrefixList = function usePrefixList(data) {\n  var result = useMemo(function () {\n    return data ? generatePhonePrefixDropdownList(data) : generatePhonePrefixDropdownList(phonePrefixDropdownList);\n  }, [data]);\n  return result;\n};\n\nvar PhoneNumberPrefixSelect = function PhoneNumberPrefixSelect(props) {\n  var label = props.label,\n      errorMsg = props.errorMsg,\n      error = props.error,\n      placeholder = props.placeholder,\n      multiSelect = props.multiSelect,\n      data = props.data,\n      onChange = props.onChange,\n      value = props.value;\n  var dropdownData = usePrefixList(data);\n  return React.createElement(InputControl, {\n    styles: {\n      wrapper: {\n        width: \"100%\",\n        maxWidth: \"initial\",\n        marginBottom: 0,\n        zIndex: 0\n      }\n    }\n  }, React.createElement(Dropdown, {\n    selected: value,\n    itemPressFunction: onChange,\n    data: dropdownData,\n    placeholder: placeholder,\n    error: error,\n    label: label,\n    multiselect: multiSelect,\n    styles: {\n      select: {\n        paddingTop: 10,\n        paddingBottom: 11\n      }\n    }\n  }), error && React.createElement(Error, null, errorMsg));\n};\n\nexport default PhoneNumberPrefixSelect;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Forms/PhoneNumberPrefixSelect/index.tsx"],"names":["React","useMemo","styled","Dropdown","generatePhonePrefixDropdownList","InputControl","phonePrefixDropdownList","Error","Text","theme","colors","error","usePrefixList","data","result","PhoneNumberPrefixSelect","props","label","errorMsg","placeholder","multiSelect","onChange","value","dropdownData","wrapper","width","maxWidth","marginBottom","zIndex","select","paddingTop","paddingBottom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,QAAT;AACA,SAASC,+BAAT;AACA,OAAOC,YAAP;AACA,SAASC,uBAAT;AAGA,OAAO,IAAMC,KAAK,GAAGL,MAAM,CAACM,IAAV,qHACP;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACC,MAAN,CAAaC,KAA9C;AAAA,CADO,CAAX;;AAKP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAmC;AACvD,MAAMC,MAAM,GAAGb,OAAO,CACpB;AAAA,WACEY,IAAI,GACAT,+BAA+B,CAACS,IAAD,CAD/B,GAEAT,+BAA+B,CAACE,uBAAD,CAHrC;AAAA,GADoB,EAKpB,CAACO,IAAD,CALoB,CAAtB;AAQA,SAAOC,MAAP;AACD,CAVD;;AAYA,IAAMC,uBAAqD,GAAG,SAAxDA,uBAAwD,CAACC,KAAD,EAAW;AACvE,MACEC,KADF,GASID,KATJ,CACEC,KADF;AAAA,MAEEC,QAFF,GASIF,KATJ,CAEEE,QAFF;AAAA,MAGEP,KAHF,GASIK,KATJ,CAGEL,KAHF;AAAA,MAIEQ,WAJF,GASIH,KATJ,CAIEG,WAJF;AAAA,MAKEC,WALF,GASIJ,KATJ,CAKEI,WALF;AAAA,MAMEP,IANF,GASIG,KATJ,CAMEH,IANF;AAAA,MAOEQ,QAPF,GASIL,KATJ,CAOEK,QAPF;AAAA,MAQEC,KARF,GASIN,KATJ,CAQEM,KARF;AAUA,MAAMC,YAAY,GAAGX,aAAa,CAACC,IAAD,CAAlC;AAEA,SACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAE;AACNW,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,MADA;AAEPC,QAAAA,QAAQ,EAAE,SAFH;AAGPC,QAAAA,YAAY,EAAE,CAHP;AAIPC,QAAAA,MAAM,EAAE;AAJD;AADH;AADV,KAUE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEN,KADZ;AAEE,IAAA,iBAAiB,EAAED,QAFrB;AAGE,IAAA,IAAI,EAAEE,YAHR;AAIE,IAAA,WAAW,EAAEJ,WAJf;AAKE,IAAA,KAAK,EAAER,KALT;AAME,IAAA,KAAK,EAAEM,KANT;AAOE,IAAA,WAAW,EAAEG,WAPf;AAQE,IAAA,MAAM,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAE,EAAd;AAAkBC,QAAAA,aAAa,EAAE;AAAjC;AAAV;AARV,IAVF,EAoBGpB,KAAK,IAAI,oBAAC,KAAD,QAAQO,QAAR,CApBZ,CADF;AAwBD,CArCD;;AAsCA,eAAeH,uBAAf","sourcesContent":["import React, { useMemo, VFC } from \"react\";\nimport styled from \"styled-components/native\";\nimport { Theme } from \"../../../style/theme.config\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { generatePhonePrefixDropdownList } from \"../../Inputs/FormPhoneInput/helpers\";\nimport InputControl from \"../InputControl\";\nimport { phonePrefixDropdownList } from \"../../../consts/phonePrefixDropdown\";\nimport { NumberPrefixItemType, NumberPrefixSelectProps } from \"./types\";\n\nexport const Error = styled.Text`\n  color: ${({ theme }: { theme: Theme }) => theme.colors.error};\n  margin-bottom: 10px;\n`;\n\nconst usePrefixList = (data?: NumberPrefixItemType[]) => {\n  const result = useMemo(\n    () =>\n      data\n        ? generatePhonePrefixDropdownList(data)\n        : generatePhonePrefixDropdownList(phonePrefixDropdownList),\n    [data]\n  );\n\n  return result;\n};\n\nconst PhoneNumberPrefixSelect: VFC<NumberPrefixSelectProps> = (props) => {\n  const {\n    label,\n    errorMsg,\n    error,\n    placeholder,\n    multiSelect,\n    data,\n    onChange,\n    value,\n  } = props;\n  const dropdownData = usePrefixList(data);\n\n  return (\n    <InputControl\n      styles={{\n        wrapper: {\n          width: \"100%\",\n          maxWidth: \"initial\",\n          marginBottom: 0,\n          zIndex: 0,\n        },\n      }}\n    >\n      <Dropdown\n        selected={value}\n        itemPressFunction={onChange}\n        data={dropdownData}\n        placeholder={placeholder}\n        error={error}\n        label={label}\n        multiselect={multiSelect}\n        styles={{ select: { paddingTop: 10, paddingBottom: 11 } }}\n      />\n      {error && <Error>{errorMsg}</Error>}\n    </InputControl>\n  );\n};\nexport default PhoneNumberPrefixSelect;\n"]},"metadata":{},"sourceType":"module"}