{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var base = {\n  breakPoints: {\n    mobile: 320,\n    tablet: 481,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1500\n  },\n  maxContainerWidth: 1200\n};\nexport var primary = _objectSpread(_objectSpread({}, base), {}, {\n  colors: {\n    primary: \"#FFD700\",\n    accent: \"#0057B8\",\n    textOnAccent: \"#FFFFFF\",\n    headings: \"#003566\",\n    text: \"#003566\",\n    cta: \"#FFD700\",\n    textOnCta: \"#003566\",\n    blue: \"#003566\",\n    secondaryBlue: \"#0057B8\",\n    error: \"#d8000c\",\n    positive: \"#38B000\",\n    alert: \"#F44336\",\n    disabled: \"#9A9A9A\",\n    darkgray: \"#C8C8C8\",\n    lightgray: \"#F8F8F8\",\n    warning: \"#f443361a\",\n    borderGray: \"#F2F2F2\",\n    borderLightGray: \"#F5F4F4\",\n    figmaPalette: {\n      ukYellow: \"#FFD700\",\n      ukBlue: \"#0057B8\",\n      fontMain: \"#003566\",\n      alert: \"#F44336\",\n      positive: \"#38B000\",\n      positiveButtonFill: \"rgba(56, 176, 0, 0.1)\"\n    }\n  },\n  fonts: {\n    headings: \"'Roboto', sans-serif\",\n    text: \"'Roboto', sans-serif\"\n  },\n  pageSection: {\n    desktopSpacing: \"35px\",\n    mobileSpacing: \"35px\",\n    backgroundColor: \"#FFF\",\n    backgroundColorAlt: \"#F2F2F2\"\n  },\n  forms: {\n    border: \"#BBBBBC\",\n    borderWidth: \"1px\",\n    borderRadius: \"4px\",\n    placeholderColor: \"#BBBBBC\",\n    placeholderSize: \"14px\",\n    labelColor: \"#003566\",\n    labelSize: \"12px\"\n  }\n});\nexport var secondary = _objectSpread(_objectSpread({}, base), {}, {\n  colors: {\n    accent: \"red\",\n    textOnAccent: \"red\",\n    headings: \"red\",\n    text: \"red\",\n    cta: \"red\",\n    textOnCta: \"red\"\n  },\n  fonts: {\n    headings: \"'Poppins', sans-serif\",\n    text: \"'Rubik', sans-serif\"\n  }\n});","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/style/theme.config.ts"],"names":["base","breakPoints","mobile","tablet","sm","md","lg","xl","xxl","maxContainerWidth","primary","colors","accent","textOnAccent","headings","text","cta","textOnCta","blue","secondaryBlue","error","positive","alert","disabled","darkgray","lightgray","warning","borderGray","borderLightGray","figmaPalette","ukYellow","ukBlue","fontMain","positiveButtonFill","fonts","pageSection","desktopSpacing","mobileSpacing","backgroundColor","backgroundColorAlt","forms","border","borderWidth","borderRadius","placeholderColor","placeholderSize","labelColor","labelSize","secondary"],"mappings":";;;;;;AAEA,OAAO,IAAMA,IAAI,GAAG;AAClBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,GADG;AAEXC,IAAAA,MAAM,EAAE,GAFG;AAGXC,IAAAA,EAAE,EAAE,GAHO;AAIXC,IAAAA,EAAE,EAAE,GAJO;AAKXC,IAAAA,EAAE,EAAE,GALO;AAMXC,IAAAA,EAAE,EAAE,IANO;AAOXC,IAAAA,GAAG,EAAE;AAPM,GADK;AAUlBC,EAAAA,iBAAiB,EAAE;AAVD,CAAb;AAiBP,OAAO,IAAMC,OAAO,mCACfV,IADe;AAElBW,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE,SADH;AAENE,IAAAA,MAAM,EAAE,SAFF;AAGNC,IAAAA,YAAY,EAAE,SAHR;AAINC,IAAAA,QAAQ,EAAE,SAJJ;AAKNC,IAAAA,IAAI,EAAE,SALA;AAMNC,IAAAA,GAAG,EAAE,SANC;AAONC,IAAAA,SAAS,EAAE,SAPL;AAQNC,IAAAA,IAAI,EAAE,SARA;AASNC,IAAAA,aAAa,EAAE,SATT;AAUNC,IAAAA,KAAK,EAAE,SAVD;AAWNC,IAAAA,QAAQ,EAAE,SAXJ;AAYNC,IAAAA,KAAK,EAAE,SAZD;AAaNC,IAAAA,QAAQ,EAAE,SAbJ;AAcNC,IAAAA,QAAQ,EAAE,SAdJ;AAeNC,IAAAA,SAAS,EAAE,SAfL;AAgBNC,IAAAA,OAAO,EAAE,WAhBH;AAiBNC,IAAAA,UAAU,EAAE,SAjBN;AAkBNC,IAAAA,eAAe,EAAE,SAlBX;AAmBNC,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,SADE;AAEZC,MAAAA,MAAM,EAAE,SAFI;AAGZC,MAAAA,QAAQ,EAAE,SAHE;AAIZV,MAAAA,KAAK,EAAE,SAJK;AAKZD,MAAAA,QAAQ,EAAE,SALE;AAMZY,MAAAA,kBAAkB,EAAE;AANR;AAnBR,GAFU;AA8BlBC,EAAAA,KAAK,EAAE;AACLpB,IAAAA,QAAQ,EAAE,sBADL;AAELC,IAAAA,IAAI,EAAE;AAFD,GA9BW;AAkClBoB,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAE,MADL;AAEXC,IAAAA,aAAa,EAAE,MAFJ;AAGXC,IAAAA,eAAe,EAAE,MAHN;AAIXC,IAAAA,kBAAkB,EAAE;AAJT,GAlCK;AAwClBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,WAAW,EAAE,KAFR;AAGLC,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,gBAAgB,EAAE,SAJb;AAKLC,IAAAA,eAAe,EAAE,MALZ;AAMLC,IAAAA,UAAU,EAAE,SANP;AAOLC,IAAAA,SAAS,EAAE;AAPN;AAxCW,EAAb;AAoDP,OAAO,IAAMC,SAAS,mCACjBhD,IADiB;AAEpBW,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,KADF;AAENC,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,QAAQ,EAAE,KAHJ;AAINC,IAAAA,IAAI,EAAE,KAJA;AAKNC,IAAAA,GAAG,EAAE,KALC;AAMNC,IAAAA,SAAS,EAAE;AANL,GAFY;AAUpBiB,EAAAA,KAAK,EAAE;AACLpB,IAAAA,QAAQ,EAAE,uBADL;AAELC,IAAAA,IAAI,EAAE;AAFD;AAVa,EAAf","sourcesContent":["import { useBreakPointGetter } from \"../hooks/useBreakPointGetter\";\n\nexport const base = {\n  breakPoints: {\n    mobile: 320,\n    tablet: 481,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1500,\n  },\n  maxContainerWidth: 1200,\n};\n\nexport type Theme = typeof primary & {\n  getBreakPoint: ReturnType<typeof useBreakPointGetter>;\n};\n\nexport const primary = {\n  ...base,\n  colors: {\n    primary: \"#FFD700\",\n    accent: \"#0057B8\",\n    textOnAccent: \"#FFFFFF\",\n    headings: \"#003566\",\n    text: \"#003566\",\n    cta: \"#FFD700\",\n    textOnCta: \"#003566\",\n    blue: \"#003566\",\n    secondaryBlue: \"#0057B8\",\n    error: \"#d8000c\",\n    positive: \"#38B000\",\n    alert: \"#F44336\",\n    disabled: \"#9A9A9A\",\n    darkgray: \"#C8C8C8\",\n    lightgray: \"#F8F8F8\",\n    warning: \"#f443361a\",\n    borderGray: \"#F2F2F2\",\n    borderLightGray: \"#F5F4F4\",\n    figmaPalette: {\n      ukYellow: \"#FFD700\",\n      ukBlue: \"#0057B8\",\n      fontMain: \"#003566\",\n      alert: \"#F44336\",\n      positive: \"#38B000\",\n      positiveButtonFill: \"rgba(56, 176, 0, 0.1)\",\n    },\n  },\n  fonts: {\n    headings: \"'Roboto', sans-serif\",\n    text: \"'Roboto', sans-serif\",\n  },\n  pageSection: {\n    desktopSpacing: \"35px\",\n    mobileSpacing: \"35px\",\n    backgroundColor: \"#FFF\",\n    backgroundColorAlt: \"#F2F2F2\",\n  },\n  forms: {\n    border: \"#BBBBBC\",\n    borderWidth: \"1px\",\n    borderRadius: \"4px\",\n    placeholderColor: \"#BBBBBC\",\n    placeholderSize: \"14px\",\n    labelColor: \"#003566\",\n    labelSize: \"12px\",\n  },\n};\n\n// TODO: DarkMode\nexport const secondary = {\n  ...base,\n  colors: {\n    accent: \"red\",\n    textOnAccent: \"red\",\n    headings: \"red\",\n    text: \"red\",\n    cta: \"red\",\n    textOnCta: \"red\",\n  },\n  fonts: {\n    headings: \"'Poppins', sans-serif\",\n    text: \"'Rubik', sans-serif\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}