{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Select, SelectLabel, Options, ItemList, Icon, PlaceholderText, SelectText, Pill, PillContainer } from \"./style\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ArrowIcon from \"../../style/svgs/arrow.svg\";\nimport { Item } from \"./Item\";\nimport { SearchHeader } from \"./SearchHeader\";\nexport function Dropdown(_ref) {\n  var data = _ref.data,\n      label = _ref.label,\n      error = _ref.error,\n      onBlur = _ref.onBlur,\n      styles = _ref.styles,\n      selected = _ref.selected,\n      multiselect = _ref.multiselect,\n      placeholder = _ref.placeholder,\n      itemPressFunction = _ref.itemPressFunction,\n      _ref$searchable = _ref.searchable,\n      searchable = _ref$searchable === void 0 ? false : _ref$searchable,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? \"to-bottom\" : _ref$direction,\n      _ref$itemListAutoHeig = _ref.itemListAutoHeight,\n      itemListAutoHeight = _ref$itemListAutoHeig === void 0 ? false : _ref$itemListAutoHeig,\n      _ref$highlightSelecte = _ref.highlightSelectedItem,\n      highlightSelectedItem = _ref$highlightSelecte === void 0 ? false : _ref$highlightSelecte;\n  var containerRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOptions = _useState2[0],\n      setShowOptions = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectWidth = _useState4[0],\n      setSelectWidth = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectHeight = _useState6[0],\n      setSelectHeight = _useState6[1];\n\n  var _useState7 = useState(data),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filteredData = _useState8[0],\n      setFilteredData = _useState8[1];\n\n  var selectedValues = Array.isArray(selected) ? selected : [selected].filter(Boolean);\n  var selectedItems = (data != null ? data : []).filter(function (_ref2) {\n    var value = _ref2.value;\n    return selectedValues.includes(value);\n  });\n\n  var handleItemPress = function handleItemPress(value) {\n    itemPressFunction(value);\n    onBlur == null ? void 0 : onBlur();\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var selectedValuesIncludeItem = selectedValues.includes(item.value);\n    var isItemSelected = multiselect && selectedValuesIncludeItem || !multiselect && highlightSelectedItem && selectedValuesIncludeItem;\n    return React.createElement(Item, {\n      title: item.label,\n      value: item.value,\n      itemPressFunction: handleItemPress,\n      setShowOptions: multiselect ? function () {\n        return undefined;\n      } : setShowOptions,\n      style: styles == null ? void 0 : styles.item,\n      textStyle: styles == null ? void 0 : styles.itemTextStyle,\n      selectedStyle: styles == null ? void 0 : styles.itemSelected,\n      selected: isItemSelected\n    });\n  };\n\n  useEffect(function () {\n    var handleClickOutside = function handleClickOutside(ev) {\n      var _containerRef$current;\n\n      if (containerRef.current && !((_containerRef$current = containerRef.current) != null && _containerRef$current.contains(ev.target))) {\n        setShowOptions(false);\n      }\n    };\n\n    if (containerRef.current && Platform.OS === \"web\" && showOptions) {\n      document.body.addEventListener(\"click\", handleClickOutside, true);\n    }\n\n    return function () {\n      if (Platform.OS === \"web\") {\n        document.body.removeEventListener(\"click\", handleClickOutside, true);\n      }\n    };\n  }, [showOptions]);\n  return React.createElement(React.Fragment, null, label ? React.createElement(SelectLabel, null, label) : null, React.createElement(View, {\n    onLayout: function onLayout(event) {\n      setSelectWidth(event.nativeEvent.layout.width);\n      setSelectHeight(event.nativeEvent.layout.height);\n    },\n    ref: containerRef,\n    style: styles == null ? void 0 : styles.wrapper\n  }, React.createElement(Select, {\n    isInvalid: !!error,\n    showOptions: showOptions,\n    onPress: function onPress() {\n      if (showOptions) {\n        onBlur == null ? void 0 : onBlur();\n      }\n\n      setShowOptions(!showOptions);\n    },\n    style: styles == null ? void 0 : styles.select\n  }, React.createElement(SelectText, null, selectedItems.length > 0 ? multiselect ? React.createElement(PillContainer, null, selectedItems.map(function (_ref4) {\n    var label = _ref4.label,\n        value = _ref4.value;\n    return React.createElement(Pill, {\n      key: String(value)\n    }, label);\n  })) : selectedItems[0].label : React.createElement(PlaceholderText, {\n    numberOfLines: 1\n  }, placeholder)), React.createElement(Icon, {\n    showOptions: showOptions\n  }, React.createElement(ArrowIcon, null))), showOptions ? React.createElement(React.Fragment, null, React.createElement(Options, {\n    selectWidth: selectWidth,\n    selectHeight: selectHeight,\n    direction: direction\n  }, React.createElement(SearchHeader, {\n    data: data,\n    searchable: searchable,\n    setFilteredData: setFilteredData\n  }), React.createElement(ItemList, {\n    data: filteredData,\n    renderItem: renderItem,\n    autoHeight: itemListAutoHeight,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.value);\n    }\n  }))) : null));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Dropdown/index.tsx"],"names":["React","useEffect","useRef","useState","Select","SelectLabel","Options","ItemList","Icon","PlaceholderText","SelectText","Pill","PillContainer","ArrowIcon","Item","SearchHeader","Dropdown","data","label","error","onBlur","styles","selected","multiselect","placeholder","itemPressFunction","searchable","direction","itemListAutoHeight","highlightSelectedItem","containerRef","showOptions","setShowOptions","selectWidth","setSelectWidth","selectHeight","setSelectHeight","filteredData","setFilteredData","selectedValues","Array","isArray","filter","Boolean","selectedItems","value","includes","handleItemPress","renderItem","item","selectedValuesIncludeItem","isItemSelected","undefined","itemTextStyle","itemSelected","handleClickOutside","ev","current","contains","target","Platform","OS","document","body","addEventListener","removeEventListener","event","nativeEvent","layout","width","height","wrapper","select","length","map","String"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Select,\n  SelectLabel,\n  Options,\n  ItemList,\n  Icon,\n  PlaceholderText,\n  SelectText,\n  Pill,\n  PillContainer,\n} from \"./style\";\nimport { ListRenderItem, Platform, View } from \"react-native\";\nimport ArrowIcon from \"../../style/svgs/arrow.svg\";\nimport { Item } from \"./Item\";\nimport { SearchHeader } from \"./SearchHeader\";\nimport { DropdownProps } from \"./types\";\n\nexport function Dropdown<T>({\n  data,\n  label,\n  error,\n  onBlur,\n  styles,\n  selected,\n  multiselect,\n  placeholder,\n  itemPressFunction,\n  searchable = false,\n  direction = \"to-bottom\",\n  itemListAutoHeight = false,\n  highlightSelectedItem = false,\n}: DropdownProps<T>) {\n  const containerRef = useRef<HTMLElement>();\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectWidth, setSelectWidth] = useState(0);\n  const [selectHeight, setSelectHeight] = useState(0);\n\n  const [filteredData, setFilteredData] = useState(data);\n\n  const selectedValues = Array.isArray(selected)\n    ? selected\n    : [selected].filter(Boolean);\n\n  const selectedItems = (data ?? []).filter(({ value }) =>\n    selectedValues.includes(value)\n  );\n\n  const handleItemPress = (value: T) => {\n    itemPressFunction(value);\n    onBlur?.();\n  };\n\n  const renderItem: ListRenderItem<unknown> = ({ item }) => {\n    const selectedValuesIncludeItem = selectedValues.includes(\n      (item as typeof data[number]).value\n    );\n\n    const isItemSelected =\n      (multiselect && selectedValuesIncludeItem) ||\n      (!multiselect && highlightSelectedItem && selectedValuesIncludeItem);\n\n    return (\n      <Item<T>\n        title={(item as typeof data[number]).label}\n        value={(item as typeof data[number]).value}\n        itemPressFunction={handleItemPress}\n        setShowOptions={multiselect ? () => undefined : setShowOptions}\n        style={styles?.item}\n        textStyle={styles?.itemTextStyle}\n        selectedStyle={styles?.itemSelected}\n        selected={isItemSelected}\n      />\n    );\n  };\n\n  useEffect(() => {\n    // @ts-expect-error TODO: fix event type\n    const handleClickOutside = (ev) => {\n      if (containerRef.current && !containerRef.current?.contains(ev.target)) {\n        setShowOptions(false);\n      }\n    };\n\n    if (containerRef.current && Platform.OS === \"web\" && showOptions) {\n      document.body.addEventListener(\"click\", handleClickOutside, true);\n    }\n\n    return () => {\n      if (Platform.OS === \"web\") {\n        document.body.removeEventListener(\"click\", handleClickOutside, true);\n      }\n    };\n  }, [showOptions]);\n\n  return (\n    <>\n      {label ? <SelectLabel>{label}</SelectLabel> : null}\n      <View\n        onLayout={(event) => {\n          setSelectWidth(event.nativeEvent.layout.width);\n          setSelectHeight(event.nativeEvent.layout.height);\n        }}\n        // @ts-expect-error TODO: fix ref type\n        ref={containerRef}\n        style={styles?.wrapper}\n      >\n        <Select\n          isInvalid={!!error}\n          showOptions={showOptions}\n          onPress={() => {\n            if (showOptions) {\n              onBlur?.();\n            }\n\n            setShowOptions(!showOptions);\n          }}\n          style={styles?.select}\n        >\n          <SelectText>\n            {selectedItems.length > 0 ? (\n              multiselect ? (\n                <PillContainer>\n                  {selectedItems.map(({ label, value }) => (\n                    <Pill key={String(value)}>{label}</Pill>\n                  ))}\n                </PillContainer>\n              ) : (\n                selectedItems[0].label\n              )\n            ) : (\n              <PlaceholderText numberOfLines={1}>{placeholder}</PlaceholderText>\n            )}\n          </SelectText>\n          <Icon showOptions={showOptions}>\n            <ArrowIcon />\n          </Icon>\n        </Select>\n\n        {showOptions ? (\n          <>\n            <Options\n              selectWidth={selectWidth}\n              selectHeight={selectHeight}\n              direction={direction}\n            >\n              <SearchHeader\n                data={data}\n                searchable={searchable}\n                setFilteredData={setFilteredData}\n              />\n              <ItemList\n                data={filteredData}\n                renderItem={renderItem}\n                autoHeight={itemListAutoHeight}\n                keyExtractor={(item) => {\n                  return String((item as typeof filteredData[number]).value);\n                }}\n              />\n            </Options>\n          </>\n        ) : null}\n      </View>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}