{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getFirebaseToken } from \"../helpers/getFirebaseToken\";\nexport var deleteListItem = function deleteListItem(_ref) {\n  var targetID, targetType, token, res;\n  return _regeneratorRuntime.async(function deleteListItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          targetID = _ref.targetID, targetType = _ref.targetType;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getFirebaseToken());\n\n        case 3:\n          token = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/\" + targetType + \"/delete\", {\n            method: \"POST\",\n            headers: {\n              Authorization: \"Bearer \" + token,\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: targetID\n            })\n          }));\n\n        case 6:\n          res = _context.sent;\n\n          if (!(res.status != 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          throw new Error(\"Couldn't delete item.\");\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 11:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/client-api/delete.ts"],"names":["getFirebaseToken","deleteListItem","targetID","targetType","token","fetch","process","env","NEXT_PUBLIC_DOMAIN","method","headers","Authorization","body","JSON","stringify","id","res","status","Error","json"],"mappings":";AAAA,SAASA,gBAAT;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,UAAAA,QAD4B,QAC5BA,QAD4B,EAE5BC,UAF4B,QAE5BA,UAF4B;AAAA;AAAA,2CAIRH,gBAAgB,EAJR;;AAAA;AAItBI,UAAAA,KAJsB;AAAA;AAAA,2CAMVC,KAAK,CAClBC,OAAO,CAACC,GAAR,CAAYC,kBADM,YACmBL,UADnB,cAErB;AACEM,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,cAAYP,KADlB;AAEP,8BAAgB;AAFT,aAFX;AAMEQ,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,EAAE,EAAEb;AAAN,aAAf;AANR,WAFqB,CANK;;AAAA;AAMtBc,UAAAA,GANsB;;AAAA,gBAkBxBA,GAAG,CAACC,MAAJ,IAAc,GAlBU;AAAA;AAAA;AAAA;;AAAA,gBAmBpB,IAAIC,KAAJ,CAAU,uBAAV,CAnBoB;;AAAA;AAAA;AAAA,2CAsBfF,GAAG,CAACG,IAAJ,EAtBe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { getFirebaseToken } from \"../helpers/getFirebaseToken\";\n\nexport type DeleteListItemDTO = {\n  targetID: string;\n  targetType: \"guests\" | \"hosts\";\n};\n\nexport const deleteListItem = async ({\n  targetID,\n  targetType,\n}: DeleteListItemDTO) => {\n  const token = await getFirebaseToken();\n\n  const res = await fetch(\n    `${process.env.NEXT_PUBLIC_DOMAIN}api/${targetType}/delete`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: targetID }),\n    }\n  );\n\n  if (res.status != 200) {\n    throw new Error(\"Couldn't delete item.\");\n  }\n\n  return await res.json();\n};\n"]},"metadata":{},"sourceType":"module"}