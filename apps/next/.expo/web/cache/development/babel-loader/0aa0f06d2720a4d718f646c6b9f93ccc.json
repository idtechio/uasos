{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current;\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-web/dist/cjs/modules/usePressEvents/index.js"],"names":["exports","__esModule","default","usePressEvents","_PressResponder","_interopRequireDefault","require","_react","obj","hostRef","config","pressResponderRef","useRef","current","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers","module"],"mappings":"AASA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,oBAAR,CAA5C;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,SAASL,cAAT,CAAwBM,OAAxB,EAAiCC,MAAjC,EAAyC;AACvC,MAAIC,iBAAiB,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAX,EAAmB,IAAnB,CAAxB;;AAEA,MAAID,iBAAiB,CAACE,OAAlB,IAA6B,IAAjC,EAAuC;AACrCF,IAAAA,iBAAiB,CAACE,OAAlB,GAA4B,IAAIT,eAAe,CAACF,OAApB,CAA4BQ,MAA5B,CAA5B;AACD;;AAED,MAAII,cAAc,GAAGH,iBAAiB,CAACE,OAAvC;AAEA,GAAC,GAAGN,MAAM,CAACQ,SAAX,EAAsB,YAAY;AAChCD,IAAAA,cAAc,CAACE,SAAf,CAAyBN,MAAzB;AACD,GAFD,EAEG,CAACA,MAAD,EAASI,cAAT,CAFH;AAKA,GAAC,GAAGP,MAAM,CAACQ,SAAX,EAAsB,YAAY;AAChC,WAAO,YAAY;AACjBD,MAAAA,cAAc,CAACG,KAAf;AACD,KAFD;AAGD,GAJD,EAIG,CAACH,cAAD,CAJH;AAKA,GAAC,GAAGP,MAAM,CAACW,aAAX,EAA0BR,MAA1B;AACA,SAAOI,cAAc,CAACK,gBAAf,EAAP;AACD;;AAEDC,MAAM,CAACpB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}