{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components/native\";\nvar TabPanelContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\nvar TabHeader = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n\"])));\nvar TabItems = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  padding-top: 13px;\\n  padding-bottom: 13px;\\n  margin-bottom: 16px;\\n  border-radius: 6px;\\n  top: -3px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.colors.textOnAccent;\n});\nvar TabItemContainer = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\"])));\nvar Button = styled.Pressable(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  text-align: center;\\n  display: inline-block;\\n  justify-content: center;\\n  align-items: center;\\n  &:hover {\\n    opacity: 0.7;\\n  }\\n\"])), function (props) {\n  return props.selected ? css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n          background-color: \", \";\\n          border-top-left-radius: 6px;\\n          border-top-right-radius: 6px;\\n        \"])), function (_ref2) {\n    var theme = _ref2.theme;\n    return theme.colors.textOnAccent;\n  }) : css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\"])));\n});\nvar Text = styled.Text(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n  font-weight: 700;\\n  line-height: 33px;\\n\"])), function (props) {\n  return props.selected ? css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n          color: \", \";\\n        \"])), function (_ref3) {\n    var theme = _ref3.theme;\n    return theme.colors.blue;\n  }) : css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n          color: \", \";\\n        \"])), function (_ref4) {\n    var theme = _ref4.theme;\n    return theme.colors.disabled;\n  });\n});\nexport default function TabPanel(_ref5) {\n  var items = _ref5.items,\n      initialSelectedIndex = _ref5.initialSelectedIndex,\n      tabItemsContainerStyle = _ref5.tabItemsContainerStyle;\n\n  var _useState = useState(initialSelectedIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedIndex = _useState2[0],\n      setSelectedIndex = _useState2[1];\n\n  return React.createElement(TabPanelContainer, null, React.createElement(TabHeader, null, items.map(function (item, index) {\n    return React.createElement(Button, {\n      key: item.key,\n      selected: selectedIndex === index,\n      onPress: function onPress() {\n        return setSelectedIndex(index);\n      }\n    }, React.createElement(Text, {\n      selected: selectedIndex === index\n    }, item.title));\n  })), React.createElement(TabItems, {\n    style: tabItemsContainerStyle\n  }, items.filter(function (_, index) {\n    return index === selectedIndex;\n  }).map(function (item) {\n    return React.createElement(TabItemContainer, {\n      key: item.key\n    }, item.content);\n  })));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/TabPanel/index.tsx"],"names":["React","useState","styled","css","TabPanelContainer","View","TabHeader","TabItems","theme","colors","textOnAccent","TabItemContainer","Button","Pressable","props","selected","Text","blue","disabled","TabPanel","items","initialSelectedIndex","tabItemsContainerStyle","selectedIndex","setSelectedIndex","map","item","index","key","title","filter","_","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,0BAA5B;AAGA,IAAMC,iBAAiB,GAAGF,MAAM,CAACG,IAAV,0EAAvB;AACA,IAAMC,SAAS,GAAGJ,MAAM,CAACG,IAAV,wHAAf;AAIA,IAAME,QAAQ,GAAGL,MAAM,CAACG,IAAV,gNACE;AAAA,MAAGG,KAAH,QAAGA,KAAH;AAAA,SAAiCA,KAAK,CAACC,MAAN,CAAaC,YAA9C;AAAA,CADF,CAAd;AAQA,IAAMC,gBAAgB,GAAGT,MAAM,CAACG,IAAV,4EAAtB;AAEA,IAAMO,MAAM,GAAGV,MAAM,CAACW,SAAV,kRACR,UAACC,KAAD;AAAA,SACAA,KAAK,CAACC,QAAN,GACIZ,GADJ,2MAE0B;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,WAClBA,KAAK,CAACC,MAAN,CAAaC,YADK;AAAA,GAF1B,IAOIP,GAPJ,4EADA;AAAA,CADQ,CAAZ;AAsBA,IAAMa,IAAI,GAAGd,MAAM,CAACc,IAAV,kIACN,UAACF,KAAD;AAAA,SACAA,KAAK,CAACC,QAAN,GACIZ,GADJ,+GAEe;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,WAAiCA,KAAK,CAACC,MAAN,CAAaQ,IAA9C;AAAA,GAFf,IAIId,GAJJ,iHAKe;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,WAAiCA,KAAK,CAACC,MAAN,CAAaS,QAA9C;AAAA,GALf,CADA;AAAA,CADM,CAAV;AAyBA,eAAe,SAASC,QAAT,QAIG;AAAA,MAHhBC,KAGgB,SAHhBA,KAGgB;AAAA,MAFhBC,oBAEgB,SAFhBA,oBAEgB;AAAA,MADhBC,sBACgB,SADhBA,sBACgB;;AAChB,kBAA0CrB,QAAQ,CAACoB,oBAAD,CAAlD;AAAA;AAAA,MAAOE,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,SACE,oBAAC,iBAAD,QACE,oBAAC,SAAD,QACGJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACT,oBAAC,MAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACE,GADZ;AAEE,MAAA,QAAQ,EAAEL,aAAa,KAAKI,KAF9B;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMH,gBAAgB,CAACG,KAAD,CAAtB;AAAA;AAHX,OAKE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEJ,aAAa,KAAKI;AAAlC,OAA0CD,IAAI,CAACG,KAA/C,CALF,CADS;AAAA,GAAV,CADH,CADF,EAYE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP;AAAjB,KACGF,KAAK,CACHU,MADF,CACS,UAACC,CAAD,EAAIJ,KAAJ;AAAA,WAAcA,KAAK,KAAKJ,aAAxB;AAAA,GADT,EAEEE,GAFF,CAEM,UAACC,IAAD;AAAA,WACH,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACE;AAA5B,OAAkCF,IAAI,CAACM,OAAvC,CADG;AAAA,GAFN,CADH,CAZF,CADF;AAsBD","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleProp, ViewStyle } from \"react-native\";\nimport styled, { css } from \"styled-components/native\";\nimport { Theme } from \"../../style/theme.config\";\n\nconst TabPanelContainer = styled.View``;\nconst TabHeader = styled.View`\n  display: flex;\n  flex-direction: row;\n`;\nconst TabItems = styled.View`\n  background: ${({ theme }: { theme: Theme }) => theme.colors.textOnAccent};\n  padding-top: 13px;\n  padding-bottom: 13px;\n  margin-bottom: 16px;\n  border-radius: 6px;\n  top: -3px;\n`;\nconst TabItemContainer = styled.View``;\n\nconst Button = styled.Pressable<{ selected: boolean }>`\n  ${(props) =>\n    props.selected\n      ? css`\n          background-color: ${({ theme }: { theme: Theme }) =>\n            theme.colors.textOnAccent};\n          border-top-left-radius: 6px;\n          border-top-right-radius: 6px;\n        `\n      : css``}\n\n  padding-left: 10px;\n  padding-right: 10px;\n  text-align: center;\n  display: inline-block;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst Text = styled.Text<{ selected: boolean; theme: Theme }>`\n  ${(props) =>\n    props.selected\n      ? css`\n          color: ${({ theme }: { theme: Theme }) => theme.colors.blue};\n        `\n      : css`\n          color: ${({ theme }: { theme: Theme }) => theme.colors.disabled};\n        `}\n  font-weight: 700;\n  line-height: 33px;\n`;\n\ntype TabPanel = {\n  key: string;\n  title: string;\n  content: React.ReactNode;\n};\n\nexport type TabPanelProps = {\n  items: TabPanel[];\n  initialSelectedIndex: number;\n  tabItemsContainerStyle?: StyleProp<ViewStyle>;\n};\n\nexport default function TabPanel({\n  items,\n  initialSelectedIndex,\n  tabItemsContainerStyle,\n}: TabPanelProps) {\n  const [selectedIndex, setSelectedIndex] = useState(initialSelectedIndex);\n  return (\n    <TabPanelContainer>\n      <TabHeader>\n        {items.map((item, index) => (\n          <Button\n            key={item.key}\n            selected={selectedIndex === index}\n            onPress={() => setSelectedIndex(index)}\n          >\n            <Text selected={selectedIndex === index}>{item.title}</Text>\n          </Button>\n        ))}\n      </TabHeader>\n      <TabItems style={tabItemsContainerStyle}>\n        {items\n          .filter((_, index) => index === selectedIndex)\n          .map((item) => (\n            <TabItemContainer key={item.key}>{item.content}</TabItemContainer>\n          ))}\n      </TabItems>\n    </TabPanelContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}