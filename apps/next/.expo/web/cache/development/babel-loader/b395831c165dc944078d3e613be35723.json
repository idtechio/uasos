{"ast":null,"code":"import React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { Error, Wrapper } from \"./style\";\nimport CheckboxField from \"../Forms/CheckboxField\";\nimport InputControl from \"../Forms/InputControl\";\n\nvar FormCheckbox = function FormCheckbox(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      errorMsg = _ref.errorMsg,\n      rules = _ref.rules,\n      error = _ref.error,\n      value = _ref.value,\n      styles = _ref.styles,\n      _ref$isCentered = _ref.isCentered,\n      isCentered = _ref$isCentered === void 0 ? true : _ref$isCentered;\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control;\n\n  return React.createElement(InputControl, {\n    styles: styles\n  }, React.createElement(Wrapper, {\n    isCentered: isCentered\n  }, React.createElement(Controller, {\n    control: control,\n    rules: rules,\n    render: function render(_ref2) {\n      var onChange = _ref2.field.onChange;\n      return React.createElement(CheckboxField, {\n        error: !!error,\n        text: label,\n        onChange: onChange,\n        value: value,\n        wrapperStyle: styles == null ? void 0 : styles.checkboxFieldWrapper\n      });\n    },\n    name: name\n  }), error && React.createElement(Error, null, errorMsg)));\n};\n\nexport default FormCheckbox;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Inputs/FormCheckbox.tsx"],"names":["React","Controller","useFormContext","Error","Wrapper","CheckboxField","InputControl","FormCheckbox","name","label","errorMsg","rules","error","value","styles","isCentered","control","onChange","field","checkboxFieldWrapper"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAiCC,cAAjC,QAAuD,iBAAvD;AAEA,SAASC,KAAT,EAAgBC,OAAhB;AAEA,OAAOC,aAAP;AACA,OAAOC,YAAP;;AAgBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OASR;AAAA,MARXC,IAQW,QARXA,IAQW;AAAA,MAPXC,KAOW,QAPXA,KAOW;AAAA,MANXC,QAMW,QANXA,QAMW;AAAA,MALXC,KAKW,QALXA,KAKW;AAAA,MAJXC,KAIW,QAJXA,KAIW;AAAA,MAHXC,KAGW,QAHXA,KAGW;AAAA,MAFXC,MAEW,QAFXA,MAEW;AAAA,6BADXC,UACW;AAAA,MADXA,UACW,gCADE,IACF;;AACX,wBAAoBb,cAAc,EAAlC;AAAA,MAAQc,OAAR,mBAAQA,OAAR;;AAEA,SACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEF;AAAtB,KACE,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEC;AAArB,KACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,MAAM,EAAE;AAAA,UAAYM,QAAZ,SAAGC,KAAH,CAAYD,QAAZ;AAAA,aACN,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,CAAC,CAACL,KADX;AAEE,QAAA,IAAI,EAAEH,KAFR;AAGE,QAAA,QAAQ,EAAEQ,QAHZ;AAIE,QAAA,KAAK,EAAEJ,KAJT;AAKE,QAAA,YAAY,EAAEC,MAAF,oBAAEA,MAAM,CAAEK;AALxB,QADM;AAAA,KAHV;AAYE,IAAA,IAAI,EAAEX;AAZR,IADF,EAeGI,KAAK,IAAI,oBAAC,KAAD,QAAQF,QAAR,CAfZ,CADF,CADF;AAqBD,CAjCD;;AAkCA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { Controller, FieldError, useFormContext } from \"react-hook-form\";\n\nimport { Error, Wrapper } from \"./style\";\nimport { FormKey } from \"../../helpers/FormTypes\";\nimport CheckboxField from \"../Forms/CheckboxField\";\nimport InputControl from \"../Forms/InputControl\";\nimport { InputControlStylesProps } from \"../Forms/InputControl/types\";\nimport { FlattenSimpleInterpolation } from \"styled-components\";\n\ntype Props = {\n  name: FormKey;\n  label: string;\n  error?: FieldError;\n  errorMsg?: string;\n  value?: boolean;\n  isCentered?: boolean;\n  styles?: InputControlStylesProps & {\n    checkboxFieldWrapper?: FlattenSimpleInterpolation;\n  };\n} & Pick<React.ComponentProps<typeof Controller>, \"rules\">;\n\nconst FormCheckbox = ({\n  name,\n  label,\n  errorMsg,\n  rules,\n  error,\n  value,\n  styles,\n  isCentered = true,\n}: Props) => {\n  const { control } = useFormContext();\n\n  return (\n    <InputControl styles={styles}>\n      <Wrapper isCentered={isCentered}>\n        <Controller\n          control={control}\n          rules={rules}\n          render={({ field: { onChange } }) => (\n            <CheckboxField\n              error={!!error}\n              text={label}\n              onChange={onChange}\n              value={value}\n              wrapperStyle={styles?.checkboxFieldWrapper}\n            />\n          )}\n          name={name}\n        />\n        {error && <Error>{errorMsg}</Error>}\n      </Wrapper>\n    </InputControl>\n  );\n};\nexport default FormCheckbox;\n"]},"metadata":{},"sourceType":"module"}