{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15;\n\nimport { useRouter } from \"next/router\";\nimport styled, { css } from \"styled-components/native\";\nimport Link from \"next/link\";\nimport { useTranslation } from \"next-i18next\";\nimport ChevronRight from \"../../style/svgs/chevron-right.svg\";\nimport { ButtonCta } from \"../Buttons\";\nimport { Routes } from \"../../consts/router\";\nimport { AuthContext } from \"../../../pages/_app\";\nimport React, { useContext } from \"react\";\nimport styledWeb from \"styled-components\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n\"])));\nvar ContentWrapper = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  margin: 0 auto;\\n  max-width: \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.maxContainerWidth + \"px\";\n});\nvar TextContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  padding: 16px;\\n  max-width: 740px;\\n\"])));\nvar Title = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 24px;\\n  line-height: 30px;\\n  font-weight: 700;\\n  margin-top: 130px;\\n  max-width: 300px;\\n\\n  \", \"\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return \"\" + theme.colors.text;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n        font-size: 44px;\\n        line-height: 52px;\\n        max-width: none;\\n        margin-top: 88px;\\n      \"])))\n  });\n});\nvar SubTitleWrapper = styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 10px;\\n  display: inline-block;\\n  max-width: 300px;\\n\\n  \", \"\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n        margin-top: 40px;\\n        max-width: none;\\n      \"])))\n  });\n});\nvar SubTitle = styledWeb.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\" //TODO: react native doesn't support dangerouslySetInnerHTML attribute. When we create the mobile app extract this component and create a version working with both web and mobile\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: \", \";\\n  margin-top: 30px;\\n\\n  b {\\n    font-weight: 700;\\n  }\\n\\n  \", \"\\n\\n\"])), function (_ref5) {\n  var theme = _ref5.theme;\n  return \"\" + theme.colors.text;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n        font-size: 20px;\\n        line-height: 28px;\\n        margin-top: 40px;\\n      \"])))\n  });\n});\nvar ButtonContainer = styled.View(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-start;\\n  margin-top: 50px;\\n  margin-bottom: 145px;\\n\\n  \", \"\\n\"])), function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.getBreakPoint({\n    lg: css(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n        margin-top: 28px;\\n        flex-direction: row;\\n        margin-top: 104px;\\n      \"])))\n  });\n});\nvar ButtonStyle = styled(ButtonCta)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 17px;\\n  font-size: 16px;\\n  display: flex;\\n  padding: 0px 16px;\\n  height: 48.5;\\n  align-items: center;\\n  justify-content: center;\\n\\n  \", \"\\n\"])), function (_ref8) {\n  var theme = _ref8.theme,\n      first = _ref8.first;\n  return !first && theme.getBreakPoint({\n    lg: css(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n        margin-left: 20px;\\n      \"])))\n  });\n});\nvar ButtonText = styled.Text(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n  font-weight: 700;\\n  font-size: 14px;\\n  color: #003566;\\n\"])));\nvar FlexAnchor = styled.View(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  align-items: center;\\n  gap: 0px 10px;\\n\"])));\n\nvar LandingProjectIntention = function LandingProjectIntention() {\n  var _useTranslation = useTranslation(\"landingPage\"),\n      t = _useTranslation.t;\n\n  var _useTranslation2 = useTranslation(\"others\"),\n      t_others = _useTranslation2.t;\n\n  var router = useRouter();\n\n  var _useContext = useContext(AuthContext),\n      identity = _useContext.identity,\n      account = _useContext.account;\n\n  var isAccountVerified = identity && (account == null ? void 0 : account.confirmedEmail) && (account == null ? void 0 : account.confirmedPhone);\n  var welcomeAppDescription = t_others(\"welcomePage.appDescription\");\n  return React.createElement(Container, null, React.createElement(ContentWrapper, null, React.createElement(TextContainer, null, React.createElement(Title, {\n    accessibilityRole: \"heading\",\n    accessibilityLevel: 1\n  }, t(\"projectIntention.title\")), React.createElement(SubTitleWrapper, null, React.createElement(SubTitle, {\n    dangerouslySetInnerHTML: {\n      __html: welcomeAppDescription\n    }\n  })), React.createElement(ButtonContainer, null, isAccountVerified ? React.createElement(React.Fragment, null, React.createElement(Link, {\n    href: \"/guest\"\n  }, React.createElement(\"a\", null, React.createElement(ButtonStyle, {\n    colorOpposite: true,\n    anchor: t(\"projectIntention.lookingForHelp\")\n  }))), React.createElement(Link, {\n    href: \"/host\"\n  }, React.createElement(\"a\", null, React.createElement(ButtonStyle, {\n    colorOpposite: true,\n    anchor: t(\"projectIntention.shareHelp\")\n  })))) : React.createElement(React.Fragment, null, React.createElement(ButtonStyle, {\n    first: true,\n    colorOpposite: true,\n    anchor: t(\"common:shareLocation\"),\n    onPress: function onPress(event) {\n      event == null ? void 0 : event.preventDefault();\n      router.push(\"/\" + (router == null ? void 0 : router.locale) + Routes.SIGN_IN);\n    }\n  })), React.createElement(Link, {\n    href: \"/public-shelters\"\n  }, React.createElement(\"a\", null, React.createElement(ButtonStyle, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"transparent\",\n      border: \"1.5px solid rgb(0, 53, 102)\",\n      boxSizing: \"border-box\"\n    },\n    anchor: React.createElement(FlexAnchor, null, React.createElement(ButtonText, null, t(\"others:common.words.publicShelters\")), React.createElement(ChevronRight, null))\n  })))))));\n};\n\nexport default LandingProjectIntention;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/LandingProjectIntention/index.tsx"],"names":["useRouter","styled","css","Link","useTranslation","ChevronRight","ButtonCta","Routes","AuthContext","React","useContext","styledWeb","Container","View","ContentWrapper","theme","maxContainerWidth","TextContainer","Title","Text","colors","text","getBreakPoint","lg","SubTitleWrapper","SubTitle","div","ButtonContainer","ButtonStyle","first","ButtonText","FlexAnchor","LandingProjectIntention","t","t_others","router","identity","account","isAccountVerified","confirmedEmail","confirmedPhone","welcomeAppDescription","__html","event","preventDefault","push","locale","SIGN_IN","flexDirection","backgroundColor","border","boxSizing"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,0BAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,YAAP;AACA,SAASC,SAAT;AACA,SAASC,MAAT;AAEA,SAASC,WAAT;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAMC,SAAS,GAAGX,MAAM,CAACY,IAAV,4FAAf;AAIA,IAAMC,cAAc,GAAGb,MAAM,CAACY,IAAV,sIAGL;AAAA,MAAGE,KAAH,QAAGA,KAAH;AAAA,SAAoCA,KAAK,CAACC,iBAA1C;AAAA,CAHK,CAApB;AAMA,IAAMC,aAAa,GAAGhB,MAAM,CAACY,IAAV,qHAAnB;AAKA,IAAMK,KAAK,GAAGjB,MAAM,CAACkB,IAAV,mNACA;AAAA,MAAGJ,KAAH,SAAGA,KAAH;AAAA,cAAoCA,KAAK,CAACK,MAAN,CAAaC,IAAjD;AAAA,CADA,EAQP;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACO,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAErB,GAAF;AADgB,GAApB,CADA;AAAA,CARO,CAAX;AAmBA,IAAMsB,eAAe,GAAGvB,MAAM,CAACY,IAAV,6JAKjB;AAAA,MAAGE,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACO,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAErB,GAAF;AADgB,GAApB,CADA;AAAA,CALiB,CAArB;AAcA,IAAMuB,QAAQ,GAAGd,SAAS,CAACe,GAAb,uZAIH;AAAA,MAAGX,KAAH,SAAGA,KAAH;AAAA,cAAoCA,KAAK,CAACK,MAAN,CAAaC,IAAjD;AAAA,CAJG,EAWV;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACO,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAErB,GAAF;AADgB,GAApB,CADA;AAAA,CAXU,CAAd;AAsBA,IAAMyB,eAAe,GAAG1B,MAAM,CAACY,IAAV,qKAKjB;AAAA,MAAGE,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,CAACO,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAErB,GAAF;AADgB,GAApB,CADA;AAAA,CALiB,CAArB;AAeA,IAAM0B,WAAW,GAAG3B,MAAM,CAACK,SAAD,CAAT,iPASb;AAAA,MAAGS,KAAH,SAAGA,KAAH;AAAA,MAAUc,KAAV,SAAUA,KAAV;AAAA,SACA,CAACA,KAAD,IACAd,KAAK,CAACO,aAAN,CAAoB;AAClBC,IAAAA,EAAE,EAAErB,GAAF;AADgB,GAApB,CAFA;AAAA,CATa,CAAjB;AAkBA,IAAM4B,UAAU,GAAG7B,MAAM,CAACkB,IAAV,4IAAhB;AAMA,IAAMY,UAAU,GAAG9B,MAAM,CAACY,IAAV,kJAAhB;;AAMA,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,wBAAc5B,cAAc,CAAC,aAAD,CAA5B;AAAA,MAAQ6B,CAAR,mBAAQA,CAAR;;AACA,yBAAwB7B,cAAc,CAAC,QAAD,CAAtC;AAAA,MAAW8B,QAAX,oBAAQD,CAAR;;AACA,MAAME,MAAM,GAAGnC,SAAS,EAAxB;;AACA,oBAA8BU,UAAU,CAACF,WAAD,CAAxC;AAAA,MAAQ4B,QAAR,eAAQA,QAAR;AAAA,MAAkBC,OAAlB,eAAkBA,OAAlB;;AAEA,MAAMC,iBAAiB,GACrBF,QAAQ,KAAIC,OAAJ,oBAAIA,OAAO,CAAEE,cAAb,CAAR,KAAuCF,OAAvC,oBAAuCA,OAAO,CAAEG,cAAhD,CADF;AAGA,MAAMC,qBAAqB,GAAGP,QAAQ,CAAC,4BAAD,CAAtC;AACA,SACE,oBAAC,SAAD,QACE,oBAAC,cAAD,QACE,oBAAC,aAAD,QAEE,oBAAC,KAAD;AAAO,IAAA,iBAAiB,EAAC,SAAzB;AAAmC,IAAA,kBAAkB,EAAE;AAAvD,KACGD,CAAC,CAAC,wBAAD,CADJ,CAFF,EAME,oBAAC,eAAD,QACE,oBAAC,QAAD;AACE,IAAA,uBAAuB,EAAE;AAAES,MAAAA,MAAM,EAAED;AAAV;AAD3B,IADF,CANF,EAYE,oBAAC,eAAD,QACGH,iBAAiB,GAChB,0CACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,+BACE,oBAAC,WAAD;AACE,IAAA,aAAa,MADf;AAEE,IAAA,MAAM,EAAEL,CAAC,CAAC,iCAAD;AAFX,IADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,+BACE,oBAAC,WAAD;AACE,IAAA,aAAa,MADf;AAEE,IAAA,MAAM,EAAEA,CAAC,CAAC,4BAAD;AAFX,IADF,CADF,CATF,CADgB,GAoBhB,0CACE,oBAAC,WAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,MAAM,EAAEA,CAAC,CAAC,sBAAD,CAHX;AAIE,IAAA,OAAO,EAAE,iBAACU,KAAD,EAAW;AAClBA,MAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEC,cAAP;AACAT,MAAAA,MAAM,CAACU,IAAP,QAAgBV,MAAhB,oBAAgBA,MAAM,CAAEW,MAAxB,IAAiCvC,MAAM,CAACwC,OAAxC;AACD;AAPH,IADF,CArBJ,EAiCE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,+BACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,eAAe,EAAE,aAFZ;AAGLC,MAAAA,MAAM,EAAE,6BAHH;AAILC,MAAAA,SAAS,EAAE;AAJN,KADT;AAOE,IAAA,MAAM,EACJ,oBAAC,UAAD,QACE,oBAAC,UAAD,QACGlB,CAAC,CAAC,oCAAD,CADJ,CADF,EAIE,oBAAC,YAAD,OAJF;AARJ,IADF,CADF,CAjCF,CAZF,CADF,CADF,CADF;AAyED,CAnFD;;AAqFA,eAAeD,uBAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport styled, { css } from \"styled-components/native\";\nimport Link from \"next/link\";\nimport { useTranslation } from \"next-i18next\";\nimport ChevronRight from \"../../style/svgs/chevron-right.svg\";\nimport { ButtonCta } from \"../Buttons\";\nimport { Routes } from \"../../consts/router\";\nimport { Theme } from \"../../style/theme.config\";\nimport { AuthContext } from \"../../../pages/_app\";\nimport React, { useContext } from \"react\";\nimport styledWeb from \"styled-components\";\n\nconst Container = styled.View`\n  width: 100%;\n`;\n\nconst ContentWrapper = styled.View`\n  width: 100%;\n  margin: 0 auto;\n  max-width: ${({ theme }: { theme: Theme }) => `${theme.maxContainerWidth}px`};\n`;\n\nconst TextContainer = styled.View`\n  padding: 16px;\n  max-width: 740px;\n`;\n\nconst Title = styled.Text`\n  color: ${({ theme }: { theme: Theme }) => `${theme.colors.text}`};\n  font-size: 24px;\n  line-height: 30px;\n  font-weight: 700;\n  margin-top: 130px;\n  max-width: 300px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        font-size: 44px;\n        line-height: 52px;\n        max-width: none;\n        margin-top: 88px;\n      `,\n    })}\n`;\n\nconst SubTitleWrapper = styled.View`\n  margin-top: 10px;\n  display: inline-block;\n  max-width: 300px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        margin-top: 40px;\n        max-width: none;\n      `,\n    })}\n`;\n\nconst SubTitle = styledWeb.div` //TODO: react native doesn't support dangerouslySetInnerHTML attribute. When we create the mobile app extract this component and create a version working with both web and mobile\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  color: ${({ theme }: { theme: Theme }) => `${theme.colors.text}`};\n  margin-top: 30px;\n\n  b {\n    font-weight: 700;\n  }\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        font-size: 20px;\n        line-height: 28px;\n        margin-top: 40px;\n      `,\n    })}\n\n`;\n\nconst ButtonContainer = styled.View`\n  align-items: flex-start;\n  margin-top: 50px;\n  margin-bottom: 145px;\n\n  ${({ theme }: { theme: Theme }) =>\n    theme.getBreakPoint({\n      lg: css`\n        margin-top: 28px;\n        flex-direction: row;\n        margin-top: 104px;\n      `,\n    })}\n`;\n\nconst ButtonStyle = styled(ButtonCta)<{ first?: boolean; theme: Theme }>`\n  margin-top: 17px;\n  font-size: 16px;\n  display: flex;\n  padding: 0px 16px;\n  height: 48.5;\n  align-items: center;\n  justify-content: center;\n\n  ${({ theme, first }) =>\n    !first &&\n    theme.getBreakPoint({\n      lg: css`\n        margin-left: 20px;\n      `,\n    })}\n`;\n\nconst ButtonText = styled.Text`\n  font-weight: 700;\n  font-size: 14px;\n  color: #003566;\n`;\n\nconst FlexAnchor = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 0px 10px;\n`;\n\nconst LandingProjectIntention = () => {\n  const { t } = useTranslation(\"landingPage\");\n  const { t: t_others } = useTranslation(\"others\");\n  const router = useRouter();\n  const { identity, account } = useContext(AuthContext);\n\n  const isAccountVerified =\n    identity && account?.confirmedEmail && account?.confirmedPhone;\n\n  const welcomeAppDescription = t_others(\"welcomePage.appDescription\");\n  return (\n    <Container>\n      <ContentWrapper>\n        <TextContainer>\n          {/* @ts-expect-error TODO: fix prop types */}\n          <Title accessibilityRole=\"heading\" accessibilityLevel={1}>\n            {t(\"projectIntention.title\")}\n          </Title>\n\n          <SubTitleWrapper>\n            <SubTitle\n              dangerouslySetInnerHTML={{ __html: welcomeAppDescription }}\n            />\n          </SubTitleWrapper>\n\n          <ButtonContainer>\n            {isAccountVerified ? (\n              <>\n                <Link href=\"/guest\">\n                  <a>\n                    <ButtonStyle\n                      colorOpposite\n                      anchor={t(\"projectIntention.lookingForHelp\")}\n                    />\n                  </a>\n                </Link>\n                <Link href=\"/host\">\n                  <a>\n                    <ButtonStyle\n                      colorOpposite\n                      anchor={t(\"projectIntention.shareHelp\")}\n                    />\n                  </a>\n                </Link>\n              </>\n            ) : (\n              <>\n                <ButtonStyle\n                  first\n                  colorOpposite\n                  anchor={t(\"common:shareLocation\")}\n                  onPress={(event) => {\n                    event?.preventDefault();\n                    router.push(`/${router?.locale}${Routes.SIGN_IN}`);\n                  }}\n                />\n              </>\n            )}\n            <Link href=\"/public-shelters\">\n              <a>\n                <ButtonStyle\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"transparent\",\n                    border: \"1.5px solid rgb(0, 53, 102)\",\n                    boxSizing: \"border-box\",\n                  }}\n                  anchor={\n                    <FlexAnchor>\n                      <ButtonText>\n                        {t(\"others:common.words.publicShelters\")}\n                      </ButtonText>\n                      <ChevronRight />\n                    </FlexAnchor>\n                  }\n                />\n              </a>\n            </Link>\n          </ButtonContainer>\n        </TextContainer>\n      </ContentWrapper>\n    </Container>\n  );\n};\n\nexport default LandingProjectIntention;\n"]},"metadata":{},"sourceType":"module"}