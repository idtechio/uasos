{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { Search } from \"./style\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useTranslation } from \"next-i18next\";\nexport function SearchHeader(_ref) {\n  var data = _ref.data,\n      searchable = _ref.searchable,\n      setFilteredData = _ref.setFilteredData;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      onChangeText = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    var textToSearch = text || \"\";\n    var filteredArray = data.filter(function (_ref2) {\n      var label = _ref2.label;\n\n      if (typeof label === \"string\") {\n        return label.toLocaleLowerCase().includes(textToSearch);\n      }\n\n      return label;\n    });\n    setFilteredData(filteredArray);\n  }, [data, setFilteredData, text]);\n  return searchable ? React.createElement(Search, null, React.createElement(TextInput, {\n    placeholder: t(\"dropdownSearch\"),\n    onChangeText: onChangeText,\n    value: text\n  })) : null;\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Dropdown/SearchHeader.tsx"],"names":["React","useState","useEffect","Search","useTranslation","SearchHeader","data","searchable","setFilteredData","text","onChangeText","t","textToSearch","filteredArray","filter","label","toLocaleLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT;;AAEA,SAASC,cAAT,QAA+B,cAA/B;AAWA,OAAO,SAASC,YAAT,OAIM;AAAA,MAHXC,IAGW,QAHXA,IAGW;AAAA,MAFXC,UAEW,QAFXA,UAEW;AAAA,MADXC,eACW,QADXA,eACW;;AACX,kBAA6BP,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,YAAb;;AACA,wBAAcN,cAAc,EAA5B;AAAA,MAAQO,CAAR,mBAAQA,CAAR;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,YAAY,GAAGH,IAAI,IAAI,EAA7B;AACA,QAAMI,aAAa,GAAGP,IAAI,CAACQ,MAAL,CAAY,iBAAe;AAAA,UAAZC,KAAY,SAAZA,KAAY;;AAC/C,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOA,KAAK,CAACC,iBAAN,GAA0BC,QAA1B,CAAmCL,YAAnC,CAAP;AACD;;AACD,aAAOG,KAAP;AACD,KALqB,CAAtB;AAMAP,IAAAA,eAAe,CAACK,aAAD,CAAf;AACD,GATQ,EASN,CAACP,IAAD,EAAOE,eAAP,EAAwBC,IAAxB,CATM,CAAT;AAWA,SAAOF,UAAU,GACf,oBAAC,MAAD,QACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEI,CAAC,CAAC,gBAAD,CADhB;AAEE,IAAA,YAAY,EAAED,YAFhB;AAGE,IAAA,KAAK,EAAED;AAHT,IADF,CADe,GAQb,IARJ;AASD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Search } from \"./style\";\nimport { TextInput } from \"react-native\";\nimport { useTranslation } from \"next-i18next\";\n\ntype Props<T> = {\n  searchable: boolean;\n  data: {\n    label: string | JSX.Element;\n    value: T;\n  }[];\n  setFilteredData: (data: Props<T>[\"data\"]) => void;\n};\n\nexport function SearchHeader<T>({\n  data,\n  searchable,\n  setFilteredData,\n}: Props<T>) {\n  const [text, onChangeText] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const textToSearch = text || \"\";\n    const filteredArray = data.filter(({ label }) => {\n      if (typeof label === \"string\") {\n        return label.toLocaleLowerCase().includes(textToSearch);\n      }\n      return label;\n    });\n    setFilteredData(filteredArray);\n  }, [data, setFilteredData, text]);\n\n  return searchable ? (\n    <Search>\n      <TextInput\n        placeholder={t(\"dropdownSearch\")}\n        onChangeText={onChangeText}\n        value={text}\n      />\n    </Search>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}