{"ast":null,"code":"import createHandler from \"./createHandler\";\nimport { baseGestureHandlerProps } from \"./gestureHandlerCommon\";\nexport var RotationGestureHandler = createHandler({\n  name: 'RotationGestureHandler',\n  allowedProps: baseGestureHandlerProps,\n  config: {}\n});","map":{"version":3,"sources":["RotationGestureHandler.ts"],"names":["RotationGestureHandler","createHandler","name","allowedProps","config"],"mappings":"AAAA,OAAA,aAAA;AACA,SAAA,uBAAA;AAqCA,OAAO,IAAMA,sBAAsB,GAAGC,aAAa,CAGjD;AACAC,EAAAA,IAAI,EADJ,wBAAA;AAEAC,EAAAA,YAAY,EAFZ,uBAAA;AAGAC,EAAAA,MAAM,EAAE;AAHR,CAHiD,CAA5C","sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport type RotationGestureHandlerEventPayload = {\n  /**\n   * Amount rotated, expressed in radians, from the gesture's focal point\n   * (anchor).\n   */\n  rotation: number;\n\n  /**\n   * X coordinate, expressed in points, of the gesture's central focal point\n   * (anchor).\n   */\n  anchorX: number;\n\n  /**\n   * Y coordinate, expressed in points, of the gesture's central focal point\n   * (anchor).\n   */\n  anchorY: number;\n\n  /**\n   *\n   * Instantaneous velocity, expressed in point units per second, of the\n   * gesture.\n   */\n  velocity: number;\n};\n\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\n\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: 'RotationGestureHandler',\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}