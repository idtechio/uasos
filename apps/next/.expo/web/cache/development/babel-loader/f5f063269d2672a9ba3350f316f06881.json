{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var getNumberList = function getNumberList() {\n  var res, body;\n  return _regeneratorRuntime.async(function getNumberList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(process.env.NEXT_PUBLIC_DOMAIN + \"api/listing/numbers\", {\n            method: \"GET\"\n          }));\n\n        case 3:\n          res = _context.sent;\n\n          if (!(res.status != 200)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error(\"Couln't fetch numbers list, try again later.\");\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          body = _context.sent;\n          return _context.abrupt(\"return\", body);\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            ok: \"ok\",\n            numbers: {\n              matched_beds: \"0\",\n              available_beds: \"0\",\n              requested_beds: \"0\"\n            }\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/client-api/numbers.ts"],"names":["getNumberList","fetch","process","env","NEXT_PUBLIC_DOMAIN","method","res","status","Error","json","body","ok","numbers","matched_beds","available_beds","requested_beds"],"mappings":";AAEA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEPC,KAAK,CACrBC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,qBADZ,EAErB;AACEC,YAAAA,MAAM,EAAE;AADV,WAFqB,CAFE;;AAAA;AAEnBC,UAAAA,GAFmB;;AAAA,gBASrBA,GAAG,CAACC,MAAJ,IAAc,GATO;AAAA;AAAA;AAAA;;AAAA,gBAUjB,IAAIC,KAAJ,CAAU,8CAAV,CAViB;;AAAA;AAAA;AAAA,2CAaLF,GAAG,CAACG,IAAJ,EAbK;;AAAA;AAanBC,UAAAA,IAbmB;AAAA,2CAelBA,IAfkB;;AAAA;AAAA;AAAA;AAAA,2CAiBlB;AACLC,YAAAA,EAAE,EAAE,IADC;AAELC,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,GADP;AAEPC,cAAAA,cAAc,EAAE,GAFT;AAGPC,cAAAA,cAAc,EAAE;AAHT;AAFJ,WAjBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import { GetNumberList } from \"../../pages/api/listing/numbers\";\n\nexport const getNumberList = async () => {\n  try {\n    const res = await fetch(\n      process.env.NEXT_PUBLIC_DOMAIN + \"api/listing/numbers\",\n      {\n        method: \"GET\",\n      }\n    );\n\n    if (res.status != 200) {\n      throw new Error(\"Couln't fetch numbers list, try again later.\");\n    }\n\n    const body = (await res.json()) as GetNumberList;\n\n    return body;\n  } catch (e) {\n    return {\n      ok: \"ok\",\n      numbers: {\n        matched_beds: \"0\",\n        available_beds: \"0\",\n        requested_beds: \"0\",\n      },\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}