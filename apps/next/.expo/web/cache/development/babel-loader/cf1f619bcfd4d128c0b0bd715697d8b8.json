{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ComplexAnimationBuilder } from \"../animationBuilder/ComplexAnimationBuilder\";\nexport var LinearTransition = function (_ComplexAnimationBuil) {\n  _inherits(LinearTransition, _ComplexAnimationBuil);\n\n  var _super = _createSuper(LinearTransition);\n\n  function LinearTransition() {\n    var _this;\n\n    _classCallCheck(this, LinearTransition);\n\n    _this = _super.apply(this, arguments);\n\n    _this.build = function () {\n      var delayFunction = _this.getDelayFunction();\n\n      var _this$getAnimationAnd = _this.getAnimationAndConfig(),\n          _this$getAnimationAnd2 = _slicedToArray(_this$getAnimationAnd, 2),\n          animation = _this$getAnimationAnd2[0],\n          config = _this$getAnimationAnd2[1];\n\n      var callback = _this.callbackV;\n\n      var delay = _this.getDelay();\n\n      return function (values) {\n        'worklet';\n\n        return {\n          initialValues: {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight\n          },\n          animations: {\n            originX: delayFunction(delay, animation(values.targetOriginX, config)),\n            originY: delayFunction(delay, animation(values.targetOriginY, config)),\n            width: delayFunction(delay, animation(values.targetWidth, config)),\n            height: delayFunction(delay, animation(values.targetHeight, config))\n          },\n          callback: callback\n        };\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(LinearTransition, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new LinearTransition();\n    }\n  }]);\n\n  return LinearTransition;\n}(ComplexAnimationBuilder);\nexport var Layout = LinearTransition;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultTransitions/LinearTransition.js"],"names":["ComplexAnimationBuilder","LinearTransition","arguments","build","delayFunction","getDelayFunction","getAnimationAndConfig","animation","config","callback","callbackV","delay","getDelay","values","initialValues","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","animations","targetOriginX","targetOriginY","targetWidth","targetHeight","Layout"],"mappings":";;;;;;;;;;;AAAA,SAASA,uBAAT;AACA,WAAaC,gBAAb;AAAA;;AAAA;;AACI,8BAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;;AACA,UAAKC,KAAL,GAAa,YAAM;AACf,UAAMC,aAAa,GAAG,MAAKC,gBAAL,EAAtB;;AACA,kCAA4B,MAAKC,qBAAL,EAA5B;AAAA;AAAA,UAAOC,SAAP;AAAA,UAAkBC,MAAlB;;AACA,UAAMC,QAAQ,GAAG,MAAKC,SAAtB;;AACA,UAAMC,KAAK,GAAG,MAAKC,QAAL,EAAd;;AACA,aAAO,UAACC,MAAD,EAAY;AACf;;AACA,eAAO;AACHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,OAAO,EAAEF,MAAM,CAACG,cADL;AAEXC,YAAAA,OAAO,EAAEJ,MAAM,CAACK,cAFL;AAGXC,YAAAA,KAAK,EAAEN,MAAM,CAACO,YAHH;AAIXC,YAAAA,MAAM,EAAER,MAAM,CAACS;AAJJ,WADZ;AAOHC,UAAAA,UAAU,EAAE;AACRR,YAAAA,OAAO,EAAEX,aAAa,CAACO,KAAD,EAAQJ,SAAS,CAACM,MAAM,CAACW,aAAR,EAAuBhB,MAAvB,CAAjB,CADd;AAERS,YAAAA,OAAO,EAAEb,aAAa,CAACO,KAAD,EAAQJ,SAAS,CAACM,MAAM,CAACY,aAAR,EAAuBjB,MAAvB,CAAjB,CAFd;AAGRW,YAAAA,KAAK,EAAEf,aAAa,CAACO,KAAD,EAAQJ,SAAS,CAACM,MAAM,CAACa,WAAR,EAAqBlB,MAArB,CAAjB,CAHZ;AAIRa,YAAAA,MAAM,EAAEjB,aAAa,CAACO,KAAD,EAAQJ,SAAS,CAACM,MAAM,CAACc,YAAR,EAAsBnB,MAAtB,CAAjB;AAJb,WAPT;AAaHC,UAAAA,QAAQ,EAAEA;AAbP,SAAP;AAeH,OAjBD;AAkBH,KAvBD;;AAFU;AA0Bb;;AA3BL;AAAA;AAAA,WA4BI,0BAAwB;AACpB,aAAO,IAAIR,gBAAJ,EAAP;AACH;AA9BL;;AAAA;AAAA,EAAsCD,uBAAtC;AAgCA,OAAO,IAAM4B,MAAM,GAAG3B,gBAAf","sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder/ComplexAnimationBuilder';\nexport class LinearTransition extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const callback = this.callbackV;\n            const delay = this.getDelay();\n            return (values) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        originX: values.currentOriginX,\n                        originY: values.currentOriginY,\n                        width: values.currentWidth,\n                        height: values.currentHeight,\n                    },\n                    animations: {\n                        originX: delayFunction(delay, animation(values.targetOriginX, config)),\n                        originY: delayFunction(delay, animation(values.targetOriginY, config)),\n                        width: delayFunction(delay, animation(values.targetWidth, config)),\n                        height: delayFunction(delay, animation(values.targetHeight, config)),\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new LinearTransition();\n    }\n}\nexport const Layout = LinearTransition;\n"]},"metadata":{},"sourceType":"module"}