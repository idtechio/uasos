{"ast":null,"code":"import React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport NumericInput from \"../Forms/NumericInput\";\nimport InputControl from \"../Forms/InputControl\";\nimport { Error } from \"./style\";\n\nvar FormTextInput = function FormTextInput(_ref) {\n  var name = _ref.name,\n      errorMsg = _ref.errorMsg,\n      rules = _ref.rules,\n      error = _ref.error,\n      max = _ref.max,\n      min = _ref.min;\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control;\n\n  return React.createElement(Controller, {\n    control: control,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          value = _ref2$field.value;\n      return React.createElement(InputControl, null, React.createElement(NumericInput, {\n        onChange: onChange,\n        value: value,\n        error: error,\n        min: min,\n        max: max\n      }), error && React.createElement(Error, null, errorMsg));\n    },\n    name: name\n  });\n};\n\nexport default FormTextInput;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Inputs/FormNumericInput.tsx"],"names":["React","Controller","useFormContext","NumericInput","InputControl","Error","FormTextInput","name","errorMsg","rules","error","max","min","control","field","onChange","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAiCC,cAAjC,QAAuD,iBAAvD;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AAEA,SAASC,KAAT;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAuD;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;;AAC3E,wBAAoBV,cAAc,EAAlC;AAAA,MAAQW,OAAR,mBAAQA,OAAR;;AACA,SACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,MAAM,EAAE;AAAA,8BAAGK,KAAH;AAAA,UAAYC,QAAZ,eAAYA,QAAZ;AAAA,UAAsBC,KAAtB,eAAsBA,KAAtB;AAAA,aACN,oBAAC,YAAD,QACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAED,QADZ;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,KAAK,EAAEN,KAHT;AAIE,QAAA,GAAG,EAAEE,GAJP;AAKE,QAAA,GAAG,EAAED;AALP,QADF,EAQGD,KAAK,IAAI,oBAAC,KAAD,QAAQF,QAAR,CARZ,CADM;AAAA,KAHV;AAeE,IAAA,IAAI,EAAED;AAfR,IADF;AAmBD,CArBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\nimport { Controller, FieldError, useFormContext } from \"react-hook-form\";\nimport NumericInput from \"../Forms/NumericInput\";\nimport InputControl from \"../Forms/InputControl\";\nimport { FormKey } from \"../../helpers/FormTypes\";\nimport { Error } from \"./style\";\n\ntype Props = {\n  name: FormKey;\n  min?: number;\n  max?: number;\n  error?: FieldError;\n  errorMsg?: string;\n} & Pick<React.ComponentProps<typeof Controller>, \"rules\">;\n\nconst FormTextInput = ({ name, errorMsg, rules, error, max, min }: Props) => {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      control={control}\n      rules={rules}\n      render={({ field: { onChange, value } }) => (\n        <InputControl>\n          <NumericInput\n            onChange={onChange}\n            value={value}\n            error={error}\n            min={min}\n            max={max}\n          />\n          {error && <Error>{errorMsg}</Error>}\n        </InputControl>\n      )}\n      name={name}\n    />\n  );\n};\nexport default FormTextInput;\n"]},"metadata":{},"sourceType":"module"}