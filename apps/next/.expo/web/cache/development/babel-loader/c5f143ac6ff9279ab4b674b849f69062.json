{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport { useTranslation } from \"next-i18next\";\nimport { useRouter } from \"next/router\";\nimport React, { useCallback } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styled, { useTheme } from \"styled-components/native\";\nimport EmailIcon from \"../../style/svgs/email.svg\";\nimport PhoneIcon from \"../../style/svgs/phone.svg\";\nimport Toast from \"../Toast\";\nvar VerifySectionWrapper = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\n\nvar VerifyPhoneToast = function VerifyPhoneToast() {\n  var router = useRouter();\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(\"desktop\"),\n      t = _useTranslation.t;\n\n  var goToProfile = useCallback(function () {\n    return router.push(\"/user-profile\");\n  }, [router]);\n  return React.createElement(React.Fragment, null, React.createElement(Toast, {\n    color: theme.colors.error,\n    label: t(\"others:desktop.checks.phoneNotVerified\"),\n    cta: {\n      onPress: goToProfile,\n      label: t(\"verify\")\n    },\n    icon: React.createElement(PhoneIcon, null),\n    contaierStyle: {\n      marginBottom: 0\n    }\n  }));\n};\n\nexport default function VerifySection(_ref) {\n  var needEmail = _ref.needEmail,\n      needPhone = _ref.needPhone,\n      needAccount = _ref.needAccount,\n      containerStyle = _ref.containerStyle,\n      emailOnPress = _ref.emailOnPress;\n  var theme = useTheme();\n\n  var _useTranslation2 = useTranslation(\"desktop\"),\n      t = _useTranslation2.t;\n\n  return React.createElement(VerifySectionWrapper, {\n    style: containerStyle\n  }, needEmail && React.createElement(Toast, {\n    color: theme.colors.error,\n    label: t(\"others:desktop.checks.emailNotVerified\"),\n    cta: {\n      onPress: emailOnPress,\n      label: t(\"verify\")\n    },\n    icon: React.createElement(EmailIcon, null),\n    contaierStyle: {\n      marginBottom: 10\n    }\n  }), needAccount && React.createElement(Toast, {\n    color: theme.colors.error,\n    label: t(\"others:desktop.checks.accountInCreation\"),\n    cta: {\n      onPress: function onPress() {\n        return null;\n      },\n      label: \"\"\n    },\n    icon: React.createElement(ActivityIndicator, null),\n    contaierStyle: {\n      marginBottom: 10\n    }\n  }), needPhone && React.createElement(VerifyPhoneToast, null));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/VerifySection/VerifySection.tsx"],"names":["useTranslation","useRouter","React","useCallback","styled","useTheme","EmailIcon","PhoneIcon","Toast","VerifySectionWrapper","View","VerifyPhoneToast","router","theme","t","goToProfile","push","colors","error","onPress","label","marginBottom","VerifySection","needEmail","needPhone","needAccount","containerStyle","emailOnPress"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;AAEA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,0BAAjC;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,KAAP;AAEA,IAAMC,oBAAoB,GAAGL,MAAM,CAACM,IAAV,0EAA1B;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,MAAMY,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,wBAAcL,cAAc,CAAC,SAAD,CAA5B;AAAA,MAAQc,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,WAAW,GAAGZ,WAAW,CAAC;AAAA,WAAMS,MAAM,CAACI,IAAP,CAAY,eAAZ,CAAN;AAAA,GAAD,EAAqC,CAACJ,MAAD,CAArC,CAA/B;AAEA,SACE,0CACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACI,MAAN,CAAaC,KADtB;AAEE,IAAA,KAAK,EAAEJ,CAAC,CAAC,wCAAD,CAFV;AAGE,IAAA,GAAG,EAAE;AAAEK,MAAAA,OAAO,EAAEJ,WAAX;AAAwBK,MAAAA,KAAK,EAAEN,CAAC,CAAC,QAAD;AAAhC,KAHP;AAIE,IAAA,IAAI,EAAE,oBAAC,SAAD,OAJR;AAKE,IAAA,aAAa,EAAE;AAAEO,MAAAA,YAAY,EAAE;AAAhB;AALjB,IADF,CADF;AAWD,CAnBD;;AAqBA,eAAe,SAASC,aAAT,OAMG;AAAA,MALhBC,SAKgB,QALhBA,SAKgB;AAAA,MAJhBC,SAIgB,QAJhBA,SAIgB;AAAA,MAHhBC,WAGgB,QAHhBA,WAGgB;AAAA,MAFhBC,cAEgB,QAFhBA,cAEgB;AAAA,MADhBC,YACgB,QADhBA,YACgB;AAChB,MAAMd,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,yBAAcL,cAAc,CAAC,SAAD,CAA5B;AAAA,MAAQc,CAAR,oBAAQA,CAAR;;AACA,SACE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEY;AAA7B,KACGH,SAAS,IACR,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEV,KAAK,CAACI,MAAN,CAAaC,KADtB;AAEE,IAAA,KAAK,EAAEJ,CAAC,CAAC,wCAAD,CAFV;AAGE,IAAA,GAAG,EAAE;AAAEK,MAAAA,OAAO,EAAEQ,YAAX;AAAyBP,MAAAA,KAAK,EAAEN,CAAC,CAAC,QAAD;AAAjC,KAHP;AAIE,IAAA,IAAI,EAAE,oBAAC,SAAD,OAJR;AAKE,IAAA,aAAa,EAAE;AAAEO,MAAAA,YAAY,EAAE;AAAhB;AALjB,IAFJ,EAUGI,WAAW,IACV,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,KAAK,CAACI,MAAN,CAAaC,KADtB;AAEE,IAAA,KAAK,EAAEJ,CAAC,CAAC,yCAAD,CAFV;AAGE,IAAA,GAAG,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAA,eAAM,IAAN;AAAA,OAAX;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAHP;AAIE,IAAA,IAAI,EAAE,oBAAC,iBAAD,OAJR;AAKE,IAAA,aAAa,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AALjB,IAXJ,EAmBGG,SAAS,IAAI,oBAAC,gBAAD,OAnBhB,CADF;AAuBD","sourcesContent":["import { useTranslation } from \"next-i18next\";\nimport { useRouter } from \"next/router\";\nimport React, { useCallback } from \"react\";\nimport { StyleProp, ViewStyle, ActivityIndicator } from \"react-native\";\nimport styled, { useTheme } from \"styled-components/native\";\nimport EmailIcon from \"../../style/svgs/email.svg\";\nimport PhoneIcon from \"../../style/svgs/phone.svg\";\nimport { Theme } from \"../../style/theme.config\";\nimport Toast from \"../Toast\";\n\nconst VerifySectionWrapper = styled.View``;\n\nexport type Verifications = {\n  needEmail: boolean;\n  needPhone: boolean;\n  needAccount: boolean;\n  containerStyle?: StyleProp<ViewStyle>;\n  emailOnPress: () => void;\n};\n\nconst VerifyPhoneToast = () => {\n  const router = useRouter();\n  const theme = useTheme() as Theme;\n\n  const { t } = useTranslation(\"desktop\");\n\n  const goToProfile = useCallback(() => router.push(\"/user-profile\"), [router]);\n\n  return (\n    <>\n      <Toast\n        color={theme.colors.error}\n        label={t(\"others:desktop.checks.phoneNotVerified\")}\n        cta={{ onPress: goToProfile, label: t(\"verify\") }}\n        icon={<PhoneIcon />}\n        contaierStyle={{ marginBottom: 0 }}\n      />\n    </>\n  );\n};\n\nexport default function VerifySection({\n  needEmail,\n  needPhone,\n  needAccount,\n  containerStyle,\n  emailOnPress,\n}: Verifications) {\n  const theme = useTheme() as Theme;\n\n  const { t } = useTranslation(\"desktop\");\n  return (\n    <VerifySectionWrapper style={containerStyle}>\n      {needEmail && (\n        <Toast\n          color={theme.colors.error}\n          label={t(\"others:desktop.checks.emailNotVerified\")}\n          cta={{ onPress: emailOnPress, label: t(\"verify\") }}\n          icon={<EmailIcon />}\n          contaierStyle={{ marginBottom: 10 }}\n        />\n      )}\n      {needAccount && (\n        <Toast\n          color={theme.colors.error}\n          label={t(\"others:desktop.checks.accountInCreation\")}\n          cta={{ onPress: () => null, label: \"\" }}\n          icon={<ActivityIndicator />}\n          contaierStyle={{ marginBottom: 10 }}\n        />\n      )}\n      {needPhone && <VerifyPhoneToast />}\n    </VerifySectionWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}