{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nvar API_KEY = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\nvar defaultOptions = {\n  keyboardShortcuts: false,\n  fullscreenControl: false\n};\nvar containerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nvar center = {\n  lat: 51.3428229,\n  lng: 26.6008043\n};\nvar libraries = [\"places\"];\nexport var MapComponent = function MapComponent(_ref) {\n  var marker = _ref.marker;\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n    libraries: libraries\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var onLoad = useCallback(function (map) {\n    return setMap(map);\n  }, []);\n  useEffect(function () {\n    if (map) {\n      var bounds = new google.maps.LatLngBounds();\n      bounds.extend({\n        lat: marker.lat,\n        lng: marker.lng\n      });\n      map.fitBounds(bounds);\n      map.setZoom(17);\n    }\n  }, [map, marker]);\n  return isLoaded ? React.createElement(GoogleMap, {\n    zoom: 10,\n    center: center,\n    onLoad: onLoad,\n    options: defaultOptions,\n    mapContainerStyle: containerStyle\n  }, React.createElement(Marker, {\n    position: marker\n  })) : null;\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/PublicShelters/MapComponent.tsx"],"names":["React","useCallback","useEffect","useState","GoogleMap","Marker","useJsApiLoader","API_KEY","process","env","NEXT_PUBLIC_GOOGLE_MAPS_API_KEY","defaultOptions","keyboardShortcuts","fullscreenControl","containerStyle","width","height","center","lat","lng","libraries","MapComponent","marker","id","googleMapsApiKey","isLoaded","map","setMap","onLoad","bounds","google","maps","LatLngBounds","extend","fitBounds","setZoom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,cAA5B,QAAkD,wBAAlD;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAA5B;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,iBAAiB,EAAE,KADE;AAErBC,EAAAA,iBAAiB,EAAE;AAFE,CAAvB;AAKA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,IAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,UADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;AAoBA,IAAMC,SAAoB,GAAG,CAAC,QAAD,CAA7B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;;AAC7D,wBAAqBhB,cAAc,CAAC;AAClCiB,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAEjB,OAFgB;AAGlCa,IAAAA,SAAS,EAATA;AAHkC,GAAD,CAAnC;AAAA,MAAQK,QAAR,mBAAQA,QAAR;;AAMA,kBAAsBtB,QAAQ,CAAyB,IAAzB,CAA9B;AAAA;AAAA,MAAOuB,GAAP;AAAA,MAAYC,MAAZ;;AAEA,MAAMC,MAAM,GAAG3B,WAAW,CAAC,UAACyB,GAAD;AAAA,WAASC,MAAM,CAACD,GAAD,CAAf;AAAA,GAAD,EAAuB,EAAvB,CAA1B;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,GAAJ,EAAS;AACP,UAAMG,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,YAAhB,EAAf;AAEAH,MAAAA,MAAM,CAACI,MAAP,CAAc;AACZf,QAAAA,GAAG,EAAEI,MAAM,CAACJ,GADA;AAEZC,QAAAA,GAAG,EAAEG,MAAM,CAACH;AAFA,OAAd;AAKAO,MAAAA,GAAG,CAACQ,SAAJ,CAAcL,MAAd;AAEAH,MAAAA,GAAG,CAACS,OAAJ,CAAY,EAAZ;AACD;AACF,GAbQ,EAaN,CAACT,GAAD,EAAMJ,MAAN,CAbM,CAAT;AAeA,SAAOG,QAAQ,GACb,oBAAC,SAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,MAAM,EAAER,MAFV;AAGE,IAAA,MAAM,EAAEW,MAHV;AAIE,IAAA,OAAO,EAAEjB,cAJX;AAKE,IAAA,iBAAiB,EAAEG;AALrB,KAOG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEQ;AAAlB,IAPH,CADa,GAUX,IAVJ;AAWD,CArCM","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\n\nconst API_KEY = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY as string;\n\nconst defaultOptions = {\n  keyboardShortcuts: false,\n  fullscreenControl: false,\n};\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst center = {\n  lat: 51.3428229,\n  lng: 26.6008043,\n};\n\ninterface MapComponentProps {\n  marker: {\n    lat: number;\n    lng: number;\n  };\n}\n\ntype Libraries = (\n  | \"drawing\"\n  | \"geometry\"\n  | \"localContext\"\n  | \"places\"\n  | \"visualization\"\n)[];\n\nconst libraries: Libraries = [\"places\"];\n\nexport const MapComponent = ({ marker }: MapComponentProps) => {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n    libraries,\n  });\n\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n\n  const onLoad = useCallback((map) => setMap(map), []);\n\n  useEffect(() => {\n    if (map) {\n      const bounds = new google.maps.LatLngBounds();\n\n      bounds.extend({\n        lat: marker.lat,\n        lng: marker.lng,\n      });\n\n      map.fitBounds(bounds);\n\n      map.setZoom(17);\n    }\n  }, [map, marker]);\n\n  return isLoaded ? (\n    <GoogleMap\n      zoom={10}\n      center={center}\n      onLoad={onLoad}\n      options={defaultOptions}\n      mapContainerStyle={containerStyle}\n    >\n      {<Marker position={marker as google.maps.LatLngLiteral} />}\n    </GoogleMap>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}