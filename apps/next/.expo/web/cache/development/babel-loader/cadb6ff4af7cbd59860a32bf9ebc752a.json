{"ast":null,"code":"var getPhoneNumberWithoutPrefix = function getPhoneNumberWithoutPrefix(phone) {\n  return phone.split(\"\").reverse().join(\"\").substring(0, 9).split(\"\").reverse().join(\"\");\n};\n\nvar getPhonePrefix = function getPhonePrefix(phone) {\n  return phone.split(\"\").reverse().filter(function (_, index) {\n    return index >= 9;\n  }).reverse().join(\"\");\n};\n\nexport var getFormDefaultValues = function getFormDefaultValues(account, identity) {\n  var _account$smsNotificat;\n\n  return {\n    email: (identity == null ? void 0 : identity.email) || undefined,\n    phone: identity != null && identity.phoneNumber ? getPhoneNumberWithoutPrefix(identity.phoneNumber) : undefined,\n    name: (account == null ? void 0 : account.name) || undefined,\n    preferredLanguage: (account == null ? void 0 : account.preferredLang) || undefined,\n    phonePrefix: identity != null && identity.phoneNumber ? getPhonePrefix(identity.phoneNumber) : undefined,\n    smsNotification: (_account$smsNotificat = account == null ? void 0 : account.smsNotification.valueOf()) != null ? _account$smsNotificat : true\n  };\n};\nexport var parseError = function parseError(error) {\n  if (error.includes(\"email-already-exists\") || error.includes(\"email-already-in-use\")) {\n    return \"userRegistration.errors.emailExist\";\n  } else if (error.includes(\"phone-number-already-exists\") || error.includes(\"account-exists\")) {\n    return \"userRegistration.errors.phoneLinkingFailed\";\n  } else if (error.includes(\"too-many-requests\")) {\n    return \"userRegistration.errors.tooManyRequest\";\n  } else if (error.includes(\"invalid-verification\")) {\n    return \"userRegistration.errors.invalidCode\";\n  } else {\n    return \"Oops something went wrong\";\n  }\n};","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/EditUserProfileForm/helpers.ts"],"names":["getPhoneNumberWithoutPrefix","phone","split","reverse","join","substring","getPhonePrefix","filter","_","index","getFormDefaultValues","account","identity","email","undefined","phoneNumber","name","preferredLanguage","preferredLang","phonePrefix","smsNotification","valueOf","parseError","error","includes"],"mappings":"AAIA,IAAMA,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,KAAD;AAAA,SAClCA,KAAK,CACFC,KADH,CACS,EADT,EAEGC,OAFH,GAGGC,IAHH,CAGQ,EAHR,EAIGC,SAJH,CAIa,CAJb,EAIgB,CAJhB,EAKGH,KALH,CAKS,EALT,EAMGC,OANH,GAOGC,IAPH,CAOQ,EAPR,CADkC;AAAA,CAApC;;AAUA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD;AAAA,SACrBA,KAAK,CACFC,KADH,CACS,EADT,EAEGC,OAFH,GAGGI,MAHH,CAGU,UAACC,CAAD,EAAIC,KAAJ;AAAA,WAAcA,KAAK,IAAI,CAAvB;AAAA,GAHV,EAIGN,OAJH,GAKGC,IALH,CAKQ,EALR,CADqB;AAAA,CAAvB;;AAQA,OAAO,IAAMM,oBAGgB,GAAG,SAHnBA,oBAGmB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAAA;;AACrD,SAAO;AACLC,IAAAA,KAAK,EAAE,CAAAD,QAAQ,QAAR,YAAAA,QAAQ,CAAEC,KAAV,KAAmBC,SADrB;AAELb,IAAAA,KAAK,EAAEW,QAAQ,QAAR,IAAAA,QAAQ,CAAEG,WAAV,GACHf,2BAA2B,CAACY,QAAQ,CAACG,WAAV,CADxB,GAEHD,SAJC;AAKLE,IAAAA,IAAI,EAAE,CAAAL,OAAO,QAAP,YAAAA,OAAO,CAAEK,IAAT,KAAiBF,SALlB;AAMLG,IAAAA,iBAAiB,EAAE,CAAAN,OAAO,QAAP,YAAAA,OAAO,CAAEO,aAAT,KAA0BJ,SANxC;AAOLK,IAAAA,WAAW,EAAEP,QAAQ,QAAR,IAAAA,QAAQ,CAAEG,WAAV,GACTT,cAAc,CAACM,QAAQ,CAACG,WAAV,CADL,GAETD,SATC;AAULM,IAAAA,eAAe,2BAAET,OAAF,oBAAEA,OAAO,CAAES,eAAT,CAAyBC,OAAzB,EAAF,oCAAwC;AAVlD,GAAP;AAYD,CAhBM;AAkBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAmB;AAC3C,MACEA,KAAK,CAACC,QAAN,CAAe,sBAAf,KACAD,KAAK,CAACC,QAAN,CAAe,sBAAf,CAFF,EAGE;AACA,WAAO,oCAAP;AACD,GALD,MAKO,IACLD,KAAK,CAACC,QAAN,CAAe,6BAAf,KACAD,KAAK,CAACC,QAAN,CAAe,gBAAf,CAFK,EAGL;AACA,WAAO,4CAAP;AACD,GALM,MAKA,IAAID,KAAK,CAACC,QAAN,CAAe,mBAAf,CAAJ,EAAyC;AAC9C,WAAO,wCAAP;AACD,GAFM,MAEA,IAAID,KAAK,CAACC,QAAN,CAAe,sBAAf,CAAJ,EAA4C;AACjD,WAAO,qCAAP;AACD,GAFM,MAEA;AACL,WAAO,2BAAP;AACD;AACF,CAlBM","sourcesContent":["import { getAccountDTO } from \"../../client-api/account\";\nimport { User } from \"firebase/auth\";\nimport { EditProfileForm } from \"./types\";\n\nconst getPhoneNumberWithoutPrefix = (phone: string) =>\n  phone\n    .split(\"\")\n    .reverse()\n    .join(\"\")\n    .substring(0, 9)\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n\nconst getPhonePrefix = (phone: string) =>\n  phone\n    .split(\"\")\n    .reverse()\n    .filter((_, index) => index >= 9)\n    .reverse()\n    .join(\"\");\n\nexport const getFormDefaultValues: (\n  account: getAccountDTO | null,\n  identity: User | null | undefined\n) => Partial<EditProfileForm> = (account, identity) => {\n  return {\n    email: identity?.email || undefined,\n    phone: identity?.phoneNumber\n      ? getPhoneNumberWithoutPrefix(identity.phoneNumber)\n      : undefined,\n    name: account?.name || undefined,\n    preferredLanguage: account?.preferredLang || undefined,\n    phonePrefix: identity?.phoneNumber\n      ? getPhonePrefix(identity.phoneNumber)\n      : undefined,\n    smsNotification: account?.smsNotification.valueOf() ?? true,\n  };\n};\n\nexport const parseError = (error: string) => {\n  if (\n    error.includes(\"email-already-exists\") ||\n    error.includes(\"email-already-in-use\")\n  ) {\n    return \"userRegistration.errors.emailExist\";\n  } else if (\n    error.includes(\"phone-number-already-exists\") ||\n    error.includes(\"account-exists\")\n  ) {\n    return \"userRegistration.errors.phoneLinkingFailed\";\n  } else if (error.includes(\"too-many-requests\")) {\n    return \"userRegistration.errors.tooManyRequest\";\n  } else if (error.includes(\"invalid-verification\")) {\n    return \"userRegistration.errors.invalidCode\";\n  } else {\n    return \"Oops something went wrong\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}