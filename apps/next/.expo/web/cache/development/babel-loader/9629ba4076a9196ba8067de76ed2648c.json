{"ast":null,"code":"export var handlerIDToTag = {};\nvar handlers = new Map();\nvar handlerTag = 1;\nexport function getNextHandlerTag() {\n  return handlerTag++;\n}\nexport function registerHandler(handlerTag, handler) {\n  handlers.set(handlerTag, handler);\n}\nexport function unregisterHandler(handlerTag) {\n  handlers.delete(handlerTag);\n}\nexport function findHandler(handlerTag) {\n  return handlers.get(handlerTag);\n}","map":{"version":3,"sources":["handlersRegistry.ts"],"names":["handlerIDToTag","handlers","handlerTag"],"mappings":"AAEA,OAAO,IAAMA,cAAsC,GAA5C,EAAA;AACP,IAAMC,QAAQ,GAAG,IAAjB,GAAiB,EAAjB;AAEA,IAAIC,UAAU,GAAd,CAAA;AAEA,OAAO,SAAA,iBAAA,GAAqC;AAC1C,SAAOA,UAAP,EAAA;AACD;AAED,OAAO,SAAA,eAAA,CAAA,UAAA,EAAA,OAAA,EAAmE;AACxED,EAAAA,QAAQ,CAARA,GAAAA,CAAAA,UAAAA,EAAAA,OAAAA;AACD;AAED,OAAO,SAAA,iBAAA,CAAA,UAAA,EAA+C;AACpDA,EAAAA,QAAQ,CAARA,MAAAA,CAAAA,UAAAA;AACD;AAED,OAAO,SAAA,WAAA,CAAA,UAAA,EAAyC;AAC9C,SAAOA,QAAQ,CAARA,GAAAA,CAAP,UAAOA,CAAP;AACD","sourcesContent":["import { GestureType } from './gestures/gesture';\n\nexport const handlerIDToTag: Record<string, number> = {};\nconst handlers = new Map<number, GestureType>();\n\nlet handlerTag = 1;\n\nexport function getNextHandlerTag(): number {\n  return handlerTag++;\n}\n\nexport function registerHandler(handlerTag: number, handler: GestureType) {\n  handlers.set(handlerTag, handler);\n}\n\nexport function unregisterHandler(handlerTag: number) {\n  handlers.delete(handlerTag);\n}\n\nexport function findHandler(handlerTag: number) {\n  return handlers.get(handlerTag);\n}\n"]},"metadata":{},"sourceType":"module"}