{"ast":null,"code":"import { useTranslation } from \"next-i18next\";\nimport React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useCanEditEmail } from \"../../../queries/useAccount\";\nimport { Input } from \"../../Forms\";\nimport { InputWrapper } from \"./style\";\n\nvar EmailPlaceholder = function EmailPlaceholder() {\n  var _useFormContext = useFormContext(),\n      watch = _useFormContext.watch;\n\n  var _useTranslation = useTranslation(\"common\"),\n      t = _useTranslation.t;\n\n  var value = watch(\"email\");\n  return React.createElement(InputWrapper, {\n    label: t(\"labels.email\")\n  }, React.createElement(Input, {\n    placeholder: t(\"labels.email\"),\n    styles: {\n      wrapper: {\n        margin: 0,\n        height: \"auto\"\n      }\n    },\n    value: value,\n    readonly: true\n  }));\n};\n\nexport default function EmailInput() {\n  var _useTranslation2 = useTranslation(\"common\"),\n      t = _useTranslation2.t;\n\n  var _useFormContext2 = useFormContext(),\n      control = _useFormContext2.control;\n\n  var canEditEmail = useCanEditEmail();\n\n  if (!canEditEmail) {\n    return React.createElement(EmailPlaceholder, null);\n  }\n\n  return React.createElement(Controller, {\n    control: control,\n    name: \"email\",\n    render: function render(_ref) {\n      var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          value = _ref$field.value;\n      return React.createElement(InputWrapper, {\n        label: t(\"labels.email\")\n      }, React.createElement(Input, {\n        placeholder: t(\"labels.email\"),\n        styles: {\n          wrapper: {\n            margin: 0,\n            height: \"auto\"\n          }\n        },\n        value: value,\n        onChange: onChange\n      }));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/EditUserProfileForm/Inputs/EmailInput.tsx"],"names":["useTranslation","React","Controller","useFormContext","useCanEditEmail","Input","InputWrapper","EmailPlaceholder","watch","t","value","wrapper","margin","height","EmailInput","control","canEditEmail","field","onChange"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,iBAA3C;AACA,SAASC,eAAT;AACA,SAASC,KAAT;AAEA,SAASC,YAAT;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,wBAAkBJ,cAAc,EAAhC;AAAA,MAAQK,KAAR,mBAAQA,KAAR;;AACA,wBAAcR,cAAc,CAAC,QAAD,CAA5B;AAAA,MAAQS,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,KAAK,GAAGF,KAAK,CAAC,OAAD,CAAnB;AACA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,CAAC,CAAC,cAAD;AAAtB,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAEA,CAAC,CAAC,cAAD,CADhB;AAEE,IAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,MAAM,EAAE;AAArB;AAAX,KAFV;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,QAAQ,EAAE;AAJZ,IADF,CADF;AAUD,CAfD;;AAiBA,eAAe,SAASI,UAAT,GAAsB;AACnC,yBAAcd,cAAc,CAAC,QAAD,CAA5B;AAAA,MAAQS,CAAR,oBAAQA,CAAR;;AACA,yBAAoBN,cAAc,EAAlC;AAAA,MAAQY,OAAR,oBAAQA,OAAR;;AACA,MAAMC,YAAY,GAAGZ,eAAe,EAApC;;AAEA,MAAI,CAACY,YAAL,EAAmB;AACjB,WAAO,oBAAC,gBAAD,OAAP;AACD;;AAED,SACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAE;AAAA,4BAAGE,KAAH;AAAA,UAAYC,QAAZ,cAAYA,QAAZ;AAAA,UAAsBR,KAAtB,cAAsBA,KAAtB;AAAA,aACN,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAED,CAAC,CAAC,cAAD;AAAtB,SACE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAEA,CAAC,CAAC,cAAD,CADhB;AAEE,QAAA,MAAM,EAAE;AAAEE,UAAAA,OAAO,EAAE;AAAEC,YAAAA,MAAM,EAAE,CAAV;AAAaC,YAAAA,MAAM,EAAE;AAArB;AAAX,SAFV;AAGE,QAAA,KAAK,EAAEH,KAHT;AAIE,QAAA,QAAQ,EAAEQ;AAJZ,QADF,CADM;AAAA;AAHV,IADF;AAgBD","sourcesContent":["import { useTranslation } from \"next-i18next\";\nimport React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useCanEditEmail } from \"../../../queries/useAccount\";\nimport { Input } from \"../../Forms\";\nimport { EditProfileForm } from \"../types\";\nimport { InputWrapper } from \"./style\";\n\nconst EmailPlaceholder = () => {\n  const { watch } = useFormContext<EditProfileForm>();\n  const { t } = useTranslation(\"common\");\n\n  const value = watch(\"email\");\n  return (\n    <InputWrapper label={t(\"labels.email\")}>\n      <Input\n        placeholder={t(\"labels.email\")}\n        styles={{ wrapper: { margin: 0, height: \"auto\" } }}\n        value={value}\n        readonly={true}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default function EmailInput() {\n  const { t } = useTranslation(\"common\");\n  const { control } = useFormContext<EditProfileForm>();\n  const canEditEmail = useCanEditEmail();\n\n  if (!canEditEmail) {\n    return <EmailPlaceholder />;\n  }\n\n  return (\n    <Controller\n      control={control}\n      name=\"email\"\n      render={({ field: { onChange, value } }) => (\n        <InputWrapper label={t(\"labels.email\")}>\n          <Input\n            placeholder={t(\"labels.email\")}\n            styles={{ wrapper: { margin: 0, height: \"auto\" } }}\n            value={value}\n            onChange={onChange}\n          />\n        </InputWrapper>\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}