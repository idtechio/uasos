{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../Divider\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var colors = theme.colors,\n      fonts = theme.fonts;\n  var titleColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();\n  var font = fonts.medium;\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(_reactNative.View, {\n    style: styles.titleContainer\n  }, React.createElement(_Text.default, {\n    numberOfLines: 1,\n    style: [_objectSpread({\n      color: titleColor\n    }, font), styles.title]\n  }, title)), children, React.createElement(_Divider.default, {\n    style: styles.divider\n  }));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  title: {\n    marginLeft: 16\n  },\n  divider: {\n    marginTop: 4\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerSection);\n\nexports.default = _default;","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","rest","fonts","titleColor","colors","font","styles","title","titleContainer","color","divider","container","marginBottom","height","justifyContent","marginLeft","marginTop"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAuD;AAAA,MAAtD,QAAsD,QAAtD,QAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAlBC,IAAkB;;AAC3E,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAgBC,KAAhB,GAAA,KAAA,CAAgBA,KAAhB;AACA,MAAMC,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,MAAM,CAAZ,IAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAnB,MAAmB,EAAnB;AACA,MAAMC,IAAI,GAAGH,KAAK,CAAlB,MAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,KAAK,EAAE,CAACI,MAAM,CAAP,SAAA,EAAA,KAAA;AAAb,GAAA,EAAA,IAAA,CAAA,EACGC,KAAK,IACJ,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA;AACE,IAAA,aAAa,EADf,CAAA;AAEE,IAAA,KAAK,EAAE;AAAGC,MAAAA,KAAK,EAAP;AAAD,OAAyBJ,IAAzB,GAAiCC,MAAM,CAAvC,KAAA;AAFT,GAAA,EAHN,KAGM,CADF,CAFJ,EAAA,QAAA,EAYE,KAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA;AAAS,IAAA,KAAK,EAAEA,MAAM,CAACI;AAAvB,GAAA,CAZF,CADF;AALF,CAAA;;AAuBAV,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;;AAEA,IAAMM,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/BJ,EAAAA,cAAc,EAAE;AACdK,IAAAA,MAAM,EADQ,EAAA;AAEdC,IAAAA,cAAc,EAAE;AAFF,GAJe;AAQ/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,UAAU,EAAE;AADP,GARwB;AAW/BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,SAAS,EAAE;AADJ;AAXsB,CAAlB,CAAf;;eAgBe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,aAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={[{ color: titleColor, ...font }, styles.title]}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  title: {\n    marginLeft: 16,\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}