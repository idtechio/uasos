{"ast":null,"code":"import React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport FormDropdown from \"./FormDropdown\";\nimport CITY_LIST_CZ from \"../../consts/cities/cz.json\";\nimport CITY_LIST_HU from \"../../consts/cities/hu.json\";\nimport CITY_LIST_PL from \"../../consts/cities/pl.json\";\nimport CITY_LIST_SK from \"../../consts/cities/sk.json\";\nimport CITY_LIST_RO from \"../../consts/cities/ro.json\";\n\nvar FormTextInput = function FormTextInput(props) {\n  var name = props.name,\n      label = props.label,\n      country = props.country,\n      errorMsg = props.errorMsg,\n      rules = props.rules,\n      error = props.error,\n      zIndex = props.zIndex,\n      placeholder = props.placeholder,\n      multiSelect = props.multiSelect;\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control;\n\n  var cityList = [];\n\n  switch (country) {\n    case \"czechia\":\n      cityList = CITY_LIST_CZ;\n      break;\n\n    case \"hungary\":\n      cityList = CITY_LIST_HU;\n      break;\n\n    case \"poland\":\n      cityList = CITY_LIST_PL;\n      break;\n\n    case \"slovakia\":\n      cityList = CITY_LIST_SK;\n      break;\n\n    case \"romania\":\n      cityList = CITY_LIST_RO;\n      break;\n  }\n\n  return React.createElement(Controller, {\n    control: control,\n    rules: rules,\n    render: function render() {\n      return React.createElement(FormDropdown, {\n        name: name,\n        rules: rules,\n        error: error,\n        label: label,\n        zIndex: zIndex,\n        data: cityList,\n        errorMsg: errorMsg,\n        placeholder: placeholder,\n        multiSelect: multiSelect\n      });\n    },\n    name: name\n  });\n};\n\nexport default FormTextInput;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Inputs/FormCityDropdown.tsx"],"names":["React","Controller","useFormContext","FormDropdown","CITY_LIST_CZ","CITY_LIST_HU","CITY_LIST_PL","CITY_LIST_SK","CITY_LIST_RO","FormTextInput","props","name","label","country","errorMsg","rules","error","zIndex","placeholder","multiSelect","control","cityList"],"mappings":"AAAA,OAAOA,KAAP,MAA2B,OAA3B;AACA,SAASC,UAAT,EAAiCC,cAAjC,QAAuD,iBAAvD;AAGA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;;AAcA,IAAMC,aAAyB,GAAG,SAA5BA,aAA4B,CAACC,KAAD,EAAW;AAC3C,MACEC,IADF,GAUID,KAVJ,CACEC,IADF;AAAA,MAEEC,KAFF,GAUIF,KAVJ,CAEEE,KAFF;AAAA,MAGEC,OAHF,GAUIH,KAVJ,CAGEG,OAHF;AAAA,MAIEC,QAJF,GAUIJ,KAVJ,CAIEI,QAJF;AAAA,MAKEC,KALF,GAUIL,KAVJ,CAKEK,KALF;AAAA,MAMEC,KANF,GAUIN,KAVJ,CAMEM,KANF;AAAA,MAOEC,MAPF,GAUIP,KAVJ,CAOEO,MAPF;AAAA,MAQEC,WARF,GAUIR,KAVJ,CAQEQ,WARF;AAAA,MASEC,WATF,GAUIT,KAVJ,CASES,WATF;;AAWA,wBAAoBjB,cAAc,EAAlC;AAAA,MAAQkB,OAAR,mBAAQA,OAAR;;AACA,MAAIC,QAA6C,GAAG,EAApD;;AAEA,UAAQR,OAAR;AACE,SAAK,SAAL;AACEQ,MAAAA,QAAQ,GAAGjB,YAAX;AACA;;AACF,SAAK,SAAL;AACEiB,MAAAA,QAAQ,GAAGhB,YAAX;AACA;;AACF,SAAK,QAAL;AACEgB,MAAAA,QAAQ,GAAGf,YAAX;AACA;;AACF,SAAK,UAAL;AACEe,MAAAA,QAAQ,GAAGd,YAAX;AACA;;AACF,SAAK,SAAL;AACEc,MAAAA,QAAQ,GAAGb,YAAX;AACA;AAfJ;;AAkBA,SACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEY,OADX;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,MAAM,EAAE;AAAA,aACN,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,KAAK,EAAEJ,KAJT;AAKE,QAAA,MAAM,EAAEK,MALV;AAME,QAAA,IAAI,EAAEI,QANR;AAOE,QAAA,QAAQ,EAAEP,QAPZ;AAQE,QAAA,WAAW,EAAEI,WARf;AASE,QAAA,WAAW,EAAEC;AATf,QADM;AAAA,KAHV;AAgBE,IAAA,IAAI,EAAER;AAhBR,IADF;AAoBD,CArDD;;AAsDA,eAAeF,aAAf","sourcesContent":["import React, { VFC } from \"react\";\nimport { Controller, FieldError, useFormContext } from \"react-hook-form\";\n\nimport { FormKey } from \"../../helpers/FormTypes\";\nimport FormDropdown from \"./FormDropdown\";\nimport CITY_LIST_CZ from \"../../consts/cities/cz.json\";\nimport CITY_LIST_HU from \"../../consts/cities/hu.json\";\nimport CITY_LIST_PL from \"../../consts/cities/pl.json\";\nimport CITY_LIST_SK from \"../../consts/cities/sk.json\";\nimport CITY_LIST_RO from \"../../consts/cities/ro.json\";\n\ntype Props = {\n  name: FormKey;\n  country: string;\n  label?: string;\n  zIndex?: number;\n  placeholder?: string;\n  error?: FieldError;\n  multiSelect?: boolean;\n  errorMsg?: string;\n  onChange?: (selected: string | string[]) => void;\n} & Pick<React.ComponentProps<typeof Controller>, \"rules\">;\n\nconst FormTextInput: VFC<Props> = (props) => {\n  const {\n    name,\n    label,\n    country,\n    errorMsg,\n    rules,\n    error,\n    zIndex,\n    placeholder,\n    multiSelect,\n  } = props;\n  const { control } = useFormContext();\n  let cityList: { label: string; value: unknown }[] = [];\n\n  switch (country) {\n    case \"czechia\":\n      cityList = CITY_LIST_CZ;\n      break;\n    case \"hungary\":\n      cityList = CITY_LIST_HU;\n      break;\n    case \"poland\":\n      cityList = CITY_LIST_PL;\n      break;\n    case \"slovakia\":\n      cityList = CITY_LIST_SK;\n      break;\n    case \"romania\":\n      cityList = CITY_LIST_RO;\n      break;\n  }\n\n  return (\n    <Controller\n      control={control}\n      rules={rules}\n      render={() => (\n        <FormDropdown\n          name={name}\n          rules={rules}\n          error={error}\n          label={label}\n          zIndex={zIndex}\n          data={cityList}\n          errorMsg={errorMsg}\n          placeholder={placeholder}\n          multiSelect={multiSelect}\n        />\n      )}\n      name={name}\n    />\n  );\n};\nexport default FormTextInput;\n"]},"metadata":{},"sourceType":"module"}