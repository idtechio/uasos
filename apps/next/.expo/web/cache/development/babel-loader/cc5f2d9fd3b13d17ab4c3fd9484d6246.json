{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NextResponse } from \"next/server\";\nexport function middleware(req) {\n  var res;\n  return _regeneratorRuntime.async(function middleware$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = NextResponse.next();\n          console.log(\"middleware start\");\n\n          if (!(process.env.ENV_NAME === \"test\")) {\n            _context.next = 10;\n            break;\n          }\n\n          res.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n          res.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n          res.headers.set(\"Access-Control-Allow-Headers\", \"*\");\n          res.headers.set(\"Access-Control-Allow-Methods\", \"GET,OPTIONS,PATCH,DELETE,POST,PUT\");\n\n          if (!(req.method === \"OPTIONS\")) {\n            _context.next = 9;\n            break;\n          }\n\n          return _context.abrupt(\"return\", new Response(\"ok\", {\n            status: 200,\n            headers: {\n              \"Access-Control-Allow-Credentials\": \"true\",\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Access-Control-Allow-Headers\": \"*\",\n              \"Access-Control-Allow-Methods\": \"GET,OPTIONS,PATCH,DELETE,POST,PUT\"\n            }\n          }));\n\n        case 9:\n          console.log(\"middleware header added\");\n\n        case 10:\n          return _context.abrupt(\"return\", res);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/pages/api/_middleware.ts"],"names":["NextResponse","middleware","req","res","next","console","log","process","env","ENV_NAME","headers","set","method","Response","status"],"mappings":";AACA,SAASA,YAAT,QAA6B,aAA7B;AAEA,OAAO,SAAeC,UAAf,CAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,UAAAA,GADD,GACOH,YAAY,CAACI,IAAb,EADP;AAILC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AAJK,gBAMDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MANxB;AAAA;AAAA;AAAA;;AAOHN,UAAAA,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,kCAAhB,EAAoD,MAApD;AACAR,UAAAA,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,6BAAhB,EAA+C,GAA/C;AACAR,UAAAA,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,8BAAhB,EAAgD,GAAhD;AACAR,UAAAA,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CACE,8BADF,EAEE,mCAFF;;AAVG,gBAeCT,GAAG,CAACU,MAAJ,KAAe,SAfhB;AAAA;AAAA;AAAA;;AAAA,2CAgBM,IAAIC,QAAJ,CAAa,IAAb,EAAmB;AACxBC,YAAAA,MAAM,EAAE,GADgB;AAExBJ,YAAAA,OAAO,EAAE;AACP,kDAAoC,MAD7B;AAEP,6CAA+B,GAFxB;AAGP,8CAAgC,GAHzB;AAIP,8CAAgC;AAJzB;AAFe,WAAnB,CAhBN;;AAAA;AA4BHL,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AA5BG;AAAA,2CA8BEH,GA9BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import type { NextRequest } from \"next/server\";\nimport { NextResponse } from \"next/server\";\n\nexport async function middleware(req: NextRequest) {\n  const res = NextResponse.next();\n\n  // eslint-disable-next-line no-console\n  console.log(\"middleware start\");\n\n  if (process.env.ENV_NAME === \"test\") {\n    res.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n    res.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    res.headers.set(\"Access-Control-Allow-Headers\", \"*\");\n    res.headers.set(\n      \"Access-Control-Allow-Methods\",\n      \"GET,OPTIONS,PATCH,DELETE,POST,PUT\"\n    );\n\n    if (req.method === \"OPTIONS\") {\n      return new Response(\"ok\", {\n        status: 200,\n        headers: {\n          \"Access-Control-Allow-Credentials\": \"true\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Headers\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET,OPTIONS,PATCH,DELETE,POST,PUT\",\n        },\n      });\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(\"middleware header added\");\n  }\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}