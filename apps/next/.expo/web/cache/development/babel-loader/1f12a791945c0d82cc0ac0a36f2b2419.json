{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PixelRatio = function () {\n  function PixelRatio() {}\n\n  PixelRatio.get = function get() {\n    return _Dimensions.default.get('window').scale;\n  };\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  };\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexports.default = PixelRatio;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/node_modules/react-native-web/dist/cjs/exports/PixelRatio/index.js"],"names":["exports","__esModule","default","_Dimensions","_interopRequireDefault","require","obj","PixelRatio","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACC,OAAO,iBAAR,CAAxC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAe/F,IAAIC,UAAU,GAAgB,YAAY;AACxC,WAASA,UAAT,GAAsB,CAAE;;AAKxBA,EAAAA,UAAU,CAACC,GAAX,GAAiB,SAASA,GAAT,GAAe;AAC9B,WAAOL,WAAW,CAACD,OAAZ,CAAoBM,GAApB,CAAwB,QAAxB,EAAkCC,KAAzC;AACD,GAFD;;AAQAF,EAAAA,UAAU,CAACG,YAAX,GAA0B,SAASA,YAAT,GAAwB;AAChD,WAAOP,WAAW,CAACD,OAAZ,CAAoBM,GAApB,CAAwB,QAAxB,EAAkCG,SAAlC,IAA+CJ,UAAU,CAACC,GAAX,EAAtD;AACD,GAFD;;AASAD,EAAAA,UAAU,CAACK,yBAAX,GAAuC,SAASA,yBAAT,CAAmCC,UAAnC,EAA+C;AACpF,WAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGN,UAAU,CAACC,GAAX,EAAxB,CAAP;AACD,GAFD;;AAWAD,EAAAA,UAAU,CAACS,mBAAX,GAAiC,SAASA,mBAAT,CAA6BH,UAA7B,EAAyC;AACxE,QAAII,KAAK,GAAGV,UAAU,CAACC,GAAX,EAAZ;AACA,WAAOM,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGI,KAAxB,IAAiCA,KAAxC;AACD,GAHD;;AAKA,SAAOV,UAAP;AACD,CAxC6B,EAA9B;;AA0CAP,OAAO,CAACE,OAAR,GAAkBK,UAAlB;AACAW,MAAM,CAAClB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\nvar PixelRatio = /*#__PURE__*/function () {\n  function PixelRatio() {}\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return _Dimensions.default.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n  ;\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n  ;\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n  ;\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexports.default = PixelRatio;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}