{"ast":null,"code":"import { Wrapper, StyledHeader, StyledText, StyledTextButton } from \"./style\";\nimport { ButtonCta } from \"../Buttons\";\nimport CardModal from \"../CardModal\";\nimport Image from \"next/image\";\nimport SmsSent from \"../../../public/assets/PasswordReset.png\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTranslation } from \"next-i18next\";\nexport default function EmailVerificationModal(_ref) {\n  var restartTimer = _ref.restartTimer,\n      onClose = _ref.onClose,\n      seconds = _ref.seconds,\n      error = _ref.error;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return React.createElement(CardModal, {\n    closeable: false\n  }, React.createElement(Wrapper, null, React.createElement(Image, {\n    src: SmsSent,\n    alt: \"\"\n  }), React.createElement(StyledHeader, null, t(\"others:common.email.verification\")), React.createElement(StyledText, null, t(\"others:common.email.sentInfo\")), React.createElement(ButtonCta, {\n    onPress: function onPress() {\n      return onClose();\n    },\n    anchor: t(\"others:common.buttons.close\"),\n    style: {\n      width: \"100px\",\n      marginTop: \"30px\"\n    }\n  }), React.createElement(TouchableOpacity, {\n    disabled: error || seconds !== 0,\n    onPress: restartTimer\n  }, React.createElement(StyledTextButton, {\n    disabled: error || seconds !== 0\n  }, t(\"others:common.links.re-sendCode\"))), React.createElement(StyledText, {\n    disabled: error || seconds !== 0,\n    border: true\n  }, error ? t(\"others:common.email.errorTooManyRequestsInSeconds\", {\n    number: seconds\n  }) : seconds !== 0 ? t(\"others:common.email.errorTryAgainInSeconds\", {\n    number: seconds\n  }) : t(\"others:common.email.errorTryAgain\"))));\n}","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/EmailVerificationModal/index.tsx"],"names":["Wrapper","StyledHeader","StyledText","StyledTextButton","ButtonCta","CardModal","Image","SmsSent","useTranslation","EmailVerificationModal","restartTimer","onClose","seconds","error","t","width","marginTop","number"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,UAAhC,EAA4CC,gBAA5C;AACA,SAASC,SAAT;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP;;AAEA,SAASC,cAAT,QAA+B,cAA/B;AAQA,eAAe,SAASC,sBAAT,OAKL;AAAA,MAJRC,YAIQ,QAJRA,YAIQ;AAAA,MAHRC,OAGQ,QAHRA,OAGQ;AAAA,MAFRC,OAEQ,QAFRA,OAEQ;AAAA,MADRC,KACQ,QADRA,KACQ;;AACR,wBAAcL,cAAc,EAA5B;AAAA,MAAQM,CAAR,mBAAQA,CAAR;;AACA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE;AAAtB,KACE,oBAAC,OAAD,QACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEP,OAAZ;AAAqB,IAAA,GAAG,EAAC;AAAzB,IADF,EAEE,oBAAC,YAAD,QAAeO,CAAC,CAAC,kCAAD,CAAhB,CAFF,EAGE,oBAAC,UAAD,QAAaA,CAAC,CAAC,8BAAD,CAAd,CAHF,EAIE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMH,OAAO,EAAb;AAAA,KADX;AAEE,IAAA,MAAM,EAAEG,CAAC,CAAC,6BAAD,CAFX;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,SAAS,EAAE;AAA7B;AAHT,IAJF,EASE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAEH,KAAK,IAAID,OAAO,KAAK,CADjC;AAEE,IAAA,OAAO,EAAEF;AAFX,KAIE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEG,KAAK,IAAID,OAAO,KAAK;AAAjD,KACGE,CAAC,CAAC,iCAAD,CADJ,CAJF,CATF,EAiBE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAED,KAAK,IAAID,OAAO,KAAK,CAA3C;AAA8C,IAAA,MAAM,EAAE;AAAtD,KACGC,KAAK,GACFC,CAAC,CAAC,mDAAD,EAAsD;AACrDG,IAAAA,MAAM,EAAEL;AAD6C,GAAtD,CADC,GAIFA,OAAO,KAAK,CAAZ,GACAE,CAAC,CAAC,4CAAD,EAA+C;AAC9CG,IAAAA,MAAM,EAAEL;AADsC,GAA/C,CADD,GAIAE,CAAC,CAAC,mCAAD,CATP,CAjBF,CADF,CADF;AAiCD","sourcesContent":["import { Wrapper, StyledHeader, StyledText, StyledTextButton } from \"./style\";\nimport { ButtonCta } from \"../Buttons\";\nimport CardModal from \"../CardModal\";\nimport Image from \"next/image\";\nimport SmsSent from \"../../../public/assets/PasswordReset.png\";\nimport { TouchableOpacity } from \"react-native\";\nimport { useTranslation } from \"next-i18next\";\n\ninterface Props {\n  restartTimer: () => void;\n  onClose: () => void;\n  seconds: number;\n  error: boolean;\n}\nexport default function EmailVerificationModal({\n  restartTimer,\n  onClose,\n  seconds,\n  error,\n}: Props) {\n  const { t } = useTranslation();\n  return (\n    <CardModal closeable={false}>\n      <Wrapper>\n        <Image src={SmsSent} alt=\"\"></Image>\n        <StyledHeader>{t(\"others:common.email.verification\")}</StyledHeader>\n        <StyledText>{t(\"others:common.email.sentInfo\")}</StyledText>\n        <ButtonCta\n          onPress={() => onClose()}\n          anchor={t(\"others:common.buttons.close\")}\n          style={{ width: \"100px\", marginTop: \"30px\" }}\n        />\n        <TouchableOpacity\n          disabled={error || seconds !== 0}\n          onPress={restartTimer}\n        >\n          <StyledTextButton disabled={error || seconds !== 0}>\n            {t(\"others:common.links.re-sendCode\")}\n          </StyledTextButton>\n        </TouchableOpacity>\n        <StyledText disabled={error || seconds !== 0} border={true}>\n          {error\n            ? t(\"others:common.email.errorTooManyRequestsInSeconds\", {\n                number: seconds,\n              })\n            : seconds !== 0\n            ? t(\"others:common.email.errorTryAgainInSeconds\", {\n                number: seconds,\n              })\n            : t(\"others:common.email.errorTryAgain\")}\n        </StyledText>\n      </Wrapper>\n    </CardModal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}