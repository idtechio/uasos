{"ast":null,"code":"import React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Dropdown } from \"../../Dropdown\";\nimport InputControl from \"../InputControl\";\nimport { getDefaultCountryList } from \"./defaultLists\";\nimport { ErrorMessage } from \"./style\";\n\nvar useCountriesList = function useCountriesList(data) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var result = useMemo(function () {\n    return data || getDefaultCountryList(t);\n  }, [t, data]);\n  return result;\n};\n\nvar CountrySelect = function CountrySelect(props) {\n  var label = props.label,\n      errorMsg = props.errorMsg,\n      error = props.error,\n      placeholder = props.placeholder,\n      multiSelect = props.multiSelect,\n      data = props.data,\n      onChange = props.onChange,\n      value = props.value;\n  var dropdownData = useCountriesList(data);\n  return React.createElement(InputControl, {\n    styles: {\n      wrapper: {\n        width: \"100%\",\n        maxWidth: \"initial\",\n        marginBottom: 0\n      }\n    }\n  }, React.createElement(Dropdown, {\n    selected: value,\n    itemPressFunction: onChange,\n    data: dropdownData,\n    placeholder: placeholder,\n    error: error,\n    label: label,\n    multiselect: multiSelect\n  }), error && React.createElement(ErrorMessage, null, errorMsg));\n};\n\nexport default CountrySelect;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Forms/CountrySelect/index.tsx"],"names":["React","useMemo","useTranslation","Dropdown","InputControl","getDefaultCountryList","ErrorMessage","useCountriesList","data","t","result","CountrySelect","props","label","errorMsg","error","placeholder","multiSelect","onChange","value","dropdownData","wrapper","width","maxWidth","marginBottom"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT;AACA,OAAOC,YAAP;AACA,SAASC,qBAAT;AACA,SAASC,YAAT;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAsC;AAC7D,wBAAcN,cAAc,EAA5B;AAAA,MAAQO,CAAR,mBAAQA,CAAR;;AACA,MAAMC,MAAM,GAAGT,OAAO,CAAC;AAAA,WAAMO,IAAI,IAAIH,qBAAqB,CAACI,CAAD,CAAnC;AAAA,GAAD,EAAyC,CAACA,CAAD,EAAID,IAAJ,CAAzC,CAAtB;AAEA,SAAOE,MAAP;AACD,CALD;;AAOA,IAAMC,aAAsC,GAAG,SAAzCA,aAAyC,CAACC,KAAD,EAAW;AACxD,MACEC,KADF,GASID,KATJ,CACEC,KADF;AAAA,MAEEC,QAFF,GASIF,KATJ,CAEEE,QAFF;AAAA,MAGEC,KAHF,GASIH,KATJ,CAGEG,KAHF;AAAA,MAIEC,WAJF,GASIJ,KATJ,CAIEI,WAJF;AAAA,MAKEC,WALF,GASIL,KATJ,CAKEK,WALF;AAAA,MAMET,IANF,GASII,KATJ,CAMEJ,IANF;AAAA,MAOEU,QAPF,GASIN,KATJ,CAOEM,QAPF;AAAA,MAQEC,KARF,GASIP,KATJ,CAQEO,KARF;AAUA,MAAMC,YAAY,GAAGb,gBAAgB,CAACC,IAAD,CAArC;AAEA,SACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAE;AACNa,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,MADA;AAEPC,QAAAA,QAAQ,EAAE,SAFH;AAGPC,QAAAA,YAAY,EAAE;AAHP;AADH;AADV,KASE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEL,KADZ;AAEE,IAAA,iBAAiB,EAAED,QAFrB;AAGE,IAAA,IAAI,EAAEE,YAHR;AAIE,IAAA,WAAW,EAAEJ,WAJf;AAKE,IAAA,KAAK,EAAED,KALT;AAME,IAAA,KAAK,EAAEF,KANT;AAOE,IAAA,WAAW,EAAEI;AAPf,IATF,EAkBGF,KAAK,IAAI,oBAAC,YAAD,QAAeD,QAAf,CAlBZ,CADF;AAsBD,CAnCD;;AAoCA,eAAeH,aAAf","sourcesContent":["import React, { useMemo, VFC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Dropdown } from \"../../Dropdown\";\nimport InputControl from \"../InputControl\";\nimport { getDefaultCountryList } from \"./defaultLists\";\nimport { ErrorMessage } from \"./style\";\nimport { CountryDropdownItemType, CountrySelectProps } from \"./types\";\n\nconst useCountriesList = (data?: CountryDropdownItemType[]) => {\n  const { t } = useTranslation();\n  const result = useMemo(() => data || getDefaultCountryList(t), [t, data]);\n\n  return result;\n};\n\nconst CountrySelect: VFC<CountrySelectProps> = (props) => {\n  const {\n    label,\n    errorMsg,\n    error,\n    placeholder,\n    multiSelect,\n    data,\n    onChange,\n    value,\n  } = props;\n  const dropdownData = useCountriesList(data);\n\n  return (\n    <InputControl\n      styles={{\n        wrapper: {\n          width: \"100%\",\n          maxWidth: \"initial\",\n          marginBottom: 0,\n        },\n      }}\n    >\n      <Dropdown\n        selected={value}\n        itemPressFunction={onChange}\n        data={dropdownData}\n        placeholder={placeholder}\n        error={error}\n        label={label}\n        multiselect={multiSelect}\n      />\n      {error && <ErrorMessage>{errorMsg}</ErrorMessage>}\n    </InputControl>\n  );\n};\nexport default CountrySelect;\n"]},"metadata":{},"sourceType":"module"}