{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport styled from \"styled-components/native\";\nexport var Button = styled.Pressable(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tbackground-color: \", \";\\n\\n  border: \", \"\\n\\tborder-radius: 50px;\\n\\tpadding: 12px 23px;\\n\\ttext-align: center;\\n\\tdisplay: inline-block;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\n\\t&:hover {\\n\\t\\topacity: 0.7\\n\\t}\\n\"])), function (_ref) {\n  var theme = _ref.theme,\n      colorOpposite = _ref.colorOpposite,\n      variant = _ref.variant;\n  return variant === \"outlined\" ? \"transparent\" : colorOpposite ? theme.colors.textOnCta : theme.colors.cta;\n}, function (_ref2) {\n  var variant = _ref2.variant,\n      theme = _ref2.theme;\n  return variant === \"contained\" ? \"2px solid transparent\" : \"2px solid \" + theme.colors.secondaryBlue;\n});\nexport var Text = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-weight: 700;\\n  text-align: center;\\n  color: \", \";\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n\"])), function (_ref3) {\n  var theme = _ref3.theme,\n      colorOpposite = _ref3.colorOpposite,\n      variant = _ref3.variant;\n  return variant === \"outlined\" ? theme.colors.secondaryBlue : colorOpposite ? theme.colors.cta : theme.colors.textOnCta;\n});","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/EditOfferOptions/ButtonCta/style.tsx"],"names":["styled","Button","Pressable","theme","colorOpposite","variant","colors","textOnCta","cta","secondaryBlue","Text"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AASA,OAAO,IAAMC,MAAM,GAAGD,MAAM,CAACE,SAAV,oTACE;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,aAAV,QAAUA,aAAV;AAAA,MAAyBC,OAAzB,QAAyBA,OAAzB;AAAA,SACjBA,OAAO,KAAK,UAAZ,GACI,aADJ,GAEID,aAAa,GACbD,KAAK,CAACG,MAAN,CAAaC,SADA,GAEbJ,KAAK,CAACG,MAAN,CAAaE,GALA;AAAA,CADF,EAQP;AAAA,MAAGH,OAAH,SAAGA,OAAH;AAAA,MAAYF,KAAZ,SAAYA,KAAZ;AAAA,SACRE,OAAO,KAAK,WAAZ,GACI,uBADJ,kBAEiBF,KAAK,CAACG,MAAN,CAAaG,aAHtB;AAAA,CARO,CAAZ;AA6BP,OAAO,IAAMC,IAAI,GAAGV,MAAM,CAACU,IAAV,yMAGN;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,MAAUC,aAAV,SAAUA,aAAV;AAAA,MAAyBC,OAAzB,SAAyBA,OAAzB;AAAA,SACPA,OAAO,KAAK,UAAZ,GACIF,KAAK,CAACG,MAAN,CAAaG,aADjB,GAEIL,aAAa,GACbD,KAAK,CAACG,MAAN,CAAaE,GADA,GAEbL,KAAK,CAACG,MAAN,CAAaC,SALV;AAAA,CAHM,CAAV","sourcesContent":["import styled from \"styled-components/native\";\nimport { Theme } from \"../../../style/theme.config\";\nimport type { ButtonVariant } from \"./types\";\n\ntype ButtonProps = {\n  colorOpposite?: boolean;\n  theme: Theme;\n  variant: \"contained\" | \"outlined\";\n};\nexport const Button = styled.Pressable<ButtonProps>`\n\tbackground-color: ${({ theme, colorOpposite, variant }) =>\n    variant === \"outlined\"\n      ? \"transparent\"\n      : colorOpposite\n      ? theme.colors.textOnCta\n      : theme.colors.cta};\n\n  border: ${({ variant, theme }) =>\n    variant === \"contained\"\n      ? \"2px solid transparent\"\n      : `2px solid ${theme.colors.secondaryBlue}`}\n\tborder-radius: 50px;\n\tpadding: 12px 23px;\n\ttext-align: center;\n\tdisplay: inline-block;\n\tjustify-content: center;\n\talign-items: center;\n\n\t&:hover {\n\t\topacity: 0.7\n\t}\n`;\n\ntype TextProps = {\n  colorOpposite?: boolean;\n  theme: Theme;\n  variant: ButtonVariant;\n};\nexport const Text = styled.Text<TextProps>`\n  font-weight: 700;\n  text-align: center;\n  color: ${({ theme, colorOpposite, variant }) =>\n    variant === \"outlined\"\n      ? theme.colors.secondaryBlue\n      : colorOpposite\n      ? theme.colors.cta\n      : theme.colors.textOnCta};\n  width: 100%;\n  justify-content: center;\n  display: flex;\n`;\n"]},"metadata":{},"sourceType":"module"}