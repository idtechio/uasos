{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"text\", \"icon\", \"isSmall\", \"isSelected\", \"onPress\", \"isVertical\", \"error\"];\nimport { Button, Text, Icon } from \"./style\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar ChoiceButton = function ChoiceButton(_ref) {\n  var text = _ref.text,\n      icon = _ref.icon,\n      _ref$isSmall = _ref.isSmall,\n      isSmall = _ref$isSmall === void 0 ? false : _ref$isSmall,\n      isSelected = _ref.isSelected,\n      onPress = _ref.onPress,\n      _ref$isVertical = _ref.isVertical,\n      isVertical = _ref$isVertical === void 0 ? false : _ref$isVertical,\n      error = _ref.error,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, React.createElement(Button, _extends({\n    error: error,\n    isSelected: isSelected,\n    isSmall: isSmall,\n    isVertical: isVertical\n  }, props), icon ? React.createElement(Icon, {\n    isSelected: isSelected,\n    isVertical: isVertical\n  }, icon) : null, text ? React.createElement(Text, {\n    isVertical: isVertical,\n    isSelected: isSelected,\n    isSmall: isSmall\n  }, text) : null));\n};\n\nexport default ChoiceButton;","map":{"version":3,"sources":["/Users/stanislav.kovalov/Desktop/uasos/apps/next/src/components/Forms/ChoiceButton/index.tsx"],"names":["Button","Text","Icon","ChoiceButton","text","icon","isSmall","isSelected","onPress","isVertical","error","props"],"mappings":";;;AACA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OASI;AAAA,MARvBC,IAQuB,QARvBA,IAQuB;AAAA,MAPvBC,IAOuB,QAPvBA,IAOuB;AAAA,0BANvBC,OAMuB;AAAA,MANvBA,OAMuB,6BANb,KAMa;AAAA,MALvBC,UAKuB,QALvBA,UAKuB;AAAA,MAJvBC,OAIuB,QAJvBA,OAIuB;AAAA,6BAHvBC,UAGuB;AAAA,MAHvBA,UAGuB,gCAHV,KAGU;AAAA,MAFvBC,KAEuB,QAFvBA,KAEuB;AAAA,MADpBC,KACoB;;AACvB,SACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEH;AAA3B,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,UAAU,EAAEH,UAFd;AAGE,IAAA,OAAO,EAAED,OAHX;AAIE,IAAA,UAAU,EAAEG;AAJd,KAKME,KALN,GAOGN,IAAI,GACH,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEE,UAAlB;AAA8B,IAAA,UAAU,EAAEE;AAA1C,KACGJ,IADH,CADG,GAID,IAXN,EAYGD,IAAI,GACH,oBAAC,IAAD;AACE,IAAA,UAAU,EAAEK,UADd;AAEE,IAAA,UAAU,EAAEF,UAFd;AAGE,IAAA,OAAO,EAAED;AAHX,KAKGF,IALH,CADG,GAQD,IApBN,CADF,CADF;AA0BD,CApCD;;AAsCA,eAAeD,YAAf","sourcesContent":["import type { ChoiceButtonProps } from \"./type\";\nimport { Button, Text, Icon } from \"./style\";\nimport { TouchableOpacity } from \"react-native\";\n\nconst ChoiceButton = ({\n  text,\n  icon,\n  isSmall = false,\n  isSelected,\n  onPress,\n  isVertical = false,\n  error,\n  ...props\n}: ChoiceButtonProps) => {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Button\n        error={error}\n        isSelected={isSelected}\n        isSmall={isSmall}\n        isVertical={isVertical}\n        {...props}\n      >\n        {icon ? (\n          <Icon isSelected={isSelected} isVertical={isVertical}>\n            {icon}\n          </Icon>\n        ) : null}\n        {text ? (\n          <Text\n            isVertical={isVertical}\n            isSelected={isSelected}\n            isSmall={isSmall}\n          >\n            {text}\n          </Text>\n        ) : null}\n      </Button>\n    </TouchableOpacity>\n  );\n};\n\nexport default ChoiceButton;\n"]},"metadata":{},"sourceType":"module"}