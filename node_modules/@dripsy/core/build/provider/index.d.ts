import React from 'react';
import { DripsyThemeContext } from './context';
declare type Props = DripsyThemeContext & {
    children: React.ReactNode;
} & ({
    /**
     * Set this boolean to `true` if you are using SSR on your app.
     *
     * Keep in mind, Dripsy doesn't support SSR anymore.
     *
     * Enabling this boolean just renders `null` until your app has mounted on web.
     *
     * Set this to `true` if you aren't gating your content already, and if you use responsive arrays in your app.
     */
    ssr?: false;
    ssrPlaceholder?: never;
} | {
    /**
     * Set this boolean to `true` if you are using SSR on your app.
     *
     * Keep in mind, Dripsy doesn't support SSR anymore.
     *
     * Enabling this boolean just renders `null` until your app has mounted on web.
     *
     * Set this to `true` if you aren't gating your content already, and if you use responsive arrays in your app.
     */
    ssr: true;
    /**
     * When `ssr` is true, your app will return null on the first mount by default.
     *
     * You can use the ssrPlaceholder if you'd prefer.
     *
     * ```tsx
     * <DripsyProvider ssr ssrPlaceholder={<LoadingScreen />}>{children}</DripsyProvider>
     * ```
     */
    ssrPlaceholder?: React.ReactNode;
});
export declare function DripsyProvider(p: Props): JSX.Element;
/**
 * @deprecated use DripsyProvider instead
 */
export declare function ThemeProvider(): void;
export {};
