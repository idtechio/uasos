export declare const aliases: {
    readonly bg: "backgroundColor";
    readonly m: "margin";
    readonly mt: "marginTop";
    readonly mr: "marginRight";
    readonly mb: "marginBottom";
    readonly ml: "marginLeft";
    readonly mx: "marginHorizontal";
    readonly my: "marginVertical";
    readonly p: "padding";
    readonly pt: "paddingTop";
    readonly pr: "paddingRight";
    readonly pb: "paddingBottom";
    readonly pl: "paddingLeft";
    readonly px: "paddingHorizontal";
    readonly py: "paddingVertical";
    readonly marginX: "marginHorizontal";
    readonly marginY: "marginVertical";
    readonly paddingX: "paddingHorizontal";
    readonly paddingY: "paddingVertical";
};
export declare type Aliases = typeof aliases;
export declare const scales: {
    readonly textShadowColor: "colors";
    readonly shadowColor: "colors";
    readonly color: "colors";
    readonly backgroundColor: "colors";
    readonly borderColor: "colors";
    readonly caretColor: "colors";
    readonly opacity: "opacities";
    readonly margin: "space";
    readonly marginTop: "space";
    readonly marginRight: "space";
    readonly marginBottom: "space";
    readonly marginLeft: "space";
    readonly marginX: "space";
    readonly marginY: "space";
    readonly marginVertical: "space";
    readonly marginHorizontal: "space";
    readonly marginBlock: "space";
    readonly marginBlockEnd: "space";
    readonly marginBlockStart: "space";
    readonly marginInline: "space";
    readonly marginInlineEnd: "space";
    readonly marginInlineStart: "space";
    readonly padding: "space";
    readonly paddingTop: "space";
    readonly paddingRight: "space";
    readonly paddingBottom: "space";
    readonly paddingLeft: "space";
    readonly paddingX: "space";
    readonly paddingY: "space";
    readonly paddingHorizontal: "space";
    readonly paddingVertical: "space";
    readonly paddingBlock: "space";
    readonly paddingBlockEnd: "space";
    readonly paddingBlockStart: "space";
    readonly paddingInline: "space";
    readonly paddingInlineEnd: "space";
    readonly paddingInlineStart: "space";
    readonly inset: "space";
    readonly insetBlock: "space";
    readonly insetBlockEnd: "space";
    readonly insetBlockStart: "space";
    readonly insetInline: "space";
    readonly insetInlineEnd: "space";
    readonly insetInlineStart: "space";
    readonly top: "space";
    readonly right: "space";
    readonly bottom: "space";
    readonly left: "space";
    readonly gridGap: "space";
    readonly gridColumnGap: "space";
    readonly gridRowGap: "space";
    readonly gap: "space";
    readonly columnGap: "space";
    readonly rowGap: "space";
    readonly fontFamily: "fonts";
    readonly fontSize: "fontSizes";
    readonly fontWeight: "fontWeights";
    readonly lineHeight: "lineHeights";
    readonly letterSpacing: "letterSpacings";
    readonly border: "borders";
    readonly borderTop: "borders";
    readonly borderRight: "borders";
    readonly borderBottom: "borders";
    readonly borderLeft: "borders";
    readonly borderWidth: "borderWidths";
    readonly borderStyle: "borderStyles";
    readonly borderRadius: "radii";
    readonly borderTopRightRadius: "radii";
    readonly borderTopLeftRadius: "radii";
    readonly borderBottomRightRadius: "radii";
    readonly borderBottomLeftRadius: "radii";
    readonly borderTopWidth: "borderWidths";
    readonly borderTopColor: "colors";
    readonly borderTopStyle: "borderStyles";
    readonly borderBottomWidth: "borderWidths";
    readonly borderBottomColor: "colors";
    readonly borderBottomStyle: "borderStyles";
    readonly borderLeftWidth: "borderWidths";
    readonly borderLeftColor: "colors";
    readonly borderLeftStyle: "borderStyles";
    readonly borderRightWidth: "borderWidths";
    readonly borderRightColor: "colors";
    readonly borderRightStyle: "borderStyles";
    readonly borderBlock: "borders";
    readonly borderBlockEnd: "borders";
    readonly borderBlockEndStyle: "borderStyles";
    readonly borderBlockEndWidth: "borderWidths";
    readonly borderBlockStart: "borders";
    readonly borderBlockStartStyle: "borderStyles";
    readonly borderBlockStartWidth: "borderWidths";
    readonly borderBlockStyle: "borderStyles";
    readonly borderBlockWidth: "borderWidths";
    readonly borderEndEndRadius: "radii";
    readonly borderEndStartRadius: "radii";
    readonly borderInline: "borders";
    readonly borderInlineEnd: "borders";
    readonly borderInlineEndStyle: "borderStyles";
    readonly borderInlineEndWidth: "borderWidths";
    readonly borderInlineStart: "borders";
    readonly borderInlineStartStyle: "borderStyles";
    readonly borderInlineStartWidth: "borderWidths";
    readonly borderInlineStyle: "borderStyles";
    readonly borderInlineWidth: "borderWidths";
    readonly borderStartEndRadius: "radii";
    readonly borderStartStartRadius: "radii";
    readonly outlineColor: "colors";
    readonly boxShadow: "shadows";
    readonly textShadow: "shadows";
    readonly zIndex: "zIndices";
    readonly width: "sizes";
    readonly minWidth: "sizes";
    readonly maxWidth: "sizes";
    readonly height: "sizes";
    readonly minHeight: "sizes";
    readonly maxHeight: "sizes";
    readonly flexBasis: "sizes";
    readonly size: "sizes";
    readonly blockSize: "sizes";
    readonly inlineSize: "sizes";
    readonly maxBlockSize: "sizes";
    readonly maxInlineSize: "sizes";
    readonly minBlockSize: "sizes";
    readonly minInlineSize: "sizes";
    readonly fill: "colors";
    readonly stroke: "colors";
};
export declare type Scales = typeof scales;
