{"version":3,"file":"map-props.js","sourceRoot":"","sources":["../../src/css/map-props.ts"],"names":[],"mappings":"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","sourcesContent":["import { css } from './index'\nimport { StyledProps, Sx, ThemedOptions } from './types'\nimport { DripsyFinalTheme } from '../declarations'\nimport { get } from './get'\nimport { StyleSheet } from 'react-native'\nimport { DefaultStyleKey } from '../css/types'\n\ntype ThemedOptionsWithoutFunctionStyle<\n  ThemeKey extends keyof DripsyFinalTheme\n> = Omit<ThemedOptions<any, ThemeKey>, DefaultStyleKey> &\n  Record<DefaultStyleKey, Sx | undefined>\n\nexport function mapPropsToStyledComponent<\n  ThemeKey extends keyof DripsyFinalTheme\n>(\n  props: StyledProps<ThemeKey> & {\n    breakpoint: number\n    theme: DripsyFinalTheme\n    style?: any\n  },\n  options: ThemedOptionsWithoutFunctionStyle<ThemeKey>\n) {\n  const {\n    themeKey,\n    defaultStyle,\n    defaultVariant,\n    defaultVariants = [],\n  } = options\n  const { breakpoint, sx, theme, variant, style, variants } = props\n\n  // Override the defaults with added ones; don't get rid of them altogether\n  let multipleVariants = [...defaultVariants, defaultVariant]\n  if (variants?.length) {\n    multipleVariants = [...multipleVariants, ...variants]\n  }\n  // If a variant exists make it take precedence\n  if (variant) multipleVariants = [...multipleVariants, variant]\n  multipleVariants = multipleVariants.filter(Boolean)\n\n  const maybeUnstyledVariantObjectFromTheme = get(\n    theme,\n    themeKey + '.' + variant,\n    get(theme, (variant || defaultVariant) as string)\n  )\n  // const variantStyle = css(unstyledVariant, breakpoint)({ theme, themeKey })\n\n  // get the font-family from the variant, and pass it to the other styles as a fallback.\n  // if there is no font-family in the variant, check the defaultStyle\n  // this lets us support customFonts/font weights (https://github.com/nandorojo/dripsy/issues/51)\n  let { fontFamily } = maybeUnstyledVariantObjectFromTheme || {}\n  fontFamily = fontFamily || (defaultStyle?.fontFamily as any)\n\n  const baseStyle = css(\n    defaultStyle,\n    breakpoint\n  )({ theme, fontFamily, themeKey })\n\n  const multipleVariantsStyle = multipleVariants\n    .map((variantKey) =>\n      css(\n        // @ts-expect-error why does get think it's a number and not undefined?\n        get(theme, themeKey + '.' + variantKey, get(theme, variantKey)),\n        breakpoint\n      )({ theme, fontFamily, themeKey })\n    )\n    .reduce(\n      (prev = {}, next = {}) => ({\n        ...prev,\n        ...next,\n      }),\n      {}\n    )\n\n  const superStyle = css(sx, breakpoint)({ theme, fontFamily, themeKey })\n\n  const createStyleSheet = (style: any) => {\n    const stylesheet = StyleSheet.create({\n      style,\n    })\n    return stylesheet.style\n  }\n\n  const baseStyleSheet = createStyleSheet({\n    ...baseStyle,\n    ...multipleVariantsStyle,\n  })\n  const superStyleSheet = createStyleSheet(superStyle)\n\n  let styles: any[] | ((props?: any) => any[]) = [\n    // order the styles from default, to variant, style, and finally sx\n    baseStyleSheet,\n    ...(Array.isArray(style) ? style : [style]),\n    superStyleSheet,\n  ]\n  if (typeof style == 'function') {\n    // for Pressable, we pass a function prop to style\n    styles = (interactionState) => [\n      baseStyleSheet,\n      style(interactionState),\n      superStyleSheet,\n    ]\n  }\n\n  return {\n    styles,\n  }\n}\n"]}