{"version":3,"file":"create-themed-component.js","sourceRoot":"","sources":["../../src/css/create-themed-component.tsx"],"names":[],"mappings":"AAAA,OAAO,KAA+C,MAAM,OAAO,CAAA;AAEnE,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAA;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAA;AACzD,OAAO,EAAE,yBAAyB,EAAE,MAAM,aAAa,CAAA;AAEvD,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAA;AAExD,MAAM,UAAU,qBAAqB,CAKnC,SAA4C,EAC5C,EACE,YAAY,EAAE,SAAS,EACvB,GAAG,OAAO,KAC6B,EAAE;IAM3C,MAAM,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAGvC,SAAS,OAAO,CAAC,IAAI,EAAE,GAAG;QAC1B,MAAM,EACJ,EAAE,EAAE,GAAG,EACP,EAAE,EAAE,cAAc,EAClB,OAAO,EACP,KAAK,EACL,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAC3B,QAAQ,GAAG,OAAO,CAAC,eAAe,EAClC,GAAG,KAAK,EACT,GAAG,IAAI,CAAA;QACR,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;YACxE,OAAO,CAAC,KAAK,CACX,uDAAuD,cAAc,0FAA0F,CAChK,CAAA;SACF;QACD,MAAM,YAAY,GAChB,OAAO,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;QAE9D,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,EAAE,CAAA;QAClC,kFAAkF;QAClF,MAAM,EAAE,GAAG,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA;QAEtD,MAAM,UAAU,GAAG,kBAAkB,EAAE,CAAA;QAEvC,MAAM,EAAE,MAAM,EAAE,GAAG,aAAa,CAC9B,GAAG,EAAE,CACH,yBAAyB,CACvB;YACE,KAAK;YACL,UAAU;YACV,OAAO;YACP,EAAE;YACF,KAAK;YACL,QAAQ,EAAE,QAAiD;SAC5D,EACD;YACE,GAAG,OAAO;YACV,QAAQ;YACR,YAAY;SACb,CACF,EACH,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAC1E,CAAA;QAED,MAAM,YAAY,GAAG,cAAc,IAAI,SAAS,CAAA;QAEhD,OAAO,CAAC,YAAY,CAAC,IAAK,KAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAG,CAAA;IACtE,CAAC,CAAC,CAAA;IAEF,gBAAgB,CAAC,WAAW,GAAG,UAC7B,SAAS,EAAE,WAAW,IAAI,iBAC5B,EAAE,CAAA;IAEF,OAAO,gBAAuB,CAAA;AAChC,CAAC","sourcesContent":["import React, { ComponentType, ComponentPropsWithRef } from 'react'\nimport type { ThemedOptions, StyledProps, DripsyVariant } from './types'\nimport { useDripsyTheme } from '../use-dripsy-theme'\nimport { useBreakpointIndex } from './breakpoint-context'\nimport { mapPropsToStyledComponent } from './map-props'\nimport { DripsyFinalTheme } from '../declarations'\nimport { useStableMemo } from '../utils/use-stable-memo'\n\nexport function createThemedComponent<\n  BaseComponentProps extends { style?: any },\n  ExtraProps,\n  ThemeKey extends keyof DripsyFinalTheme\n>(\n  Component: ComponentType<BaseComponentProps>,\n  {\n    defaultStyle: baseStyle,\n    ...options\n  }: ThemedOptions<ExtraProps, ThemeKey> = {}\n): ComponentType<\n  StyledProps<ThemeKey> &\n    ComponentPropsWithRef<ComponentType<BaseComponentProps>> &\n    ExtraProps\n> {\n  const WrappedComponent = React.forwardRef<\n    any,\n    StyledProps<ThemeKey> & BaseComponentProps & ExtraProps\n  >(function Wrapped(prop, ref) {\n    const {\n      sx: _sx,\n      as: SuperComponent,\n      variant,\n      style,\n      themeKey = options.themeKey,\n      variants = options.defaultVariants,\n      ...props\n    } = prop\n    if (typeof __DEV__ !== 'undefined' && typeof SuperComponent === 'string') {\n      console.error(\n        `[dripsy] Looks like you used an invalid \"as\" prop. \"${SuperComponent}\" can't be string. Please pass a valid React component. HTML elements are not supported.`\n      )\n    }\n    const defaultStyle =\n      typeof baseStyle == 'function' ? baseStyle(prop) : baseStyle\n\n    const { theme } = useDripsyTheme()\n    // make the sx factory out here so that it's a stable dependency for useStableMemo\n    const sx = typeof _sx == 'function' ? _sx(theme) : _sx\n\n    const breakpoint = useBreakpointIndex()\n\n    const { styles } = useStableMemo(\n      () =>\n        mapPropsToStyledComponent<ThemeKey>(\n          {\n            theme,\n            breakpoint,\n            variant,\n            sx,\n            style,\n            variants: variants as DripsyVariant<ThemeKey>[] | undefined,\n          },\n          {\n            ...options,\n            themeKey,\n            defaultStyle,\n          }\n        ),\n      [theme, breakpoint, variant, sx, style, variants, themeKey, defaultStyle]\n    )\n\n    const TheComponent = SuperComponent || Component\n\n    return <TheComponent {...(props as any)} ref={ref} style={styles} />\n  })\n\n  WrappedComponent.displayName = `Dripsy.${\n    Component?.displayName ?? 'NoNameComponent'\n  }`\n\n  return WrappedComponent as any\n}\n"]}