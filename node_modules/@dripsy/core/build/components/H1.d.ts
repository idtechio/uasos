export declare const H1: import("react").ComponentType<import("..").StyledProps<"text"> & ((Pick<import("@expo/html-elements/build/primitives/Text").TextProps, "testID" | "onLayout" | "nativeID" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "onPress" | "onLongPress" | "key" | "allowFontScaling" | "ellipsizeMode" | "lineBreakMode" | "numberOfLines" | "onTextLayout" | "maxFontSizeMultiplier" | "adjustsFontSizeToFit" | "minimumFontScale" | "suppressHighlighting" | "selectable" | "selectionColor" | "textBreakStrategy" | "dataDetectorType" | keyof import("@expo/html-elements/build/primitives/Text").WebTextProps> & import("react").RefAttributes<import("react").Component<import("@expo/html-elements/build/primitives/Text").TextProps, any, any>>) | (Pick<Omit<import("react-native").TextProps & import("react").ClassAttributes<typeof import("react-native").Text>, "style" | "accessibilityRole"> & import("@expo/html-elements/build/primitives/Text").WebTextProps & {
    children?: import("react").ReactNode;
}, "testID" | "children" | "onLayout" | "nativeID" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "onPress" | "onLongPress" | "key" | "allowFontScaling" | "ellipsizeMode" | "lineBreakMode" | "numberOfLines" | "onTextLayout" | "maxFontSizeMultiplier" | "adjustsFontSizeToFit" | "minimumFontScale" | "suppressHighlighting" | "selectable" | "selectionColor" | "textBreakStrategy" | "dataDetectorType" | keyof import("@expo/html-elements/build/primitives/Text").WebTextProps> & {
    ref?: ((instance: typeof import("react-native").Text | null) => void) | import("react").RefObject<typeof import("react-native").Text> | null | undefined;
}))>;
