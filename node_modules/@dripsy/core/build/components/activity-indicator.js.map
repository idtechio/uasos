{"version":3,"file":"activity-indicator.js","sourceRoot":"","sources":["../../src/components/activity-indicator.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAyB,MAAM,OAAO,CAAA;AAC7C,OAAO,EAAE,iBAAiB,IAAI,uBAAuB,EAAE,MAAM,cAAc,CAAA;AAC3E,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAA;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAA;AAOtE,SAAS,SAAS,CAAC,KAAY;IAC7B,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC,KAAK,CAAA;IAEzC,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAA;IACrB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE;QAChD,KAAK,GAAG,MAAM,CAAC,KAAK,CAAW,CAAA;KAChC;IACD,OAAO,CAAC,uBAAuB,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAG,CAAA;AAC7D,CAAC;AAED,MAAM,CAAC,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAA","sourcesContent":["import React, { ComponentProps } from 'react'\nimport { ActivityIndicator as NativeActivityIndicator } from 'react-native'\nimport { useDripsyTheme } from '../use-dripsy-theme'\nimport { createThemedComponent } from '../css/create-themed-component'\nimport { DripsyFinalTheme } from '../declarations'\n\ntype Props = Omit<ComponentProps<typeof NativeActivityIndicator>, 'color'> & {\n  color?: (string & {}) | keyof DripsyFinalTheme['colors']\n}\n\nfunction Indicator(props: Props) {\n  const { colors } = useDripsyTheme().theme\n\n  let { color } = props\n  if (typeof color === 'string' && colors?.[color]) {\n    color = colors[color] as string\n  }\n  return <NativeActivityIndicator {...props} color={color} />\n}\n\nexport const ActivityIndicator = createThemedComponent(Indicator)\n"]}