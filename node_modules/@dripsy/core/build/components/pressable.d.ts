import React from 'react';
declare module 'react-native' {
    interface PressableStateCallbackType {
        hovered?: boolean;
        focused?: boolean;
    }
}
export declare const Pressable: React.ForwardRefExoticComponent<Pick<Omit<(import("..").StyledProps<keyof import("..").Theme> & Pick<import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, keyof import("react-native").PressableProps | "key"> & React.RefAttributes<React.Component<import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, any, any>> & {
    showCursor: boolean;
}) | (import("..").StyledProps<keyof import("..").Theme> & import("react-native").PressableProps & React.RefAttributes<import("react-native").View> & {
    children?: React.ReactNode;
} & {
    showCursor: boolean;
}) | (import("..").StyledProps<keyof import("..").Theme> & Pick<import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, keyof import("react-native").PressableProps | "key"> & React.RefAttributes<React.Component<import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, any, any>> & {
    showCursor: boolean;
} & {
    children?: React.ReactNode;
}), "showCursor">, "testID" | "pointerEvents" | "variant" | "children" | "style" | "themeKey" | "sx" | "variants" | "as" | "hitSlop" | "onLayout" | "removeClippedSubviews" | "nativeID" | "collapsable" | "needsOffscreenAlphaCompositing" | "renderToHardwareTextureAndroid" | "focusable" | "shouldRasterizeIOS" | "isTVSelectable" | "hasTVPreferredFocus" | "tvParallaxProperties" | "tvParallaxShiftDistanceX" | "tvParallaxShiftDistanceY" | "tvParallaxTiltAngle" | "tvParallaxMagnification" | "onStartShouldSetResponder" | "onMoveShouldSetResponder" | "onResponderEnd" | "onResponderGrant" | "onResponderReject" | "onResponderMove" | "onResponderRelease" | "onResponderStart" | "onResponderTerminationRequest" | "onResponderTerminate" | "onStartShouldSetResponderCapture" | "onMoveShouldSetResponderCapture" | "onTouchStart" | "onTouchMove" | "onTouchEnd" | "onTouchCancel" | "onTouchEndCapture" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "onPress" | "onPressIn" | "onPressOut" | "onLongPress" | "delayLongPress" | "disabled" | "pressRetentionOffset" | "android_disableSound" | "android_ripple" | "testOnly_pressed" | "key"> & React.RefAttributes<import("react-native").View>>;
