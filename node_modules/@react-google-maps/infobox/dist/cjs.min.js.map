{"version":3,"file":"cjs.min.js","sources":["../src/InfoBox.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\n// This handler prevents an event in the InfoBox from being passed on to the map.\nfunction cancelHandler(event: Event) {\n  event.cancelBubble = true\n\n  if (event.stopPropagation) {\n    event.stopPropagation()\n  }\n}\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: keyof google.maps.MapPanes\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.getCloseClickHandler = this.getCloseClickHandler.bind(this)\n    this.closeClickHandler = this.closeClickHandler.bind(this)\n    this.createInfoBoxDiv = this.createInfoBoxDiv.bind(this)\n    this.addClickHandler = this.addClickHandler.bind(this)\n    this.getCloseBoxImg = this.getCloseBoxImg.bind(this)\n    this.getBoxWidths = this.getBoxWidths.bind(this)\n    this.setBoxStyle = this.setBoxStyle.bind(this)\n    this.setPosition = this.setPosition.bind(this)\n    this.getPosition = this.getPosition.bind(this)\n    this.setOptions = this.setOptions.bind(this)\n    this.setContent = this.setContent.bind(this)\n    this.setVisible = this.setVisible.bind(this)\n    this.getContent = this.getContent.bind(this)\n    this.getVisible = this.getVisible.bind(this)\n    this.setZIndex = this.setZIndex.bind(this)\n    this.getZIndex = this.getZIndex.bind(this)\n    this.onRemove = this.onRemove.bind(this)\n    this.panBox = this.panBox.bind(this)\n    this.extend = this.extend.bind(this)\n    this.close = this.close.bind(this)\n    this.draw = this.draw.bind(this)\n    this.show = this.show.bind(this)\n    this.hide = this.hide.bind(this)\n    this.open = this.open.bind(this)\n\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      const panes = (this as unknown as google.maps.OverlayView).getPanes()\n\n      if (panes !== null) {\n        panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n      }\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addListener(\n            this.div,\n            'mouseover',\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    this.closeListener = this.div && this.div.firstChild && this.closeBoxURL !== ''\n      ? google.maps.event.addListener(\n        this.div.firstChild,\n        'click',\n        this.getCloseClickHandler()\n      )\n      : null;\n  }\n\n  closeClickHandler(event: Event): void {\n    // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n    event.cancelBubble = true\n\n    if (event.stopPropagation) {\n      event.stopPropagation()\n    }\n\n    /**\n     * This event is fired when the InfoBox's close box is clicked.\n     * @name InfoBox#closeclick\n     * @event\n     */\n    google.maps.event.trigger(this, 'closeclick')\n\n    this.close()\n  }\n\n  getCloseClickHandler(): (event: Event) => void {\n    return this.closeClickHandler\n  }\n\n  panBox(disablePan?: boolean | undefined): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition !== null) {\n          if (pixPosition.x < -iwOffsetX + padX) {\n            xOffset = pixPosition.x + iwOffsetX - padX\n          } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n            xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n          }\n\n          if (this.alignBottom) {\n            if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n              yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n            } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n            }\n          } else {\n            if (pixPosition.y < -iwOffsetY + padY) {\n              yOffset = pixPosition.y + iwOffsetY - padY\n            } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n            }\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n\n        if (Object.prototype.hasOwnProperty.call(boxStyle, i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      if (pixPosition !== null) {\n        this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n        if (this.alignBottom) {\n          this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n        } else {\n          this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n        }\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = (this as unknown as google.maps.OverlayView).getMap()\n\n    return typeof map === 'undefined' || map === null ? false : !this.isHidden\n  }\n\n  show(): void {\n    this.isHidden = false\n\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject | undefined\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.position = anchor.getPosition()\n\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          const position = anchor.getPosition()\n\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    (this as unknown as google.maps.OverlayView).setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend<A extends typeof InfoBox>(obj1: A, obj2: typeof google.maps.OverlayView): A {\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\n      for (const property in object.prototype) {\n        if (!Object.prototype.hasOwnProperty.call(this, property)) {\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property  as keyof google.maps.OverlayView]\n        }\n      }\n\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["cancelHandler","event","cancelBubble","stopPropagation","InfoBox","options","this","getCloseClickHandler","bind","closeClickHandler","createInfoBoxDiv","addClickHandler","getCloseBoxImg","getBoxWidths","setBoxStyle","setPosition","getPosition","setOptions","setContent","setVisible","getContent","getVisible","setZIndex","getZIndex","onRemove","panBox","extend","close","draw","show","hide","open","google","maps","OverlayView","content","disableAutoPan","maxWidth","pixelOffset","Size","position","LatLng","zIndex","boxClass","boxStyle","closeBoxMargin","closeBoxURL","infoBoxClearance","visible","isHidden","alignBottom","pane","enableEventPropagation","div","closeListener","moveListener","mapListener","contextListener","eventListeners","fixedWidthSet","prototype","_this","document","createElement","innerHTML","appendChild","panes","getPanes","style","width","offsetWidth","bw","left","right","events","i","length","push","addListener","cursor","returnValue","preventDefault","trigger","img","firstChild","disablePan","map","getMap","Map","xOffset","yOffset","bounds","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","panBy","className","cssText","Object","hasOwnProperty","call","webkitTransform","opacity","parseFloat","msFilter","filter","visibility","overflow","top","bottom","defaultView","ownerDocument","computedStyle","getComputedStyle","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","parentNode","removeChild","fromLatLngToDivPixel","removeListener","latLng","isVisible","index","anchor","setMap","obj1","obj2","object","property","apply"],"mappings":"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"}