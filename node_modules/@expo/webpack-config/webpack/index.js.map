{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;AAAA,8CAA4D;AAG5D,+BAA4C;AAE5C,sEAA6C;AAE7C;;;;;;GAMG;AACY,KAAK,UAAU,wBAAwB,CACpD,MAAwB,EAAE,EAC1B,OAAkB,EAAE;IAEpB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,GAAG,CAAC,WAAW,GAAG,8BAAsB,EAAE,CAAC;KAC5C;IACD,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;QACjB,aAAa;QACb,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;KAClD;IAED,MAAM,WAAW,GAAgB,yBAAmB,CAAC,GAAG,CAAC,CAAC;IAE1D,MAAM,MAAM,GAAqC,MAAM,wBAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAExF,yBAAyB;IACzB,IAAI,WAAW,CAAC,IAAI,EAAE;QACpB,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;KAChD;IAED,IAAI,SAAS,IAAI,WAAW,EAAE;QAC5B,MAAM,IAAI,KAAK,CACb,gGAAgG,CACjG,CAAC;KACH;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AA3BD,2CA2BC","sourcesContent":["import { getPossibleProjectRoot } from '@expo/config/paths';\nimport { Configuration } from 'webpack';\n\nimport { validateEnvironment } from './env';\nimport { Arguments, DevConfiguration, Environment, InputEnvironment } from './types';\nimport webpackConfig from './webpack.config';\n\n/**\n * Create the official Webpack config for loading Expo web apps.\n *\n * @param env Environment props used to configure features.\n * @param argv\n * @category default\n */\nexport default async function createWebpackConfigAsync(\n  env: InputEnvironment = {},\n  argv: Arguments = {}\n): Promise<Configuration | DevConfiguration> {\n  if (!env.projectRoot) {\n    env.projectRoot = getPossibleProjectRoot();\n  }\n  if (!env.platform) {\n    // @ts-ignore\n    env.platform = process.env.EXPO_WEBPACK_PLATFORM;\n  }\n\n  const environment: Environment = validateEnvironment(env);\n\n  const config: Configuration | DevConfiguration = await webpackConfig(environment, argv);\n\n  // @ts-ignore: deprecated\n  if (environment.info) {\n    console.warn('environment.info is deprecated');\n  }\n\n  if ('offline' in environment) {\n    throw new Error(\n      'The `offline` flag is deprecated. Please setup a service worker for your web project manually.'\n    );\n  }\n  return config;\n}\n"]}