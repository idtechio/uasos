{"version":3,"file":"FaviconWebpackPlugin.js","sourceRoot":"","sources":["../../src/plugins/FaviconWebpackPlugin.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,uCAA6E;AAG7E,wFAAkG;AAElG,SAAS,SAAS,CAAC,IAAY,EAAE,OAAe;IAC9C,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,UAAU,IAAI,KAAK,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,CAAC;AACD,SAAS,UAAU,CAAC,IAAY,EAAE,OAAe;IAC/C,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,MAAM,CAAC,UAAU,IAAI,KAAK,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACtE,CAAC;AACD,MAAqB,oBAAqB,SAAQ,iCAAuB;IACvE,YACU,UAAsD,EACtD,OAA2B;QAEnC,KAAK,EAAE,CAAC;QAHA,eAAU,GAAV,UAAU,CAA4C;QACtD,YAAO,GAAP,OAAO,CAAoB;IAGrC,CAAC;IAED,KAAK,CAAC,WAAW,CACf,QAAkB,EAClB,WAAsC,EACtC,IAAoB;QAEpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,UAAU,CAAC,SAAS,EAAE,sDAAsD,CAAC,CAAC;YAC9E,OAAO,IAAI,CAAC;SACb;QAED,MAAM,MAAM,GAAG,MAAM,+BAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzE,MAAM,KAAK,GAAmB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,WAC7D,OAAA,MAAA,CAAC,CAAC,GAAG,0CAAE,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA,EAAA,CACnC,CAAC;QAEF,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,MAAM,EAAE,UAAU,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC,GAAI,CAAC;YACvC,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WACnC,OAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,MAAA,CAAC,CAAC,GAAG,0CAAE,QAAQ,CAAC,UAAU,CAAC,CAAA,EAAA,CACrE,CAAC;YACF,IAAI,aAAa,EAAE;gBACjB,SAAS,CACP,SAAS,EACT,2BAA2B,UAAU,CAAC,GAAG,IACvC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EACtD,QAAQ,CACT,CAAC;aACH;iBAAM;gBACL,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;oBACrC,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM;oBAChC,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;iBACtC,CAAC;gBACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACrC;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA9CD,uCA8CC","sourcesContent":["import chalk from 'chalk';\nimport { generateFaviconAsync, IconOptions, ProjectOptions } from 'expo-pwa';\nimport { compilation as compilationNS, Compiler } from 'webpack';\n\nimport ModifyHtmlWebpackPlugin, { HTMLLinkNode, HTMLPluginData } from './ModifyHtmlWebpackPlugin';\n\nfunction logNotice(type: string, message: string) {\n  console.log(chalk.magenta(`\\u203A ${type}: ${chalk.gray(message)}`));\n}\nfunction logWarning(type: string, message: string) {\n  console.log(chalk.yellow(`\\u203A ${type}: ${chalk.gray(message)}`));\n}\nexport default class FaviconWebpackPlugin extends ModifyHtmlWebpackPlugin {\n  constructor(\n    private pwaOptions: ProjectOptions & { links: HTMLLinkNode[] },\n    private favicon: IconOptions | null\n  ) {\n    super();\n  }\n\n  async modifyAsync(\n    compiler: Compiler,\n    compilation: compilationNS.Compilation,\n    data: HTMLPluginData\n  ): Promise<HTMLPluginData> {\n    if (!this.favicon) {\n      logWarning('Favicon', 'No template image found, skipping auto generation...');\n      return data;\n    }\n\n    const assets = await generateFaviconAsync(this.pwaOptions, this.favicon);\n\n    const links: HTMLLinkNode[] = this.pwaOptions.links.filter(v =>\n      v.rel?.split(' ').includes('icon')\n    );\n\n    for (const asset of assets) {\n      const { attributes = {} } = asset.tag!;\n      const faviconExists = links.some(v =>\n        v.sizes ? v.sizes === attributes.sizes : v.rel?.includes('shortcut')\n      );\n      if (faviconExists) {\n        logNotice(\n          'Favicon',\n          `Using custom <link rel=\"${attributes.rel}\"${\n            attributes.sizes ? ` sizes=\"${attributes.sizes}\"` : ''\n          } .../>`\n        );\n      } else {\n        compilation.assets[asset.asset.path] = {\n          source: () => asset.asset.source,\n          size: () => asset.asset.source.length,\n        };\n        data.assetTags.meta.push(asset.tag);\n      }\n    }\n    return data;\n  }\n}\n"]}