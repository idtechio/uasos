{"version":3,"file":"withNodeMocks.js","sourceRoot":"","sources":["../../src/addons/withNodeMocks.ts"],"names":[],"mappings":";;AAEA;;;;;;GAMG;AACH,SAAwB,aAAa,CAAC,aAA+B;IACnE,IACE,OAAO,aAAa,CAAC,MAAM,KAAK,QAAQ;QACxC,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EACpE;QACA,OAAO,aAAa,CAAC;KACtB;IAED,aAAa,CAAC,IAAI,GAAG;QACnB,MAAM,EAAE,OAAO;QACf,KAAK,EAAE,OAAO;QACd,GAAG,EAAE,MAAM;QACX,EAAE,EAAE,OAAO;QACX,KAAK,EAAE,OAAO;QACd,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,OAAO;QACZ,aAAa,EAAE,OAAO;QACtB,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC;KAC9B,CAAC;IAEF,OAAO,aAAa,CAAC;AACvB,CAAC;AArBD,gCAqBC","sourcesContent":["import { AnyConfiguration } from '../types';\n\n/**\n * Some libraries import Node modules but don't use them in the browser.\n * Tell Webpack to provide empty mocks for them so importing them works.\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @category addons\n */\nexport default function withNodeMocks(webpackConfig: AnyConfiguration): AnyConfiguration {\n  if (\n    typeof webpackConfig.target === 'string' &&\n    ['electron', 'electron-main', 'node'].includes(webpackConfig.target)\n  ) {\n    return webpackConfig;\n  }\n\n  webpackConfig.node = {\n    module: 'empty',\n    dgram: 'empty',\n    dns: 'mock',\n    fs: 'empty',\n    http2: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty',\n    ...(webpackConfig.node || {}),\n  };\n\n  return webpackConfig;\n}\n"]}