{"version":3,"file":"withSourceMaps.js","sourceRoot":"","sources":["../../src/addons/withSourceMaps.ts"],"names":[],"mappings":";;AAAA,qCAAiD;AAIjD,SAAS,QAAQ,CAAC,GAAuC;IACvD,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrE,CAAC;AAED,SAAS,qBAAqB,CAC5B,aAA+B,EAC/B,MAAmD,EAAE;;IAErD,MAAM,IAAI,GAAG,MAAA,GAAG,CAAC,IAAI,mCAAI,aAAa,CAAC,IAAI,CAAC;IAC5C,MAAM,KAAK,GAAG,IAAI,KAAK,YAAY,CAAC;IAEpC,OAAO;IACL,qGAAqG;IACrG,iFAAiF;IACjF,2CAA2C;IAC3C,IAAI,gCAAsB,CAAC;QACzB,IAAI,EAAE,gCAAgC;QACtC,OAAO,EAAE,uBAAuB;QAChC,QAAQ,EAAE,MAAA,MAAA,aAAa,CAAC,MAAM,0CAAE,iBAAiB,mCAAI,YAAY;QACjE,MAAM,EAAE,uCAAuC,GAAG,CAAC,QAAS,EAAE;QAC9D,mDAAmD;QACnD,sBAAsB,EAAE,MAAA,aAAa,CAAC,MAAM,0CAAE,6BAA6B;QAC3E,uDAAuD;QACvD,GAAG,CAAC,KAAK;YACP,CAAC,CAAC;gBACE,wEAAwE;gBACxE,iEAAiE;gBACjE,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,KAAK;aACf;YACH,CAAC,CAAC;YACE,aAAa;aACd,CAAC;KACP,CAAC,CACH,CAAC;AACJ,CAAC;AAED;;;;;;;GAOG;AACH,SAAwB,sBAAsB,CAC5C,aAA+B,EAC/B,MAAmD,EAAE;IAErD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAClB,OAAO,aAAa,CAAC;KACtB;IAED,IAAI,CAAC,aAAa,CAAC,OAAO;QAAE,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;IAEvD,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;IACtE,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;IAE9B,OAAO,aAAa,CAAC;AACvB,CAAC;AAdD,yCAcC","sourcesContent":["import { SourceMapDevToolPlugin } from 'webpack';\n\nimport { AnyConfiguration, InputEnvironment } from '../types';\n\nfunction isNative(env: Pick<InputEnvironment, 'platform'>): boolean {\n  return !!env.platform && ['ios', 'android'].includes(env.platform);\n}\n\nfunction createSourceMapPlugin(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'mode' | 'platform'> = {}\n) {\n  const mode = env.mode ?? webpackConfig.mode;\n  const isDev = mode !== 'production';\n\n  return (\n    // This is a hack that we use in place of devtool because the index.bundle is not index.js on native.\n    // The default devtool won't test for .bundle and there's no way to set it there.\n    // This doesn't support inline source maps.\n    new SourceMapDevToolPlugin({\n      test: /\\.(js|tsx?|(js)?bundle)($|\\?)/i,\n      exclude: /\\.chunk\\.(js)?bundle$/,\n      filename: webpackConfig.output?.sourceMapFilename ?? '[file].map',\n      append: `//# sourceMappingURL=[url]?platform=${env.platform!}`,\n      // @ts-ignore: this is how webpack works internally\n      moduleFilenameTemplate: webpackConfig.output?.devtoolModuleFilenameTemplate,\n      // Emulate the `devtool` settings based on CRA defaults\n      ...(isDev\n        ? {\n            // `module: false` = cheap-module-source-map -- less accurate but faster\n            // `module: true` = more accurate but some paths are non existent\n            module: true,\n            columns: false,\n          }\n        : {\n            // source-map\n          }),\n    })\n  );\n}\n\n/**\n * Because webpack doesn't support `.bundle` extensions (why should they).\n * We need to extract the default settings for source maps and create a native source map plugin.\n * This does nothing if the env.platform is not ios or android.\n *\n * @param webpackConfig\n * @param env\n */\nexport default function withPlatformSourceMaps(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'platform' | 'mode'> = {}\n): AnyConfiguration {\n  if (!isNative(env)) {\n    return webpackConfig;\n  }\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n\n  webpackConfig.plugins.push(createSourceMapPlugin(webpackConfig, env));\n  webpackConfig.devtool = false;\n\n  return webpackConfig;\n}\n"]}