{"version":3,"file":"extensions.js","sourceRoot":"","sources":["../../src/env/extensions.ts"],"names":[],"mappings":";;;AAAA,8CAAuD;AAEvD;;;;;GAKG;AACH,SAAgB,uBAAuB,CAAC,GAAG,SAAmB;IAC5D,2CAA2C;IAC3C,OAAO,yBAAiB,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AAChE,CAAC;AAHD,0DAGC;AAED,SAAgB,6BAA6B,CAAC,GAAG,SAAmB;IAClE,2CAA2C;IAC3C,2CAA2C;IAC3C,OAAO,yBAAiB,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CACrF,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CACrB,CAAC;AACJ,CAAC;AAND,sEAMC","sourcesContent":["import { getBareExtensions } from '@expo/config/paths';\n\n/**\n * Get the platform specific platform extensions in the format that Webpack expects (with a dot prefix).\n *\n * @param platforms supported platforms in order of priority. ex: ios, android, web, native, electron, etc...\n * @category env\n */\nexport function getModuleFileExtensions(...platforms: string[]): string[] {\n  // Webpack requires a `.` before each value\n  return getBareExtensions(platforms).map(value => `.${value}`);\n}\n\nexport function getNativeModuleFileExtensions(...platforms: string[]): string[] {\n  // Webpack requires a `.` before each value\n  // Disable modern when using `react-native`\n  return getBareExtensions(platforms, { isReact: true, isTS: true, isModern: false }).map(\n    value => `.${value}`\n  );\n}\n"]}