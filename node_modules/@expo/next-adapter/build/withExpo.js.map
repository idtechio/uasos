{"version":3,"file":"withExpo.js","sourceRoot":"","sources":["../src/withExpo.ts"],"names":[],"mappings":";;AAAA,8CAAuD;AACvD,wDAA6D;AAG7D,SAAwB,QAAQ,CAAC,aAAkB,EAAE;IACnD,OAAO;QACL,GAAG,UAAU;QACb,cAAc,EAAE,yBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1C,OAAO,CAAC,MAAwB,EAAE,OAAY;YAC5C,8DAA8D;YAC9D,OAAO,CAAC,GAAG,CAAC,uCAAuC,GAAG,MAAM,CAAC;YAE7D,MAAM,QAAQ,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC;YAEjD,MAAM,UAAU,GAAG,uBAAc,CAC/B,MAAM,EACN;gBACE,WAAW,EAAE,UAAU,CAAC,WAAW,IAAI,OAAO,CAAC,GAAG,EAAE;aACrD,EACD;gBACE,mBAAmB,EAAE,KAAK;gBAC1B,QAAQ,EAAE,QAAQ,IAAI,QAAQ,KAAK,KAAK;aACzC,CACF,CAAC;YACF,2BAA2B;YAC3B,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC;YAExE,mDAAmD;YACnD,IAAI,OAAO,UAAU,CAAC,OAAO,KAAK,UAAU,EAAE;gBAC5C,OAAO,UAAU,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;aAChD;YAED,OAAO,UAAU,CAAC;QACpB,CAAC;KACF,CAAC;AACJ,CAAC;AA/BD,2BA+BC","sourcesContent":["import { getBareExtensions } from '@expo/config/paths';\nimport { withUnimodules } from '@expo/webpack-config/addons';\nimport { AnyConfiguration } from '@expo/webpack-config/webpack/types';\n\nexport default function withExpo(nextConfig: any = {}): any {\n  return {\n    ...nextConfig,\n    pageExtensions: getBareExtensions(['web']),\n    webpack(config: AnyConfiguration, options: any): AnyConfiguration {\n      // Prevent define plugin from overwriting Next.js environment.\n      process.env.EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS = 'true';\n\n      const webpack5 = (options.config || {}).webpack5;\n\n      const expoConfig = withUnimodules(\n        config,\n        {\n          projectRoot: nextConfig.projectRoot || process.cwd(),\n        },\n        {\n          supportsFontLoading: false,\n          webpack5: webpack5 && webpack5 !== false,\n        }\n      );\n      // Use original public path\n      (expoConfig.output || {}).publicPath = (config.output || {}).publicPath;\n\n      // TODO: Bacon: use commonjs for RNW babel maybe...\n      if (typeof nextConfig.webpack === 'function') {\n        return nextConfig.webpack(expoConfig, options);\n      }\n\n      return expoConfig;\n    },\n  };\n}\n"]}