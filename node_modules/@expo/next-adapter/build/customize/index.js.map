{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/customize/index.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport prompts from 'prompts';\n\nimport { manifest } from './manifest';\n\nexport * from './manifest';\n\nfunction logReady() {\n  console.log();\n  console.log(\n    chalk.reset(`\\u203A Your Expo + Next.js project has all of the required customizations.`)\n  );\n  console.log(\n    chalk.reset(`\\u203A Start your project with \\`${chalk.bold(`yarn next dev`)}\\` to test it.`)\n  );\n  console.log();\n}\n\nasync function runNonInteractiveFlowAsync(projectRoot: string): Promise<void> {\n  const customizations = manifest.filter(({ type }) => type === 'required');\n  for (const customization of customizations) {\n    if (customization.onEnabledAsync({ projectRoot, force: false })) {\n      await customization.onSelectAsync({ projectRoot, force: true });\n    }\n  }\n  logReady();\n}\n\nexport async function runAsync({\n  projectRoot,\n  force,\n  yes: nonInteractive,\n}: {\n  projectRoot: string;\n  force: boolean;\n  yes: boolean;\n}): Promise<void> {\n  if (nonInteractive) {\n    await runNonInteractiveFlowAsync(projectRoot);\n    return;\n  }\n\n  const values = [];\n\n  for (const customization of manifest) {\n    const enabled = await customization.onEnabledAsync({ projectRoot, force });\n    values.push({\n      title: customization.name,\n      value: customization.name,\n      // @ts-ignore: broken types\n      disabled: !force && !enabled,\n      message: force && !enabled ? chalk.red('This will overwrite the existing file') : '',\n    });\n  }\n\n  if (!values.filter(({ disabled }) => !disabled).length) {\n    logReady();\n    console.log(\n      chalk.dim(`\\u203A To regenerate the files run: ${chalk.bold('next-expo --force')}`)\n    );\n    console.log();\n    return;\n  }\n\n  const { answer } = await prompts({\n    type: 'multiselect',\n    name: 'answer',\n    message: 'Which Next.js files would you like to generate?\\n',\n    hint: '- Space to select. Return to submit',\n    // @ts-ignore: broken types\n    warn: 'File exists, use --force to overwrite it.',\n    limit: values.length,\n    instructions: '',\n    choices: values,\n  });\n\n  if (!answer) {\n    console.log('\\n\\u203A Exiting...\\n');\n    return;\n  }\n\n  await Promise.all(\n    answer\n      .map((item: any) => {\n        const customization = manifest.find(({ name }) => name === item);\n        if (customization) return customization.onSelectAsync({ projectRoot, force });\n        else throw new Error('failed to find customization matching: ' + item);\n      })\n      .filter(Boolean)\n  );\n}\n"]}