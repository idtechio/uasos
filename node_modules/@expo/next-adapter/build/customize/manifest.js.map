{"version":3,"file":"manifest.js","sourceRoot":"","sources":["../../src/customize/manifest.ts"],"names":[],"mappings":";;;;;;AAAA,yCAA8C;AAC9C,2DAAyD;AACzD,kDAA0B;AAC1B,wDAA0B;AAC1B,gDAAwB;AACxB,gEAAuC;AAevC,MAAM,YAAY,GAAG,kCACnB,OAAO,CAAC,iCAAiC,CAAC,CAAC,OAC7C,EAAE,CAAC;AAEH,SAAS,WAAW;IAClB,OAAO,MAAM,YAAY,EAAE,CAAC;AAC9B,CAAC;AAED,SAAS,aAAa;IACpB,OAAO,KAAK,YAAY,EAAE,CAAC;AAC7B,CAAC;AAED,KAAK,UAAU,aAAa,CAC1B,IAAY,EACZ,EAAU,EACV,KAAc,EACd,GAAY;IAEZ,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,kBAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE;QACvC,MAAM,IAAI,KAAK,CAAC,6BAA6B,EAAE,gCAAgC,CAAC,CAAC;KAClF;IACD,IAAI,MAAM,kBAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC7B,IAAI,GAAG,EAAE;YACP,MAAM,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEjD,MAAM,kBAAE,CAAC,SAAS,CAAC,cAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,MAAM,kBAAE,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,QAAQ,EAAE,CAAC,CAAC;SAC/C;aAAM;YACL,MAAM,kBAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/D;KACF;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,2BAA2B,EAAE,EAAE,CAAC,CAAC;KACpF;AACH,CAAC;AAED,KAAK,UAAU,yBAAyB,CAAC,eAAuB,EAAE,GAAW;IAC3E,IAAI,MAAM,kBAAE,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE;QACxC,MAAM,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAC5D,OAAO,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC/B;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAEnD,SAAS,eAAe,CACtB,WAAmB;IAEnB,MAAM,YAAY,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,MAAM,CACtD,UAAU,CAAC,EAAE,CAAC,CAAC,sBAAW,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,CAC3D,CAAC;IACF,MAAM,eAAe,GAAG,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAC,MAAM,CACxE,UAAU,CAAC,EAAE,CAAC,CAAC,sBAAW,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,CAC3D,CAAC;IAEF,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,CAAC;AAC3C,CAAC;AAEY,QAAA,QAAQ,GAAsB;IACzC;QACE,IAAI,EAAE,8BAA8B;QACpC,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,CAAC,WAAmB,EAAE,EAAE,CAAC,EAAE;QAC5C,WAAW,EAAE,0DAA0D;QACvE,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC;YACvE,MAAM,GAAG,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,eAAe,CAAC,CAAC;YAClD,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QACtB,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE;YACjC,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC;YACvE,MAAM,GAAG,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,eAAe,CAAC,CAAC;YAClD,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACf,OAAO,CAAC,GAAG,CACT,eAAK,CAAC,OAAO,CAAC,GAAG,CAAC,+DAA+D,CAAC,CACnF,CAAC;gBACF,OAAO;aACR;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,+CAA+C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7F;YAED,MAAM,cAAc,GAAG,kCAAgB,CAAC,WAAW,CAAC,CAAC;YAErD,IAAI,YAAY,CAAC,MAAM;gBAAE,MAAM,cAAc,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,CAAC;YACxE,IAAI,eAAe,CAAC,MAAM;gBAAE,MAAM,cAAc,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC;QACnF,CAAC;KACF;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC;QAC7E,YAAY,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,yBAAyB,CAAC;QAClE,WAAW,EAAE,0CAA0C;QACvD,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,OAAO,CAAC,CAAC,MAAM,yBAAyB,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAElE,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,MAAM,aAAa,CAAC,IAAI,CAAC,YAAa,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QACjF,CAAC;KACF;IACD;QACE,IAAI,EAAE,oBAAoB;QAC1B,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,sBAAsB,CAAC;QACjF,YAAY,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,6BAA6B,CAAC;QACtE,WAAW,EAAE,oEAAoE;QACjF,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,OAAO,CAAC,CAAC,MAAM,yBAAyB,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,MAAM,aAAa,CAAC,IAAI,CAAC,YAAa,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QACjF,CAAC;KACF;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC;QAC9E,YAAY,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,0BAA0B,CAAC;QACnE,WAAW,EAAE,6EAA6E;QAC1F,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,OAAO,CAAC,CAAC,MAAM,yBAAyB,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,kEAAkE;YAClE,MAAM,aAAa,CAAC,IAAI,CAAC,YAAa,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QACjF,CAAC;KACF;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC;QAC7E,YAAY,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,yBAAyB,CAAC;QAClE,WAAW,EAAE,uCAAuC;QACpD,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,OAAO,CAAC,CAAC,MAAM,yBAAyB,CAAC,eAAe,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,MAAM,aAAa,CAAC,IAAI,CAAC,YAAa,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QACjF,CAAC;KACF;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE;QAClC,WAAW,EAAE,iDAAiD;QAC9D,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACzC,IAAI,KAAK;gBAAE,OAAO,IAAI,CAAC;YAEvB,MAAM,GAAG,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,CAAC;YAEpD,MAAM,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC;YAEzF,OAAO,CAAC,iBAAiB,CAAC;QAC5B,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,MAAM,GAAG,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,CAAC;YAEpD,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC,eAAK,CAAC,MAAM,CAAC,uCAAuC,CAAC,CAAC,CAAC;gBACpE,OAAO;aACR;YAED,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;YAEjC,OAAO,CAAC,GAAG,CACT,eAAK,CAAC,OAAO,CACX,0CAA0C,eAAK,CAAC,IAAI,CAClD,cAAc,CACf,2BAA2B,CAC7B,CACF,CAAC;YAEF,MAAM,kBAAE,CAAC,SAAS,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9F,CAAC;KACF;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC;QACvE,YAAY,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,4BAA4B,CAAC;QACrE,WAAW,EAAE,qEAAqE;QAClF,KAAK,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,CAAC,MAAM,kBAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACb;YACD,MAAM,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YAC5D,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;QAC7C,CAAC;QACD,KAAK,CAAC,aAAa,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE;YACxC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAE1D,0CAA0C;YAC1C,IAAI,CAAC,CAAC,MAAM,kBAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE;gBAC3C,OAAO,CAAC,GAAG,CACT,eAAK,CAAC,OAAO,CACX,wFAAwF,CACzF,CACF,CAAC;gBACF,MAAM,aAAa,CAAC,IAAI,CAAC,YAAa,EAAE,eAAe,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;aACjF;YAED,gDAAgD;YAChD,IAAI,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YAE1D,IAAI,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE;gBACtC,OAAO,CAAC,IAAI,CACV,eAAK,CAAC,MAAM,CAAC,gEAAgE,CAAC,CAC/E,CAAC;gBACF,OAAO;aACR;YAED,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,OAAO,CAAC,wDAAwD,CAAC,CAAC,CAAC;YAErF,MAAM,MAAM,GAAG;gBACb,EAAE;gBACF,aAAa,EAAE;gBACf,UAAU;gBACV,YAAY;gBACZ,cAAc;gBACd,eAAe;gBACf,OAAO;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,mBAAmB;gBACnB,UAAU;gBACV,WAAW;gBACX,UAAU;gBACV,OAAO;gBACP,sBAAsB;gBACtB,SAAS;gBACT,wBAAwB;gBACxB,OAAO;gBACP,SAAS;gBACT,2BAA2B;gBAC3B,EAAE;aACH,CAAC;YAEF,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,MAAM,kBAAE,CAAC,SAAS,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QAChD,CAAC;KACF;CACF,CAAC;AAEF,KAAK,UAAU,oBAAoB,CACjC,WAAmB;IAEnB,MAAM,GAAG,GAAG,uBAAc,CAAC,WAAW,CAAQ,CAAC;IAE/C,IAAI,CAAC,GAAG,CAAC,OAAO;QAAE,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;IAEnC,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { getPackageJson } from '@expo/config';\nimport { createForProject } from '@expo/package-manager';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\ntype SelectMethod = (context: { projectRoot: string; force: boolean }) => Promise<void>;\ntype EnabledMethod = (context: { projectRoot: string; force: boolean }) => Promise<boolean>;\n\ntype CustomizeOption = {\n  name: string;\n  type: 'custom' | 'required' | 'extra';\n  destinationPath: (projectRoot: string) => string;\n  templatePath?: string;\n  description: string;\n  onSelectAsync: SelectMethod;\n  onEnabledAsync: EnabledMethod;\n};\n\nconst generatedTag = `@generated: @expo/next-adapter@${\n  require('@expo/next-adapter/package.json').version\n}`;\n\nfunction createJSTag(): string {\n  return `// ${generatedTag}`;\n}\n\nfunction createBashTag(): string {\n  return `# ${generatedTag}`;\n}\n\nasync function copyFileAsync(\n  from: string,\n  to: string,\n  force: boolean,\n  tag?: string\n): Promise<void> {\n  if (!force && (await fs.pathExists(to))) {\n    throw new Error(`Cannot overwrite file at \"${to}\" without the \\`force\\` option`);\n  }\n  if (await fs.pathExists(from)) {\n    if (tag) {\n      const contents = await fs.readFile(from, 'utf8');\n\n      await fs.ensureDir(path.dirname(to));\n      await fs.writeFile(to, `${tag}\\n${contents}`);\n    } else {\n      await fs.copy(from, to, { overwrite: true, recursive: true });\n    }\n  } else {\n    throw new Error(`Expected template file for ${from} doesn't exist at path: ${to}`);\n  }\n}\n\nasync function projectHasLatestFileAsync(destinationPath: string, tag: string): Promise<boolean> {\n  if (await fs.pathExists(destinationPath)) {\n    const contents = await fs.readFile(destinationPath, 'utf8');\n    return contents.includes(tag);\n  }\n  return false;\n}\n\nconst packageRoot = path.join(__dirname, '../../');\n\nfunction getDependencies(\n  projectRoot: string\n): { dependencies: string[]; devDependencies: string[] } {\n  const dependencies = ['react-native-web', 'next'].filter(\n    dependency => !resolveFrom.silent(projectRoot, dependency)\n  );\n  const devDependencies = ['@expo/next-adapter', 'babel-preset-expo'].filter(\n    dependency => !resolveFrom.silent(projectRoot, dependency)\n  );\n\n  return { dependencies, devDependencies };\n}\n\nexport const manifest: CustomizeOption[] = [\n  {\n    name: 'Install Next.js dependencies',\n    type: 'required',\n    destinationPath: (projectRoot: string) => '',\n    description: 'Ensure your project has all of the required dependencies',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const { dependencies, devDependencies } = getDependencies(projectRoot);\n      const all = [...dependencies, ...devDependencies];\n      return !!all.length;\n    },\n    async onSelectAsync({ projectRoot }): Promise<void> {\n      const { dependencies, devDependencies } = getDependencies(projectRoot);\n      const all = [...dependencies, ...devDependencies];\n      if (!all.length) {\n        console.log(\n          chalk.magenta.dim(`\\u203A All of the required dependencies are installed already`)\n        );\n        return;\n      } else {\n        console.log(chalk.magenta(`\\u203A Installing the missing dependencies: ${all.join(', ')}`));\n      }\n\n      const packageManager = createForProject(projectRoot);\n\n      if (dependencies.length) await packageManager.addAsync(...dependencies);\n      if (devDependencies.length) await packageManager.addDevAsync(...devDependencies);\n    },\n  },\n  {\n    name: 'pages/index.js',\n    type: 'required',\n    destinationPath: projectRoot => path.resolve(projectRoot, './pages/index.js'),\n    templatePath: path.resolve(packageRoot, 'template/pages/index.js'),\n    description: 'the first page for your Next.js project.',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const destinationPath = this.destinationPath(projectRoot);\n      return !(await projectHasLatestFileAsync(destinationPath, createJSTag()));\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      console.log(chalk.magenta(`\\u203A Creating ${this.description}`));\n\n      const destinationPath = this.destinationPath(projectRoot);\n      await copyFileAsync(this.templatePath!, destinationPath, force, createJSTag());\n    },\n  },\n  {\n    name: 'pages/_document.js',\n    type: 'required',\n    destinationPath: projectRoot => path.resolve(projectRoot, './pages/_document.js'),\n    templatePath: path.resolve(packageRoot, 'template/pages/_document.js'),\n    description: 'a custom Next.js Document that ensures CSS-in-JS styles are setup.',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const destinationPath = this.destinationPath(projectRoot);\n      return !(await projectHasLatestFileAsync(destinationPath, createJSTag()));\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      console.log(chalk.magenta(`\\u203A Creating ${this.description}`));\n      const destinationPath = this.destinationPath(projectRoot);\n      await copyFileAsync(this.templatePath!, destinationPath, force, createJSTag());\n    },\n  },\n  {\n    name: 'babel.config.js',\n    type: 'required',\n    destinationPath: projectRoot => path.resolve(projectRoot, './babel.config.js'),\n    templatePath: path.resolve(packageRoot, 'template/babel.config.js'),\n    description: 'a universal Babel preset for loading projects in iOS, Android, and Next.js.',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const destinationPath = this.destinationPath(projectRoot);\n      return !(await projectHasLatestFileAsync(destinationPath, createJSTag()));\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      console.log(chalk.magenta(`\\u203A Creating ${this.description}`));\n      const destinationPath = this.destinationPath(projectRoot);\n      // TODO: Bacon: Handle the fact that this file will probably exist\n      await copyFileAsync(this.templatePath!, destinationPath, force, createJSTag());\n    },\n  },\n  {\n    name: 'next.config.js',\n    type: 'required',\n    destinationPath: projectRoot => path.resolve(projectRoot, './next.config.js'),\n    templatePath: path.resolve(packageRoot, 'template/next.config.js'),\n    description: 'the Next.js config with Expo support.',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const destinationPath = this.destinationPath(projectRoot);\n      return !(await projectHasLatestFileAsync(destinationPath, createJSTag()));\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      console.log(chalk.magenta(`\\u203A Creating ${this.description}`));\n      const destinationPath = this.destinationPath(projectRoot);\n      await copyFileAsync(this.templatePath!, destinationPath, force, createJSTag());\n    },\n  },\n  {\n    name: 'Add build script',\n    type: 'required',\n    destinationPath: projectRoot => '',\n    description: 'the build script required for deploying to now.',\n    async onEnabledAsync({ projectRoot, force }): Promise<boolean> {\n      if (force) return true;\n\n      const pkg = await readPackageJsonAsync(projectRoot);\n\n      const hasNowBuildScript = pkg.scripts.build && pkg.scripts.build.trim() === 'next build';\n\n      return !hasNowBuildScript;\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      const pkg = await readPackageJsonAsync(projectRoot);\n\n      if (!force && pkg.scripts.build) {\n        console.warn(chalk.yellow(`\\u203A A build script already exists.`));\n        return;\n      }\n\n      pkg.scripts.build = 'next build';\n\n      console.log(\n        chalk.magenta(\n          `\\u203A Adding a build script to your \\`${chalk.bold(\n            `package.json`\n          )}\\` for deployment to now.`\n        )\n      );\n\n      await fs.writeFile(path.resolve(projectRoot, 'package.json'), JSON.stringify(pkg, null, 2));\n    },\n  },\n  {\n    name: 'Update git ignore',\n    type: 'required',\n    destinationPath: projectRoot => path.resolve(projectRoot, '.gitignore'),\n    templatePath: path.resolve(packageRoot, 'template/default-gitignore'),\n    description: 'Ensure Next.js and Expo generated folders are ignored in .gitignore',\n    async onEnabledAsync({ projectRoot }): Promise<boolean> {\n      const destinationPath = this.destinationPath(projectRoot);\n      if (!(await fs.pathExists(destinationPath))) {\n        return true;\n      }\n      const contents = await fs.readFile(destinationPath, 'utf8');\n      return !contents.includes(createBashTag());\n    },\n    async onSelectAsync({ projectRoot, force }): Promise<void> {\n      const destinationPath = this.destinationPath(projectRoot);\n\n      // Ensure a default expo .gitignore exists\n      if (!(await fs.pathExists(destinationPath))) {\n        console.log(\n          chalk.magenta(\n            `\\u203A Creating a default .gitignore for a universal Expo project with Next.js support`\n          )\n        );\n        await copyFileAsync(this.templatePath!, destinationPath, true, createBashTag());\n      }\n\n      // Ensure the .gitignore has the required fields\n      let contents = await fs.readFile(destinationPath, 'utf8');\n\n      if (contents.includes(createBashTag())) {\n        console.warn(\n          chalk.yellow('The .gitignore already appears to contain expo generated files')\n        );\n        return;\n      }\n\n      console.log(chalk.magenta(`\\u203A Adding the generated folders to your .gitignore`));\n\n      const ignore = [\n        '',\n        createBashTag(),\n        '/.expo/*',\n        '# Expo Web',\n        '/web-build/*',\n        '# Expo Native',\n        '*.jks',\n        '*.p8',\n        '*.p12',\n        '*.key',\n        '*.mobileprovision',\n        '*.orig.*',\n        '# Next.js',\n        '/.next/*',\n        '/out/',\n        '# Next.js production',\n        '/build/',\n        '# Next.js dependencies',\n        '/.pnp',\n        '.pnp.js',\n        '# @end @expo/next-adapter',\n        '',\n      ];\n\n      contents += ignore.join('\\n');\n      await fs.writeFile(destinationPath, contents);\n    },\n  },\n];\n\nasync function readPackageJsonAsync(\n  projectRoot: string\n): Promise<{ scripts: { build?: string }; [key: string]: any }> {\n  const pkg = getPackageJson(projectRoot) as any;\n\n  if (!pkg.scripts) pkg.scripts = {};\n\n  return pkg;\n}\n"]}