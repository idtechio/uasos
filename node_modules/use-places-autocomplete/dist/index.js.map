{"version":3,"file":"index.js","sources":["../src/useLatest.ts","../src/utils.ts","../src/usePlacesAutocomplete.ts","../src/debounce.ts"],"sourcesContent":["import { RefObject, useRef } from \"react\";\n\nexport default <T>(val: T): RefObject<T> => {\n  const ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\n","/* eslint-disable compat/compat */\n\ntype GeoArgs = google.maps.GeocoderRequest;\n\ntype GeocodeResult = google.maps.GeocoderResult;\n\ntype GeoReturn = Promise<GeocodeResult[]>;\n\nexport const geocodeErr =\n  \"ðŸ’¡ use-places-autocomplete: Please provide an address when using getGeocode() with the componentRestrictions.\";\n\nexport const getGeocode = (args: GeoArgs): GeoReturn => {\n  const geocoder = new window.google.maps.Geocoder();\n\n  return new Promise((resolve, reject) => {\n    geocoder.geocode(args, (results, status) => {\n      if (status !== \"OK\") reject(status);\n      if (!args.address && args.componentRestrictions) {\n        console.error(geocodeErr);\n        resolve(results);\n      }\n      resolve(results);\n    });\n  });\n};\n\ntype LatLng = { lat: number; lng: number };\n\nexport const getLatLng = (result: GeocodeResult): LatLng => {\n  const { lat, lng } = result.geometry.location;\n  return { lat: lat(), lng: lng() };\n};\n\ntype ZipCode = string | undefined;\n\nexport const getZipCode = (\n  result: GeocodeResult,\n  useShortName: false\n): ZipCode => {\n  const foundZip = result.address_components.find(({ types }) =>\n    types.includes(\"postal_code\")\n  );\n\n  if (!foundZip) return undefined;\n\n  return useShortName ? foundZip.short_name : foundZip.long_name;\n};\n\ntype GetDetailsArgs = google.maps.places.PlaceDetailsRequest;\n\ntype DetailsResult = Promise<google.maps.places.PlaceResult | string>;\n\nexport const getDetailsErr =\n  \"ðŸ’¡ use-places-autocomplete: Please provide a place Id when using getDetails() either as a string or as part of an Autocomplete Prediction.\";\n\nexport const getDetails = (args: GetDetailsArgs): DetailsResult => {\n  const PlacesService = new window.google.maps.places.PlacesService(\n    document.createElement(\"div\")\n  );\n\n  if (!args.placeId) {\n    console.error(getDetailsErr);\n    return Promise.reject(getDetailsErr);\n  }\n\n  return new Promise((resolve, reject) => {\n    PlacesService.getDetails(args, (results, status) => {\n      if (status !== \"OK\") reject(status);\n      resolve(results);\n    });\n  });\n};\n","import { useState, useRef, useCallback, useEffect } from \"react\";\n\nimport useLatest from \"./useLatest\";\nimport _debounce from \"./debounce\";\n\nexport interface HookArgs {\n  requestOptions?: Omit<google.maps.places.AutocompletionRequest, \"input\">;\n  debounce?: number;\n  cache?: number | false;\n  cacheKey?: string;\n  googleMaps?: any;\n  callbackName?: string;\n  defaultValue?: string;\n  initOnMount?: boolean;\n}\n\ntype Suggestion = google.maps.places.AutocompletePrediction;\n\ntype Status = `${google.maps.places.PlacesServiceStatus}` | \"\";\n\ninterface Suggestions {\n  readonly loading: boolean;\n  readonly status: Status;\n  data: Suggestion[];\n}\n\ninterface SetValue {\n  (val: string, shouldFetchData?: boolean): void;\n}\n\ninterface HookReturn {\n  ready: boolean;\n  value: string;\n  suggestions: Suggestions;\n  setValue: SetValue;\n  clearSuggestions: () => void;\n  clearCache: (key?: string) => void;\n  init: () => void;\n}\n\nexport const loadApiErr =\n  \"ðŸ’¡ use-places-autocomplete: Google Maps Places API library must be loaded. See: https://github.com/wellyshen/use-places-autocomplete#load-the-library\";\n\nconst usePlacesAutocomplete = ({\n  requestOptions,\n  debounce = 200,\n  cache = 24 * 60 * 60,\n  cacheKey = \"upa\",\n  googleMaps,\n  callbackName,\n  defaultValue = \"\",\n  initOnMount = true,\n}: HookArgs = {}): HookReturn => {\n  const [ready, setReady] = useState(false);\n  const [value, setVal] = useState(defaultValue);\n  const [suggestions, setSuggestions] = useState<Suggestions>({\n    loading: false,\n    status: \"\",\n    data: [],\n  });\n  const asRef = useRef<google.maps.places.AutocompleteService>();\n  const requestOptionsRef = useLatest(requestOptions);\n  const googleMapsRef = useLatest(googleMaps);\n\n  const init = useCallback(() => {\n    if (asRef.current) return;\n\n    const { google } = window;\n    const { current: gMaps } = googleMapsRef;\n    const placesLib = gMaps?.places || google?.maps?.places;\n\n    if (!placesLib) {\n      console.error(loadApiErr);\n      return;\n    }\n\n    asRef.current = new placesLib.AutocompleteService();\n    setReady(true);\n  }, [googleMapsRef]);\n\n  const clearSuggestions = useCallback(() => {\n    setSuggestions({ loading: false, status: \"\", data: [] });\n  }, []);\n\n  const clearCache = useCallback(\n    (key = cacheKey) => {\n      try {\n        sessionStorage.removeItem(key);\n      } catch (error) {\n        // Skip exception\n      }\n    },\n    [cacheKey]\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const fetchPredictions = useCallback(\n    _debounce((val: string) => {\n      if (!val) {\n        clearSuggestions();\n        return;\n      }\n\n      setSuggestions((prevState) => ({ ...prevState, loading: true }));\n\n      let cachedData: Record<string, { data: Suggestion[]; maxAge: number }> =\n        {};\n\n      try {\n        cachedData = JSON.parse(sessionStorage.getItem(cacheKey) || \"{}\");\n      } catch (error) {\n        // Skip exception\n      }\n\n      if (cache) {\n        cachedData = Object.keys(cachedData).reduce(\n          (acc: typeof cachedData, key) => {\n            if (cachedData[key].maxAge - Date.now() >= 0)\n              acc[key] = cachedData[key];\n            return acc;\n          },\n          {}\n        );\n\n        if (cachedData[val]) {\n          setSuggestions({\n            loading: false,\n            status: \"OK\",\n            data: cachedData[val].data,\n          });\n          return;\n        }\n      }\n\n      asRef.current?.getPlacePredictions(\n        { ...requestOptionsRef.current, input: val },\n        (data: Suggestion[] | null, status: Status) => {\n          setSuggestions({ loading: false, status, data: data || [] });\n\n          if (cache && status === \"OK\") {\n            cachedData[val] = {\n              data: data as Suggestion[],\n              maxAge: Date.now() + cache * 1000,\n            };\n\n            try {\n              sessionStorage.setItem(cacheKey, JSON.stringify(cachedData));\n            } catch (error) {\n              // Skip exception\n            }\n          }\n        }\n      );\n    }, debounce),\n    [cache, cacheKey, clearSuggestions, requestOptionsRef]\n  );\n\n  const setValue: SetValue = useCallback(\n    (val, shouldFetchData = true) => {\n      setVal(val);\n      if (asRef.current && shouldFetchData) fetchPredictions(val);\n    },\n    [fetchPredictions]\n  );\n\n  useEffect(() => {\n    if (!initOnMount) return () => null;\n\n    const { google } = window;\n\n    if (!googleMapsRef.current && !google?.maps && callbackName) {\n      (window as any)[callbackName] = init;\n    } else {\n      init();\n    }\n\n    return () => {\n      // @ts-ignore\n      if ((window as any)[callbackName]) delete (window as any)[callbackName];\n    };\n  }, [callbackName, googleMapsRef, init, initOnMount]);\n\n  return {\n    ready,\n    value,\n    suggestions,\n    setValue,\n    clearSuggestions,\n    clearCache,\n    init,\n  };\n};\n\nexport default usePlacesAutocomplete;\n","export default <F extends (...args: any[]) => void>(\n  fn: F,\n  delay: number\n): ((this: ThisParameterType<F>, ...args: Parameters<F>) => void) => {\n  let timer: ReturnType<typeof setTimeout> | null;\n\n  // eslint-disable-next-line func-names\n  return function (this: ThisParameterType<F>, ...args: Parameters<F>) {\n    if (timer !== null) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    timer = setTimeout(() => fn.apply(this, args), delay);\n  };\n};\n"],"names":["useLatest","val","ref","useRef","current","getDetailsErr","_temp","fn","delay","timer","_ref","requestOptions","_ref$debounce","debounce","_ref$cache","cache","_ref$cacheKey","cacheKey","googleMaps","callbackName","_ref$defaultValue","defaultValue","_ref$initOnMount","initOnMount","useState","ready","_useState","setReady","value","_useState2","setVal","_useState3","loading","status","data","suggestions","setSuggestions","asRef","requestOptionsRef","googleMapsRef","init","useCallback","_google$maps","google","window","gMaps","placesLib","places","maps","AutocompleteService","console","error","clearSuggestions","clearCache","key","sessionStorage","removeItem","fetchPredictions","_asRef$current","prevState","_extends","cachedData","JSON","parse","getItem","Object","keys","reduce","acc","maxAge","Date","now","getPlacePredictions","input","setItem","stringify","_this","this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","setValue","shouldFetchData","useEffect","PlacesService","document","createElement","placeId","Promise","resolve","reject","getDetails","results","geocoder","Geocoder","geocode","address","componentRestrictions","result","_result$geometry$loca","geometry","location","lat","lng","useShortName","foundZip","address_components","find","types","includes","short_name","long_name"],"mappings":"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"}