"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = motify;

var _react = _interopRequireWildcard(require("react"));

var _useMapAnimateToStyle = require("./use-map-animate-to-style");

var _reactNativeReanimated = _interopRequireDefault(require("react-native-reanimated"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function motify(ComponentWithoutAnimation) {
  const Component = _reactNativeReanimated.default.createAnimatedComponent(ComponentWithoutAnimation);

  const withAnimations = () => {
    const Motified = /*#__PURE__*/(0, _react.forwardRef)(function Moti({
      animate,
      style,
      from,
      transition,
      delay,
      state,
      stylePriority,
      onDidAnimate,
      exit,
      animateInitialState,
      exitTransition,
      ...props
    }, ref) {
      const animated = (0, _useMapAnimateToStyle.useMotify)({
        animate,
        from,
        transition,
        delay,
        state,
        stylePriority,
        onDidAnimate,
        exit,
        exitTransition,
        animateInitialState
      });
      return /*#__PURE__*/_react.default.createElement(Component, _extends({}, props, {
        // TODO
        style: [style, animated.style],
        ref: ref // TODO

      }));
    });
    Motified.displayName = "Moti.".concat(Component.displayName || Component.name || 'NoName');
    return Motified;
  };

  return withAnimations;
}
//# sourceMappingURL=motify.js.map