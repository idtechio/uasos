{"version":3,"file":"hoverable.js","sourceRoot":"","sources":["../../../src/interactions/pressable/hoverable.tsx"],"names":[],"mappings":"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","sourcesContent":["// credit to https://gist.github.com/ianmartorell/32bb7df95e5eff0a5ee2b2f55095e6a6\n// this file was repurosed from there\n// via this issue https://gist.github.com/necolas/1c494e44e23eb7f8c5864a2fac66299a\n// because RNW's pressable doesn't bubble events to parent pressables: https://github.com/necolas/react-native-web/issues/1875\n// click listeners copied from https://gist.github.com/roryabraham/65cd1d2d5e8a48da78fec6a6e3105398\n\n/* eslint-disable no-inner-declarations */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment'\n\nlet isEnabled = false\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000\n  let lastTouchTimestamp = 0\n\n  const enableHover = () => {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return\n    }\n    isEnabled = true\n  }\n\n  const disableHover = () => {\n    lastTouchTimestamp = Date.now()\n    if (isEnabled) {\n      isEnabled = false\n    }\n  }\n\n  document.addEventListener('touchstart', disableHover, true)\n  document.addEventListener('touchmove', disableHover, true)\n  document.addEventListener('mousemove', enableHover, true)\n}\n\nfunction isHoverEnabled(): boolean {\n  return isEnabled\n}\n\nimport React, { useCallback, ReactChild, useRef, useEffect } from 'react'\nimport { useSharedValue, useAnimatedReaction } from 'react-native-reanimated'\nimport { HoveredContext } from './hoverable-context'\nimport { mergeRefs } from './merge-refs'\n\nexport interface HoverableProps {\n  onHoverIn?: () => void\n  onHoverOut?: () => void\n  children: NonNullable<ReactChild>\n  childRef?: React.Ref<any>\n}\n\nexport function Hoverable({\n  onHoverIn,\n  onHoverOut,\n  children,\n  childRef,\n}: HoverableProps) {\n  const isHovered = useSharedValue(false)\n\n  const hoverIn = useRef<undefined | (() => void)>(() => onHoverIn?.())\n  const hoverOut = useRef<undefined | (() => void)>(() => onHoverOut?.())\n\n  const localRef = useRef<HTMLDivElement>(null)\n\n  hoverIn.current = onHoverIn\n  hoverOut.current = onHoverOut\n\n  useEffect(\n    function disableHoverOnClickOutside() {\n      // https://gist.github.com/necolas/1c494e44e23eb7f8c5864a2fac66299a#gistcomment-3629646\n      const listener = (event: MouseEvent) => {\n        if (\n          localRef.current &&\n          event.target instanceof HTMLElement &&\n          !localRef.current.contains(event.target)\n        ) {\n          isHovered.value = false\n        }\n      }\n      document.addEventListener('mousedown', listener)\n\n      return () => {\n        document.removeEventListener('mousedown', listener)\n      }\n    },\n    [isHovered]\n  )\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useAnimatedReaction(\n    () => {\n      // hovering out via click won't trigger this\n      return isHovered.value\n    },\n    (hovered, previouslyHovered) => {\n      if (hovered !== previouslyHovered) {\n        if (hovered) {\n          hoverIn.current?.()\n        } else {\n          hoverOut.current?.()\n        }\n      }\n    },\n    []\n  )\n\n  const handleMouseEnter = useCallback(() => {\n    if (isHoverEnabled() && !isHovered.value) {\n      isHovered.value = true\n    }\n  }, [isHovered])\n\n  const handleMouseLeave = useCallback(() => {\n    if (isHovered.value) {\n      isHovered.value = false\n    }\n  }, [isHovered])\n\n  const child = React.Children.only(children) as React.ReactElement\n\n  return (\n    <HoveredContext.Provider value={isHovered}>\n      {React.cloneElement(child, {\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        ref: mergeRefs([localRef, childRef || null]),\n      })}\n    </HoveredContext.Provider>\n  )\n}\n"]}